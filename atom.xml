<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>山月半轮的博客</title>
  
  <subtitle>时光，不会辜负每个平静努力的人！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-11T15:48:57.917Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>YangDavid</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Codeforces Round #564 (Div. 1) 自闭记</title>
    <link href="http://yoursite.com/2019/06/08/Codeforces-Round-564-Div-1-%E8%87%AA%E9%97%AD%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/06/08/Codeforces-Round-564-Div-1-自闭记/</id>
    <published>2019-06-07T16:01:25.000Z</published>
    <updated>2019-06-11T15:48:57.917Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-Round-564-Div-1"><a href="#Codeforces-Round-564-Div-1" class="headerlink" title="Codeforces Round 564 (Div. 1)"></a>Codeforces Round 564 (Div. 1)</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C1</th><th style="text-align:center">C2</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">01:08</td><td style="text-align:center">01:34</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">462</td><td style="text-align:center">461</td><td style="text-align:center">213</td><td style="text-align:center">70</td><td style="text-align:center">22</td><td style="text-align:center">0</td><td style="text-align:center">0</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">模拟</td><td style="text-align:center">简单数学</td><td style="text-align:center">期望</td><td style="text-align:center">期望</td><td style="text-align:center">构造</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">2031</font></td><td style="text-align:center"><font color="green">1094</font></td><td style="text-align:center"><font color="green">1959</font></td><td style="text-align:center"><font color="green">1959</font></td><td style="text-align:center"><font color="grey">1079</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><ul><li>Solved during contest: <code>2/6</code> </li><li>Upsolved: <code>4/6</code></li><li>Orally upsolved: <code>4/6</code></li><li>Rank: <code>396/553</code></li><li>Rating: (-8)</li></ul><p>又是一个中国场，又是一个 Div. 1，又是一个被签到题吊打系列。。。题目质量还不错，可是不知道为什么，每次打 Div. 1 老是签到签不稳，这根本不行啊。然后 C 题都想对了，但是没时间写了。</p><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p>Contest ID: 1172</p><p><a href="https://codeforces.com/contest/1172" target="_blank" rel="noopener">Contest Link</a></p><p><a href="https://codeforces.com/contest/1172/problems" target="_blank" rel="noopener">Problemset Link</a></p><p><a href="https://codeforces.com/blog/entry/67511" target="_blank" rel="noopener">Editorial Link (en)</a></p><p><a href="https://ouuan.github.io/Codeforces-Round-564-%E4%B8%AD%E6%96%87%E9%A2%98%E8%A7%A3/" target="_blank" rel="noopener">Editorial Link(zh)</a></p><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Prob-A-麻烦的签到题"><a href="#Prob-A-麻烦的签到题" class="headerlink" title="Prob A. 麻烦的签到题"></a>Prob A. 麻烦的签到题</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>共有 $2n$ 张牌，其中有 $n$ 张是 0 ，另外 n 张分别是 $1,2, \ldots, n$ 。牌桌上有一个某 $n$ 张牌组成的队列，你手中则拿着剩下的 $n$ 张牌。你每次操作都是将手中的一张牌加入队列末尾，并且把队列头的牌加入手牌中。问至少需要几次可以使得队列中的牌从队列头到队列尾恰好为 $1,2,\ldots,n$ 。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>很令人讨厌的签到题，费了我一个小时时间，还 RE 了一次。我写的是贪心+大模拟，每一时刻都检查能否顺着把序列排列出来，如果可以，立即果断行动。否则，如果手中有0就打出0 ，没有 0 就打出最大的牌。可以证明次数不超过 $2n$ ，因此模拟即可。注意特判这种情况：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">5</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年06月07日 星期五 20时31分52秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">222222</span>;</span><br><span class="line"><span class="keyword">int</span> my[maxn], n, pile[maxn], start = <span class="number">-1</span>, zero, tim, match;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt; &gt; st;</span><br><span class="line"><span class="built_in">deque</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">0</span>) zero++;</span><br><span class="line">    <span class="keyword">else</span> st.insert(x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;my[i]);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;pile[i]);</span><br><span class="line">    <span class="keyword">bool</span> ok = <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">    againqaq:;</span><br><span class="line">    st.clear();</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) q.pop_back();</span><br><span class="line">    rep(i, n) q.push_back(pile[i]);</span><br><span class="line">    zero = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(pile[i] == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j= i + <span class="number">1</span>; j &lt;= n; ++j) <span class="keyword">if</span>(pile[j] != j - i + <span class="number">1</span>)</span><br><span class="line">                ok = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(ok) &#123;</span><br><span class="line">                match = n - i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> tim = max(tim, -pile[i] + i + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pile[i]) tim = max(tim, -pile[i] + i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(my[i] == <span class="number">0</span>) zero++;</span><br><span class="line">        <span class="keyword">else</span> st.insert(my[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> now = <span class="number">0</span>, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(now &lt; tim) match = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(now &lt; tim) &#123;</span><br><span class="line">        <span class="keyword">if</span>(zero) &#123;</span><br><span class="line">            zero--;</span><br><span class="line">            q.push_back(<span class="number">0</span>);</span><br><span class="line">            ins(q.front());</span><br><span class="line">            q.pop_front();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> po = *st.begin(); st.erase(po);</span><br><span class="line">            q.push_back(po);</span><br><span class="line">            tim = max(tim, now + n - po + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        now++, ans++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(match &lt; n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st.count(match + <span class="number">1</span>)) &#123;</span><br><span class="line">            ok = <span class="literal">false</span>;</span><br><span class="line">            now = ans = match = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">goto</span> againqaq;</span><br><span class="line">        &#125;</span><br><span class="line">        st.erase(match + <span class="number">1</span>);</span><br><span class="line">        q.push_back(match + <span class="number">1</span>);</span><br><span class="line">        ins(q.front());</span><br><span class="line">        q.pop_front();</span><br><span class="line">        match++, now++, ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-B-简单数学"><a href="#Prob-B-简单数学" class="headerlink" title="Prob B. 简单数学"></a>Prob B. 简单数学</h2><p>水题。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年06月07日 星期五 21时26分05秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">222222</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"><span class="keyword">int</span> n, xp, yp, sz[maxn], ans, fac[maxn], sons[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> fa)</span> </span>&#123;</span><br><span class="line">    sz[v] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : G[v]) <span class="keyword">if</span>(g != fa) &#123;</span><br><span class="line">        sons[v]++;</span><br><span class="line">        dfs(g, v);</span><br><span class="line">        sz[v] += sz[g];</span><br><span class="line">        ans = muln(ans, fac[sons[g] + <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(v == <span class="number">1</span>) ans = muln(ans, fac[sons[v]]);</span><br><span class="line">    <span class="comment">//ans = muln(ans, fac[sons]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt;= <span class="number">200010</span>; ++i)</span><br><span class="line">        fac[i] = muln(fac[i - <span class="number">1</span>], i);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n), ans = n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;xp, &amp;yp);</span><br><span class="line">        G[xp].push_back(yp);</span><br><span class="line">        G[yp].push_back(xp);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-C-概率"><a href="#Prob-C-概率" class="headerlink" title="Prob C. 概率"></a>Prob C. 概率</h2><p>结论一猜就中。暴力 dp 即可 $O(m^2)$ 。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年06月07日 星期五 21时59分19秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">222222</span>, maxm = <span class="number">3333</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y )</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>; </span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> qpow(x, MOD - <span class="number">2</span>); &#125;</span><br><span class="line"><span class="keyword">int</span> a[maxn], w[maxn], n, m, like, diss, tot, dp[maxm][maxm], _inv[maxm * <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> ans[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> _inv[x - tot + m]; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">upd</span><span class="params">(<span class="keyword">int</span> &amp;x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    x += y;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) <span class="keyword">return</span> x - MOD;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="keyword">return</span> x + MOD;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;w[i]);</span><br><span class="line">    rep(i, n) a[i] ? (like += w[i]) : (diss += w[i]);</span><br><span class="line">    tot = like + diss;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = max(<span class="number">0</span>, tot-m); i &lt;= tot+m; ++i) </span><br><span class="line">        _inv[i - tot + m] = inverse(i);</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> add = <span class="number">0</span>; add &lt;= i; ++add) &#123;</span><br><span class="line">            <span class="keyword">int</span> sub = i - add, nlike = like+add, ndiss = diss-sub;</span><br><span class="line">            <span class="keyword">int</span> ntot = nlike + ndiss, ntot_inv = inv(ntot);</span><br><span class="line">            upd(dp[i + <span class="number">1</span>][add], muln(dp[i][add], muln(ndiss, ntot_inv)));</span><br><span class="line">            upd(dp[i + <span class="number">1</span>][add + <span class="number">1</span>], muln(dp[i][add], muln(nlike, ntot_inv)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> exp_add = <span class="number">0</span>, exp_sub = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> add = <span class="number">0</span>; add &lt;= m; ++add) &#123;</span><br><span class="line">        upd(exp_add, muln(dp[m][add], add));</span><br><span class="line">        upd(exp_sub, muln(dp[m][add], m-add));</span><br><span class="line">    &#125;</span><br><span class="line">    exp_add = muln(exp_add, inverse(like));</span><br><span class="line">    exp_sub = muln(exp_sub, inverse(diss));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]) <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mo(w[i] + muln(w[i], exp_add))); </span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, mo(w[i] - muln(w[i], exp_sub)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-D-构造"><a href="#Prob-D-构造" class="headerlink" title="Prob D. 构造"></a>Prob D. 构造</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>在一个 $n\times n$ 的网格里放传送门，指定从第 $i$ 行进从第 $r_i$ 行出，从第 $i$ 列进从第 $c_i$列出，r, c 都是排列，求构造放置传送们的一种方案。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>考虑数学归纳法，只需要解决到第一行的和到第一列的。</p><ul><li><p>如果恰好第一行要到达第一行，第一列要到达第一列，那么就不用管，直接看下一行下一列；</p></li><li><p>否则记第 r 行将要到达第一行，第 c 列将要到达第一列，那么我就在 (r, 1) 和 (1, c) 这两个地方放传送门，并且将第 r 行的目标从第一行改为第一行的目标，把第 c 列的目标改为第一列的目标即可（这个过程本质是链表的删除操作）。由此归纳即可。</p></li></ul><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年06月11日 星期二 22时43分05秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;pii, pii&gt; ppp;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1111</span>;</span><br><span class="line"><span class="keyword">int</span> go_r[maxn], go_c[maxn], n, which_r[maxn], which_c[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;go_r[i]);</span><br><span class="line">        which_r[go_r[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;go_c[i]);</span><br><span class="line">        which_c[go_c[i]] = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;ppp&gt; ans;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(which_r[i] == i &amp;&amp; which_c[i] == i) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> r = which_r[i], c = which_c[i];</span><br><span class="line">        ans.push_back(&#123;&#123;which_r[i], i&#125;, &#123;i, which_c[i]&#125;&#125;);</span><br><span class="line">        which_r[go_r[i]] = r;</span><br><span class="line">        which_c[go_c[i]] = c;</span><br><span class="line">        go_r[r] = go_r[i];</span><br><span class="line">        go_c[c] = go_c[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> sz = ans.size();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, sz);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : ans)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d %d %d\n"</span>, g.first.first, g.first.second, g.second.first, g.second.second);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-E"><a href="#Prob-E" class="headerlink" title="Prob E."></a>Prob E.</h2><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Codeforces-Round-564-Div-1&quot;&gt;&lt;a href=&quot;#Codeforces-Round-564-Div-1&quot; class=&quot;headerlink&quot; title=&quot;Codeforces Round 564 (Div. 1)&quot;&gt;&lt;/a&gt;Codeforces Round 564 (Div. 1)&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;01:08&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;01:34&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;462&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;461&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;213&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;70&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;22&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;模拟&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;简单数学&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;期望&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;期望&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;2031&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1094&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1959&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1959&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;1079&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;2/6&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;396/553&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rating: (-8)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;又是一个中国场，又是一个 Div. 1，又是一个被签到题吊打系列。。。题目质量还不错，可是不知道为什么，每次打 Div. 1 老是签到签不稳，这根本不行啊。然后 C 题都想对了，但是没时间写了。&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="Codeforces" scheme="http://yoursite.com/tags/Codeforces/"/>
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>2019年ACM-ICPC陕西省赛游记</title>
    <link href="http://yoursite.com/2019/06/02/2019%E5%B9%B4ACM-ICPC%E9%99%95%E8%A5%BF%E7%9C%81%E8%B5%9B%E6%B8%B8%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/06/02/2019年ACM-ICPC陕西省赛游记/</id>
    <published>2019-06-02T13:15:01.000Z</published>
    <updated>2019-06-07T11:42:44.781Z</updated>
    
    <content type="html"><![CDATA[<h1 id="游记"><a href="#游记" class="headerlink" title="游记"></a>游记</h1><p>夺冠了！作为和  <font color="red"><b>nocriz</b></font>，<font color="red"><b>hdmmblz</b></font> 一起组队打的第一场比赛，这也算是一个开门红吧，这次的解题策略与团队合作等诸多方面都做得还不错，出的锅也不算特别多。不过这也仅仅是一个省赛，仅仅是一个起点，以后的路还长，以后的目标需要远大！我们有了方向，有了动力，更有了顶天立地的决心。</p><a id="more"></a><p>不过这次去除两个高中打星队我们才夺的冠，那两个队一个 11 题，一个 10 题，还是被高中省队爷吊打了啊，感觉还是要提高啊。（被“丁教练”教育了qaq）</p><p><img src="education-1.jpg" alt="被教育现场1"> </p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>上午 06:40 就早早地起床，集合，前往 XDU。路上水掉了 wzk 讲的一个张好风出的构造题，感觉海星。</p><p>到了 XDU ，拿好衣服之后打了一个极为自闭的热身赛。首先是发现电脑的 Ubuntu 双系统里面居然没有 vim，没有各种常见编辑器，打算换用 gedit 之后，发现居然没有网络，无法查看题面。一阵忙乱之中我们又改用 windows + Dev-cpp，结果发现电脑又没有 python，g++也没有加入 PATH 环境变量里。这时开始看热身赛的题目，wzk 几分钟秒掉了 A ，我提出了 B 题最短路+欧拉回路的做法，然而<strong>没有人熟悉欧拉回路怎么写</strong>！！！稍微讨论回忆了一下，构思好代码之后 wzk 开始写。cyy 和我思博了，一直对着 C 题自闭。最后 B 没写出来， C 也没做出来。结果 wzk 赛后直接一眼秒掉了 C。总的来看，热身赛什么环境也没来得及测，题目也只 A 了一道，感觉主要就是用来 rp++ 了。</p><p>下图是我们比赛的机位：</p><p><img src="place.jpg" alt="我们的机位（真乱！）"></p><h2 id="正赛"><a href="#正赛" class="headerlink" title="正赛"></a>正赛</h2><p>参加完豪华<del>（简单）</del>的露天开幕式之后马上就要正赛了，感觉心里还蛮没底的。稍微调整了下状态，比赛开始了（喂，比赛没开始为什么大家都开始启封试题册了啊！）。wzk 悄悄以惊人的手速 10 分钟 <strong>1A 了三道签到题EFL</strong> 并拿到了 E  题的一血，简直太强了，这三道题我场上甚至根本没看。</p><p>之后开始多线程， wzk 看 C 写 C，结果 wa 了；这大概经过了 20 分钟，与此同时我和 cyy 互相交换了 H，I，J 三道题的题意。I 题稍微讨论了一下就会了，wzk 打印了 C 题代码，cyy 给 wzk 讲了 I ，wzk 开始写。我发现 H 是擅长的构造，我又发现这题和华东师大校赛的 C 题极为相似，于是决定仔细想 H，过了一会儿就会做了，给 cyy 讲了做法，cyy 觉得很正确，于是我仔细构思了下代码，觉得很好写。wzk 写好 I了，可是 wa 了，找出了好几个细节错误。打印代码后，我上机写 H。cyy 和 wzk 一起小黄鸭，发现了所有错误，改了之后提交，总算<strong>通过了 I 题</strong>，并拿到了一血。过了一会儿，我写完了 H ，测了测样例，手测几组数据，觉得稳得很，于是提交，<strong>1A了 H 题</strong>，并且还拿到了这道题一血。这时我们的士气很高涨，排在 rank 1，I，H 题仅仅有我们队通过，第二名仅仅才 4 道题，拿了两个一血，时间也才仅仅过去 74 分钟。</p><p>继续多线程，wzk 发现交大“免费赠送AC帽”队拿到了 B 题的一血，于是跟了下榜，发现是思博题，于是开始写。cyy 提出几种 J 做法，感觉找到了靠谱做法了，于是又屯下一题。wzk <strong>A掉了 B 题</strong>，cyy 开始给 wzk 讲 J 题，我把没看的题目都看了一遍，主要在想 D 题。wzk 开写 B 了，cyy 提出 K 题解法，但是我有点怀疑正确性。wzk J 题神秘地 TLE 了，在我<del>强烈</del>要求下不辞辛劳把 <code>cin</code> 改为了 <code>fread+getchar</code> ，又手动开了 O3，Ofast，然后就神奇<strong>通过了 J 题</strong>。wzk 确认了 cyy K 题解法的正确性，cyy 上机写 K 题，用了 20 多分钟也写好<strong>过掉了 K 题</strong> 。</p><p>与此同时，我一直在试图对 D 题进入大型分类讨论。我分了一维三种情况以及二位的六种情况，都将思路整理到之上了。wzk 建议看一看 C ，这时我们才意识到 WA 了很久扔在那里的题目。wzk 打算写 A 题试一试，我和 cyy 想了 C 的一些假做法，最后得到的结论 wzk 说就是当时 wa 的代码的思路。我发现有个小情况忘记考虑了，加上去之后大家不太相信正确性，可是我觉得很稳，结果<strong>交上去就 AC 了C题</strong>。</p><p>这时已经封榜了，我们手上有DAG三道题，有 40 分钟的时间。D题所有情况已经讨论完成了，A 题wzk写好了，但是交上去铁定会 TLE。wzk 试图优化 A ，可是没什么头绪。 D 题代码量巨大，细节繁琐，我硬着头皮上去写，cyy 在旁别即时检查。结果最后 2 分钟终于写完了代码，可是没时间调试了，直接交上去 WA 了，本地测了下也过不了样例，没有办法了，被高中生吊打了。</p><p><img src="my-score.jpg" alt="最终提交情况"></p><p>比较幸运的是，正式选手中我们还是拿到了 rank 1，拿到了冠军奖杯。（免费赠送AC帽队第四，他们差点就也 9 题了，真为他们可惜 qwq）</p><p><img src="champion.jpg" alt="champion"></p><p>总的来看：</p><ul><li>Solved during contest: <code>9/12</code> </li><li>Upsolved: <code>9/12</code></li><li>Orally upsolved: <code>9/12</code></li><li>Rank: <code>1/105</code> (Official), <code>3/111</code> (Full rank)</li></ul><p>出现的问题集锦：</p><ul><li>（热身赛）没有人会熟练实现欧拉回路</li><li>大数据读入时仍使用 <code>cin</code></li><li>C 题 wzk 开始想的是正解，结果因为小情况 wa 而误以为算法假了</li><li>最后一个小时还是划了，D 讨论得还是不全面，主要是没有信心，写代码的时候中途我掉线了。</li><li>A 题写好后以为会 TLE 就没有提交，但实际上复杂度是正确的。</li></ul><p>做得比较好的地方集锦：</p><ul><li>基本做到了多线程</li><li>让 wzk 去签到</li><li>快速做出了构造题</li><li>cyy 力排众议，写了 K 题看似无脑的做法通过了</li><li>每次提交前的检查还算仔细</li></ul><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p><a href="http://acm.zju.edu.cn/onlinejudge/searchProblem.do?contestId=1&amp;titlefrom=0&amp;authorfrom=0&amp;sourcefrom=0&amp;query=The+2019+ICPC+China+Shaanxi+Provincial+Programming+Contest" target="_blank" rel="noopener">Practice Link</a></p><p><a href="scoreboard.pdf">Score Board</a>：</p><div class="row">    <embed src="scoreboard.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;游记&quot;&gt;&lt;a href=&quot;#游记&quot; class=&quot;headerlink&quot; title=&quot;游记&quot;&gt;&lt;/a&gt;游记&lt;/h1&gt;&lt;p&gt;夺冠了！作为和  &lt;font color=&quot;red&quot;&gt;&lt;b&gt;nocriz&lt;/b&gt;&lt;/font&gt;，&lt;font color=&quot;red&quot;&gt;&lt;b&gt;hdmmblz&lt;/b&gt;&lt;/font&gt; 一起组队打的第一场比赛，这也算是一个开门红吧，这次的解题策略与团队合作等诸多方面都做得还不错，出的锅也不算特别多。不过这也仅仅是一个省赛，仅仅是一个起点，以后的路还长，以后的目标需要远大！我们有了方向，有了动力，更有了顶天立地的决心。&lt;/p&gt;
    
    </summary>
    
      <category term="游记" scheme="http://yoursite.com/categories/%E6%B8%B8%E8%AE%B0/"/>
    
    
      <category term="ICPC" scheme="http://yoursite.com/tags/ICPC/"/>
    
  </entry>
  
  <entry>
    <title>一句话题解集锦</title>
    <link href="http://yoursite.com/2019/06/01/%E4%B8%80%E5%8F%A5%E8%AF%9D%E9%A2%98%E8%A7%A3%E9%9B%86%E9%94%A6/"/>
    <id>http://yoursite.com/2019/06/01/一句话题解集锦/</id>
    <published>2019-05-31T16:58:04.000Z</published>
    <updated>2019-06-11T15:35:00.605Z</updated>
    
    <content type="html"><![CDATA[<p>这篇博客主要用来记录平时偶然做到的比较有趣的杂题的简略题解。</p><a id="more"></a><h1 id="2019-5"><a href="#2019-5" class="headerlink" title="2019.5"></a>2019.5</h1><h2 id="2019-05-31"><a href="#2019-05-31" class="headerlink" title="2019.05.31"></a>2019.05.31</h2><p> (Virtual participation of Codeforces Round 562, solved 3/5, rank 118/454)</p><p><a href="https://codeforces.com/contest/1168/problem/A" target="_blank" rel="noopener">CF1168A</a>: 二分思博题。  </p><p><a href="https://codeforces.com/contest/1168/problem/B" target="_blank" rel="noopener">CF1168B</a>: 很有趣的暴力，复杂度证明用到这么一个结论：长度大于 9 的 01 串必定存在 $1\leq x,k \leq n$ 使得 $s_x=s_{x+k} = s_{s+2k}$   </p><p><a href="https://codeforces.com/contest/1168/problem/C" target="_blank" rel="noopener">CF1168C</a>: 按位考虑，在每一种数位如果转移一次不行，那么多次也不行。因此每个位置维护一个 $go_i$ 表示转移到的第一个第 $i$ 位是 1 的数的位置，$O(n\log^2 n)$ 即可预处理。询问时随便找到目标数 y 的一个数位，看原数这个数位要转移到的位置是否小于等于 y 即可。</p><h2 id="2019-06-01"><a href="#2019-06-01" class="headerlink" title="2019.06.01"></a>2019.06.01</h2><p><a href="https://atcoder.jp/contests/m-solutions2019" target="_blank" rel="noopener">AtCoder M-SOLUTIONS Programming Contest</a></p><p>AB: 思博题</p><p>C： 答案是这么一个式子：<br>$$<br>\frac{1}{1-c} \sum_{k=N}^{2N-1} \binom{k-1}{N-1} (A’^N B’^{k-N} + A’^{k-N}B’^{N})<br>$$<br>D: dfs一遍，每次回溯时给这个点标上当时最小的标号即可。</p><p>E：很 tricky 的一道题，除以 $d^k$ 之后变成：<br>$$<br>(\frac xd) \cdot (\frac xd+1) \cdot (\frac xd+2) \cdots \cdot (\frac xd+n-1)<br>$$<br>然后注意到模数是 $10^6+3$ ，因此 $\frac xd$ 这个分数可以表示为模意义整数，之后就是个前缀积水题了。</p><h2 id="2019-06-11"><a href="#2019-06-11" class="headerlink" title="2019.06.11"></a>2019.06.11</h2><p>补掉了 CF1172D 构造题。</p><p>口胡了 BZOJ1046 ，打算有时间开一个最长上升子序列的专题 Blog。</p><p>目前已有的题目：</p><p><a href="https://www.cometoj.com/contest/34/problem/E?problem_id=1477" target="_blank" rel="noopener">Comet OJ #0 E</a>  Problem setter: tangjz，牛逼题。</p><p><a href="https://cn.vjudge.net/problem/HDU-6284" target="_blank" rel="noopener">HDU 6824</a> 上次省赛训练时碰到的题目，和 Comet OJ 的那道题很相似。</p><p><a href="https://codeforces.com/contest/1097/problem/E" target="_blank" rel="noopener">Codeforces 1097E</a> Hello 2019 的题目，早就该补了，但是一直咕咕咕。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客主要用来记录平时偶然做到的比较有趣的杂题的简略题解。&lt;/p&gt;
    
    </summary>
    
      <category term="题解" scheme="http://yoursite.com/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
  </entry>
  
  <entry>
    <title>Gym 102192 训练报告</title>
    <link href="http://yoursite.com/2019/05/26/Gym-102192-%E8%AE%AD%E7%BB%83%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/05/26/Gym-102192-训练报告/</id>
    <published>2019-05-26T07:28:36.000Z</published>
    <updated>2019-06-02T16:32:15.620Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018-Chinese-Multi-University-Training-Nanjing-U-Contest"><a href="#2018-Chinese-Multi-University-Training-Nanjing-U-Contest" class="headerlink" title="2018 Chinese Multi-University Training, Nanjing U Contest"></a>2018 Chinese Multi-University Training, Nanjing U Contest</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th><th style="text-align:center">L</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">1:25</td><td style="text-align:center"></td><td style="text-align:center"><font color="red">(7)</font></td><td style="text-align:center">2:16</td><td style="text-align:center">0:17</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4:55</td><td style="text-align:center">2:35</td><td style="text-align:center"></td><td style="text-align:center">4:56</td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*7</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">308</td><td style="text-align:center">55</td><td style="text-align:center">2</td><td style="text-align:center">270</td><td style="text-align:center">811</td><td style="text-align:center">2</td><td style="text-align:center">12</td><td style="text-align:center">1</td><td style="text-align:center">20</td><td style="text-align:center">329</td><td style="text-align:center">18</td><td style="text-align:center">39</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">容斥</td><td style="text-align:center">几何</td><td style="text-align:center"></td><td style="text-align:center">构造</td><td style="text-align:center">模拟</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">SAM</td><td style="text-align:center">LIS</td><td style="text-align:center"></td><td style="text-align:center">贪心</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">1239</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">1586</font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy+</font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><p>真·第一次正式训练，感觉合作得还蛮愉快的。不过最后半个小时有点没有按照正式比赛要求，三人三机了。以后还是一定要避免这种问题，协商好上机时间，严格三人单机。</p><ul><li>Solved during contest: <code>6/12</code> </li><li>Upsolved: <code>7/12</code></li><li>Orally upsolved: <code>7/12</code></li><li>Rank: <code>25/824</code></li></ul><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p><a href="https://codeforces.com/gym/102192" target="_blank" rel="noopener">Contest Link</a></p><p><a href="Gym102192-statements.pdf">Statements</a></p><p><a href="solutions.pdf">Official Editorial</a></p><h2 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h2><p>开场我从中间看了 E，发现是个签到的模拟题，就开始写，17 分钟<strong>过了 E</strong>。</p><p>cyy 说 J 是思博题，于是上机写，我和 wzk 看了 A ，中途 wzk 提出 C 题的很难写的一种做法。又看了下 D，没什么思路，决定集中精力想 A 。 wzk 反应过来是一道容斥原理裸题，经过验证是正确的。于是让 cyy 下机小黄鸭，wzk 写 A ，但是交上去 WA 了。我提醒了一个可能爆 <code>int</code> 的地方，改了之后就 <strong>AC</strong> 了。</p><p>wzk 想要写 C，可是场上没什么人过；cyy 继续下机小黄鸭。我和 wzk 讨论起了 D 。对于都是偶数的情况，首先我提出了 $\max(h,w)$ 的显然构造，wzk 迅速提出了一种更优的 $\max (h,w) + \lfloor \frac{\min(h,w)}{2}\rfloor$ 的构造，我稍微魔改了一下，得到了稍微更优秀一些的  $\max (h,w) + \lceil\frac{\min(h,w)}{2}\rceil$ 的构造。我们一致认为已经足够优秀，于是写了一下这种做法，可是交上去还是 WA 了。wzk 马上反应出在最上面添加形如 <code>((((</code> 一行，最下面添加形如 <code>))))</code> 的一行更加优秀，答案变成了 $h+w-4$ 。这次的构造已经非常优秀了，于是魔改之后，我们<strong>过了 D</strong>。cyy J 题总算也调完了，交上去一发<strong>过了 J</strong>。这时排名大概 60 左右，感觉还不怎么行。</p><p>下面又进入了一段机位空出来的时间，没有新的题可以做了。wzk 打算写 C 题，场上 B 题过了一大片，可是没想好怎么做。和 cyy 大致讨论了一些情况，可是谁都没有底去写。 wzk 说 C 题快调试完了，就没去管。我给 cyy 说了字符串题 I 题，cyy 提出了 SAM 建出后缀树树链剖分，再加一个线段树维护答案的不可写做法。 cyy 将其简化为了广义 SAM + 虚树 + 线段树合并 + 线段树的 <del>同样不可写的</del> 做法， cyy 开始构思代码。我发现榜上 L 题通过人数增长很快，费了好大力气读懂了题目，发现可能直接贪心就完事了。和 cyy 讨论了一下，发现和校赛 B 有点类似，可能直接用一个 <code>map</code> 维护就可以了。可是需要支持一个类似平衡树 <code>split</code> 的一个毒瘤操作，感觉有点坨屎。后来我发现直接暴力删除，复杂度就是对的，构思了下代码，觉得很可写。这时已经 <code>4:20</code> ，wzk 的 C 题莫名奇妙地 RE 了。这时分歧出现了，我要写 L 题，cyy 想写 I 题，wzk 想调试 C 题。由于时间不多，只好三人三机了一会儿。最后 <code>4:55</code> 左右，我和 cyy 同时写完了。我一发过了样例，稍微小黄鸭一下改了一个很傻的错误，心里很没底就交了。 cyy 稍微靠前 1 分钟的时候交了。这时 cf 返回了两个 AC，<strong>过掉了I和L两道题</strong> 。于是最终排名看起来还行。</p><p>比赛过程出现的锅：</p><ul><li>A 题有个地方忘记开 <code>long long</code></li><li>J  题没有想好就开始写，浪费不少机时</li><li>B 题思博题，没有人想去写，结果最后就没有过</li><li>中期一直卡在 C 题上，花费了不少机时，最后 IL 两道题都比较有思路，只得三人三机了一会儿。正式比赛还-是要避免这种问题。</li></ul><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><p>已知的题目难度顺序：</p><ul><li>Very Easy：E</li><li>Easy: A, D, J</li><li>Mid Easy: L</li><li>Mid Hard: I</li></ul><h2 id="Prob-A-容斥"><a href="#Prob-A-容斥" class="headerlink" title="Prob A. 容斥"></a>Prob A. 容斥</h2><blockquote><p><em>Solved by nocriz at 01:25 (+1)</em></p></blockquote><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给定 $n,m,k$ 求多项式：<br>$$<br>(1+x+x^2+\cdots+x^{n-1})^m<br>$$<br>的 $k$ 次方项的值。</p><p>数据范围：多组询问，$T\leq 400 ,n,m,k\leq 10^5, \sum n, \sum m,\sum k \leq 2\cdot 10^6$</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>考虑组合意义，$m$ 个 $[0,n-1]$ 之间的数要凑出 k 的方案数。假如没有 $n-1$ 的限制多简单啊，直接答案就是组合数 $\binom{k+m-1}{m-1}$。可是如果有限制，我们就可以考虑容斥原理。考虑至少有 $i$ 个数超过限制的方案数，那么首先把这 i 个数选出来之后，就是要凑出 $k-in$ 的方案数了。所以至少有 i 个数的答案为：<br>$$<br>f(i) = \binom{m}{i} \cdot \binom{k-in+m-1}{m-1}<br>$$<br>最终总的答案为：<br>$$<br>ans = \sum_{i=0}^{\lfloor \frac ik \rfloor} f(i) \cdot  (-1)^i<br>$$</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a+b)&gt;=mod?a+b-mod:a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (a-b)&lt;<span class="number">0</span>?a-b+mod:a-b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sq</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;<span class="keyword">return</span> <span class="number">1l</span>l*x*x%mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mul</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> <span class="number">1l</span>l*a*b%mod;&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?<span class="number">1</span>:((b&amp;<span class="number">1</span>)?mul(a,sq(<span class="built_in">pow</span>(a,b/<span class="number">2</span>))):(sq(<span class="built_in">pow</span>(a,b/<span class="number">2</span>))));&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">200010</span>;</span><br><span class="line"><span class="keyword">int</span> fac[N],invfac[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">int</span> m)</span></span>&#123;<span class="keyword">return</span> mul(fac[n],mul(invfac[m],invfac[n-m]));&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">fac[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;i++)&#123;</span><br><span class="line">fac[i] = mul(fac[i<span class="number">-1</span>],i);</span><br><span class="line">&#125;</span><br><span class="line">invfac[N<span class="number">-1</span>] = <span class="built_in">pow</span>(fac[N<span class="number">-1</span>],mod<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N<span class="number">-2</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">invfac[i] = mul(invfac[i+<span class="number">1</span>],i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout&lt;&lt;C(6,4)&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">1l</span>l*(n<span class="number">-1</span>)*m&lt;k)&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i*n&lt;=k;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">ans = sub(ans,mul(C(k-i*n+m<span class="number">-1</span>,m<span class="number">-1</span>),C(m,i)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">ans = add(ans,mul(C(k-i*n+m<span class="number">-1</span>,m<span class="number">-1</span>),C(m,i)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h2><h2 id="Prob-C"><a href="#Prob-C" class="headerlink" title="Prob C."></a>Prob C.</h2><h2 id="Prob-D-构造好题"><a href="#Prob-D-构造好题" class="headerlink" title="Prob D. 构造好题"></a>Prob D. 构造好题</h2><blockquote><p><em>Solved by nocriz at 02:16 (+1)</em></p></blockquote><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>称一个括号矩阵的行是好的，当且仅当这一行从左往右读得到的括号序列是匹配的；称一个列是好的，当且仅当这一列从上往下读是匹配的。现在你需要构造一个 $h\times w$ 的括号矩阵，使得好的行的数目+好的列的数目最大。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>当行或者列有至少一个是奇数时，问题都变得很平凡。</p><p>当行或者列都是偶数时，特判掉一些小情况，然后对于大情况考虑下面的构造：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">((((((((</span><br><span class="line">(()()())</span><br><span class="line">()()()()</span><br><span class="line">(()()())</span><br><span class="line">()()()()</span><br><span class="line">))))))))</span><br></pre></td></tr></table></figure><p>即：第一行、最后一行、第一列、最后一列如上图那样，其他行没两行循环一次这样构造。可以看到只有第一行、最后一行、第一列、最后一列没有匹配，答案是 $h+w-4$ 。应当可以证明对于大情况，这种构造是最优的。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> ans[<span class="number">220</span>][<span class="number">220</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n,m,swped = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mp</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">char</span> c)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(swped)swap(i,j);</span><br><span class="line">ans[i][j] = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">swped = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="comment">//cerr&lt;&lt;"Case :"&lt;&lt;n&lt;&lt;' '&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(m%<span class="number">2</span> == <span class="number">1</span> ||  (n%<span class="number">2</span> == <span class="number">0</span> &amp;&amp; n&lt;m))&#123;</span><br><span class="line">swped = <span class="number">1</span>;</span><br><span class="line">swap(n,m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cerr&lt;&lt;n&lt;&lt;' '&lt;&lt;m&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&amp;<span class="number">1</span>) mp(i,j,<span class="string">')'</span>);</span><br><span class="line"><span class="keyword">else</span> mp(i,j,<span class="string">'('</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mp(i,<span class="number">0</span>,<span class="string">'('</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m<span class="number">-2</span>;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(j&amp;<span class="number">1</span>) mp(i,j+<span class="number">1</span>,<span class="string">')'</span>);</span><br><span class="line"><span class="keyword">else</span> mp(i,j+<span class="number">1</span>,<span class="string">'('</span>);</span><br><span class="line">&#125;</span><br><span class="line">mp(i,m<span class="number">-1</span>,<span class="string">')'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m&gt;<span class="number">6</span> &amp;&amp; n%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)mp(<span class="number">0</span>,i,<span class="string">'('</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)mp(n<span class="number">-1</span>,i,<span class="string">')'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(swped)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)<span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">cout</span>&lt;&lt;ans[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-E-模拟"><a href="#Prob-E-模拟" class="headerlink" title="Prob E. 模拟"></a>Prob E. 模拟</h2><blockquote><p><em>Solved by YangDavid at 00:17 (+)</em></p></blockquote><p>模拟题意即可。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年05月26日 星期日 21时32分31秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">10</span>][<span class="number">10</span>], op[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Clock</span><span class="params">(<span class="keyword">char</span>&amp; a, <span class="keyword">char</span>&amp; b, <span class="keyword">char</span> &amp;d, <span class="keyword">char</span> &amp;e)</span> </span>&#123;</span><br><span class="line">swap(a, d);</span><br><span class="line">swap(d, e);</span><br><span class="line">swap(e, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc</span><span class="params">(<span class="keyword">char</span> &amp;a, <span class="keyword">char</span> &amp;b, <span class="keyword">char</span> &amp;d,<span class="keyword">char</span> &amp;e)</span> </span>&#123;</span><br><span class="line">swap(b, e);</span><br><span class="line">swap(d, e);</span><br><span class="line">swap(d, a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">rep(i, <span class="number">3</span>) <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a[i] + <span class="number">1</span>);</span><br><span class="line">rep(i, n) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, op);</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'1'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">1</span>] == <span class="string">'C'</span>) &#123;</span><br><span class="line">Clock(a[<span class="number">1</span>][<span class="number">1</span>], a[<span class="number">1</span>][<span class="number">2</span>], a[<span class="number">2</span>][<span class="number">1</span>], a[<span class="number">2</span>][<span class="number">2</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> rc(a[<span class="number">1</span>][<span class="number">1</span>], a[<span class="number">1</span>][<span class="number">2</span>], a[<span class="number">2</span>][<span class="number">1</span>], a[<span class="number">2</span>][<span class="number">2</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'2'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">1</span>] == <span class="string">'C'</span>) &#123;</span><br><span class="line">Clock(a[<span class="number">1</span>][<span class="number">2</span>], a[<span class="number">1</span>][<span class="number">3</span>], a[<span class="number">2</span>][<span class="number">2</span>], a[<span class="number">2</span>][<span class="number">3</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> rc(a[<span class="number">1</span>][<span class="number">2</span>], a[<span class="number">1</span>][<span class="number">3</span>], a[<span class="number">2</span>][<span class="number">2</span>], a[<span class="number">2</span>][<span class="number">3</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'3'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">1</span>] == <span class="string">'C'</span>) &#123;</span><br><span class="line">Clock(a[<span class="number">2</span>][<span class="number">1</span>], a[<span class="number">2</span>][<span class="number">2</span>], a[<span class="number">3</span>][<span class="number">1</span>], a[<span class="number">3</span>][<span class="number">2</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> rc(a[<span class="number">2</span>][<span class="number">1</span>], a[<span class="number">2</span>][<span class="number">2</span>], a[<span class="number">3</span>][<span class="number">1</span>], a[<span class="number">3</span>][<span class="number">2</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">'4'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(op[<span class="number">1</span>] == <span class="string">'C'</span>) &#123;</span><br><span class="line">Clock(a[<span class="number">2</span>][<span class="number">2</span>], a[<span class="number">2</span>][<span class="number">3</span>], a[<span class="number">3</span>][<span class="number">2</span>], a[<span class="number">3</span>][<span class="number">3</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> rc(a[<span class="number">2</span>][<span class="number">2</span>],a[<span class="number">2</span>][<span class="number">3</span>], a[<span class="number">3</span>][<span class="number">2</span>], a[<span class="number">3</span>][<span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">rep(i, <span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, a[i] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--) &#123;</span><br><span class="line">solve();</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2><h2 id="Prob-G"><a href="#Prob-G" class="headerlink" title="Prob G."></a>Prob G.</h2><h2 id="Prob-H"><a href="#Prob-H" class="headerlink" title="Prob H."></a>Prob H.</h2><h2 id="Prob-I-广义后缀自动机"><a href="#Prob-I-广义后缀自动机" class="headerlink" title="Prob I. 广义后缀自动机"></a>Prob I. 广义后缀自动机</h2><blockquote><p><em>Solved by hdmmblz at 04:55 (+)</em></p></blockquote><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>待更。</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>待更。</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">suffix_automaton</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="built_in">string</span> s;</span><br><span class="line">    <span class="keyword">int</span> son[<span class="number">1000005</span>][<span class="number">26</span>],pre[<span class="number">1000005</span>],step[<span class="number">1000005</span>],last,total,rt[<span class="number">1000005</span>];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push_back</span><span class="params">(<span class="keyword">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">step[++total]=v;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        total=last=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(son,<span class="number">0</span>,<span class="keyword">sizeof</span>(son));</span><br><span class="line">        <span class="built_in">memset</span>(pre,<span class="number">0</span>,<span class="keyword">sizeof</span>(pre));</span><br><span class="line">        <span class="built_in">memset</span>(step,<span class="number">0</span>,<span class="keyword">sizeof</span>(step));</span><br><span class="line">        pre[<span class="number">0</span>]=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(<span class="keyword">int</span> ch)</span></span>&#123;</span><br><span class="line">        push_back(step[last]+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> p=last,np=total,q,nq;</span><br><span class="line">        rt[np]++;</span><br><span class="line">        <span class="keyword">for</span>(;!son[p][ch]&amp;&amp;p!=<span class="number">-1</span>;p=pre[p])son[p][ch]=np;</span><br><span class="line">        <span class="keyword">if</span>(p==<span class="number">-1</span>)pre[np]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">            q=son[p][ch];</span><br><span class="line">            <span class="keyword">if</span>(step[q]!=step[p]+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">                push_back(step[p]+<span class="number">1</span>);</span><br><span class="line">                nq=total;</span><br><span class="line">                <span class="built_in">memcpy</span>(son[nq],son[q],<span class="keyword">sizeof</span>(son[q]));</span><br><span class="line">                pre[nq]=pre[q];</span><br><span class="line">                pre[q]=pre[np]=nq;</span><br><span class="line">                rt[nq]=rt[q];</span><br><span class="line">                <span class="keyword">for</span>(;son[p][ch]==q;p=pre[p])son[p][ch]=nq;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> pre[np]=q;</span><br><span class="line">        &#125;</span><br><span class="line">        last=np;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;suf;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">quickpow</span><span class="params">(ll x,ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    ll res=quickpow(x*x%mod,n/<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(n%<span class="number">2</span>)res=res*x%mod;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">int</span> n,m,p,mxlen;  </span><br><span class="line"><span class="built_in">string</span> str[<span class="number">1000005</span>];</span><br><span class="line">ll ans[<span class="number">1000005</span>],h[<span class="number">1000005</span>],val[<span class="number">1000005</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">1000005</span>];</span><br><span class="line">ll fac[<span class="number">1000005</span>],inv[<span class="number">1000005</span>],pw;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;    </span><br><span class="line">    suf.init();</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">cin</span>&gt;&gt;str[i],mxlen=max(mxlen,(<span class="keyword">int</span>)str[i].size());</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;h[i]);</span><br><span class="line">    pw=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=mxlen;i++)</span><br><span class="line">&#123;</span><br><span class="line">        pw=pw*<span class="number">26</span>%mod;</span><br><span class="line">        fac[i]=(fac[i<span class="number">-1</span>]+pw)%mod;</span><br><span class="line">        inv[i]=quickpow(fac[i],mod<span class="number">-2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123; </span><br><span class="line">        suf.last=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;str[i].size();j++)</span><br><span class="line">&#123;</span><br><span class="line">            <span class="keyword">int</span> np=suf.son[suf.last][str[i][j]-<span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(np==<span class="number">0</span>||suf.step[np]!=j+<span class="number">1</span>) suf.extend(str[i][j]-<span class="string">'a'</span>);</span><br><span class="line">            <span class="keyword">else</span> suf.last=np;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">        p=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;str[i].size();j++)</span><br><span class="line">&#123;</span><br><span class="line">            p=suf.son[p][str[i][j]-<span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">int</span> prep=p;</span><br><span class="line">            <span class="keyword">while</span>(prep!=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">                <span class="keyword">if</span>(vis[prep]==i+<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">                vis[prep]=i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(!val[prep]) val[prep]=h[i];</span><br><span class="line">                <span class="keyword">else</span> val[prep]=val[prep]*h[i]%mod;</span><br><span class="line">                prep=suf.pre[prep];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">for</span>(i=suf.total;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">        (ans[suf.step[suf.pre[i]]+<span class="number">1</span>]+=val[i])%mod;</span><br><span class="line">        (ans[suf.step[i]+<span class="number">1</span>]-=val[i])%mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=mxlen;i++)ans[i]=(ans[i]+ans[i<span class="number">-1</span>]+mod)%mod;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=mxlen;i++)ans[i]=(ans[i]+ans[i<span class="number">-1</span>]+mod)%mod;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">int</span> len;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;len);</span><br><span class="line">        len=min(len,mxlen);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans[len]*inv[len]%mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-J-LIS"><a href="#Prob-J-LIS" class="headerlink" title="Prob J. LIS"></a>Prob J. LIS</h2><blockquote><p><em>Solved by hdmmblz at 02:35 (+)</em></p></blockquote><h3 id="Description-3"><a href="#Description-3" class="headerlink" title="Description"></a>Description</h3><p>待更。</p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><p>待更。</p><h3 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,i,Q,s1[<span class="number">200005</span>],T,m,s2[<span class="number">200005</span>],sq,ans[<span class="number">200005</span>],val[<span class="number">200005</span>],stk[<span class="number">200005</span>],bag,a[<span class="number">200005</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> pos,num,id;</span><br><span class="line">&#125;query[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a, node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.pos&gt;b.pos;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fin</span><span class="params">(<span class="keyword">int</span> *gg, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mid;</span><br><span class="line"><span class="keyword">if</span> (gg[r]&lt;=x)<span class="keyword">return</span> r;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line">mid=(l+r+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (gg[mid] &lt;= x)l=mid;</span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span> (T--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;q);</span><br><span class="line"><span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="keyword">sizeof</span>(ans));</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(s1));</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(s2));</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(val));</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(stk));</span><br><span class="line"><span class="built_in">memset</span>(s1,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">bag=n; sq=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> last=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="keyword">if</span> (last&lt;a[i])</span><br><span class="line">&#123;</span><br><span class="line">s1[++sq]=i;s2[sq]=a[i];last=a[i];</span><br><span class="line">&#125;</span><br><span class="line">val[i]=sq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=q;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;query[i].pos,&amp;query[i].num);</span><br><span class="line">query[i].id=i;</span><br><span class="line">&#125;</span><br><span class="line">s2[<span class="number">0</span>]=<span class="number">-1e9</span>;s1[<span class="number">0</span>]=<span class="number">0</span>;s1[sq+<span class="number">1</span>]=s2[sq+<span class="number">1</span>]=<span class="number">1e9</span>;</span><br><span class="line">sort(query+<span class="number">1</span>,query+<span class="number">1</span>+q,cmp);</span><br><span class="line"><span class="keyword">for</span> (i=n,Q=<span class="number">1</span>;i&gt;=<span class="number">1</span>;)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (query[Q].pos == i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> &amp;res = ans[query[Q].id];</span><br><span class="line">res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> left;</span><br><span class="line"><span class="keyword">if</span> (s1[sq]&lt;query[Q].pos)</span><br><span class="line">&#123;</span><br><span class="line">left= sq;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> left=fin(s1,<span class="number">0</span>,sq,i);</span><br><span class="line"><span class="keyword">if</span>(s1[left]==i)left--;</span><br><span class="line">res=left;</span><br><span class="line"><span class="keyword">if</span> (s2[left]&lt;query[Q].num)res++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">query[Q].num=s2[left];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (stk[bag]&gt;query[Q].num)</span><br><span class="line">&#123;</span><br><span class="line">res+=n-bag+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(stk[n]&gt;query[Q].num)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> pps=fin(stk,bag,n,query[Q].num);</span><br><span class="line">res+=n-pps;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">Q++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(stk[bag]&gt;a[i])</span><br><span class="line">&#123;</span><br><span class="line">stk[--bag]=a[i--];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> pos=fin(stk,bag,n,a[i]);</span><br><span class="line">stk[pos]=a[i--];bag=pos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=q;i++)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-K"><a href="#Prob-K" class="headerlink" title="Prob K."></a>Prob K.</h2><h2 id="Prob-L-贪心"><a href="#Prob-L-贪心" class="headerlink" title="Prob L. 贪心"></a>Prob L. 贪心</h2><blockquote><p><em>Solved by YangDavid at 04:56 (+)</em></p></blockquote><h3 id="Description-4"><a href="#Description-4" class="headerlink" title="Description"></a>Description</h3><p>你开着一家公司生产电脑，一共有 $k$ 天，但是每一天的行情都会有所变化。具体来说，第 $i$ 天收到的客户需求为 $d_i$ 台电脑，购买 1 份原件的价格为 $c_i$ ，将 1 份原件组装成一台电脑的成本 $m_i$ ，每天最多组装 $p_i$ 台电脑。为了起到一定缓冲作用，公司拥有一个仓库，可以无限存放原件，但是从第 $i$ 天到第 $i+1$ 天的时间段里最多存放 $e_i$ 台电脑，并且存放 1 份原件需要 $R_i$ 的费用，存放 1 台电脑需要 $E_i$ 的费用。</p><p>现在把上面的信息都给你，你能够满足客户的需求吗？如果可以，你所花费的最小成本是多少？</p><p>数据范围：$T \leq 200$ 组数据，每组 $k\leq 50000$ ，其他值的值域 $[0, 10000]$</p><h3 id="Solution-4"><a href="#Solution-4" class="headerlink" title="Solution"></a>Solution</h3><p>这道题直接贪心即可。能否满足客户需求是很平凡的问题，下面具体叙述贪心求最小成本的过程。</p><p>首先因为原件没有容量限制，每天买电脑的成本是可以贪心的。第 $i$ 天买电脑的最优成本为 ：<br>$$<br>best_i = \min (c_i, \min_{1\leq j&lt;i} (best_j + \sum_{k=j}^{i-1} R_k))<br>$$<br>实际上直接用一个变量维护一个之前的最优答案即可。</p><p>之后用类似于校赛 B 题的做法，我们考虑把电脑购买成本塞进<code>map</code> 里，即直接用 <code>map</code> 维护所有决策，电脑的购买成本。<code>map[i]=j</code> 表示单价为 $i$ 的电脑有 $j$ 个。每次处理需求就是从 map 删去前 $d_i$ 小，然后加进答案；处理仓库缩小的情况就是删去多余的大的元素。这两个直接暴力就可以了，因为每一天最多在 map 里插入一个元素。由此均摊下来复杂度是 $O(T\cdot k\log k)$ 的，可以轻松通过此题。</p><h3 id="Code-4"><a href="#Code-4" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年05月26日 星期日 17时55分19秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">333333</span>;</span><br><span class="line"><span class="keyword">int</span> k, c[maxn], d[maxn], m[maxn], p[maxn], e[maxn], R[maxn], E[maxn], n;</span><br><span class="line"><span class="keyword">int</span> pref[maxn];</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; mp;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">mp.clear();</span><br><span class="line"><span class="keyword">int</span> _tot = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;n);</span><br><span class="line">rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld%lld"</span>, &amp;c[i], &amp;d[i], &amp;m[i], &amp;p[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>, &amp;e[i], &amp;R[i], &amp;E[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">_tot = min(_tot, e[i - <span class="number">1</span>]);</span><br><span class="line">_tot += p[i];</span><br><span class="line">_tot -= d[i];</span><br><span class="line"><span class="keyword">if</span>(_tot &lt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> best = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">c[i] = min(c[i], best + R[i<span class="number">-1</span>]);</span><br><span class="line">best = c[i];</span><br><span class="line">&#125;</span><br><span class="line">pref[<span class="number">1</span>] = E[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">   pref[i] = pref[i - <span class="number">1</span>] + E[i];</span><br><span class="line">ll ans = <span class="number">0</span>; _tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> np = m[i] + c[i] - pref[i - <span class="number">1</span>], del = d[i];</span><br><span class="line">mp[np] += p[i], _tot += p[i];</span><br><span class="line"><span class="keyword">while</span>(del) &#123;</span><br><span class="line"><span class="keyword">auto</span> it = mp.begin();</span><br><span class="line"><span class="keyword">int</span> elim = min(it-&gt;second, del);</span><br><span class="line">del -= elim, it-&gt;second -= elim;</span><br><span class="line">_tot -= elim;</span><br><span class="line">ans += <span class="number">1L</span>L * elim * (it-&gt;first + pref[i - <span class="number">1</span>]);</span><br><span class="line"><span class="keyword">if</span>(it-&gt;second == <span class="number">0</span>) mp.erase(it);</span><br><span class="line">&#125;</span><br><span class="line">del = max(<span class="number">0L</span>L, _tot - e[i]);</span><br><span class="line"><span class="keyword">while</span>(del) &#123;</span><br><span class="line"><span class="keyword">auto</span> it = mp.rbegin();</span><br><span class="line"><span class="keyword">int</span> elim = min(it-&gt;second, del);</span><br><span class="line">del -= elim, it-&gt;second -= elim;</span><br><span class="line">_tot -= elim;</span><br><span class="line"><span class="keyword">if</span>(it -&gt; second == <span class="number">0</span>) mp.erase(it-&gt;first);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--) solve();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2018-Chinese-Multi-University-Training-Nanjing-U-Contest&quot;&gt;&lt;a href=&quot;#2018-Chinese-Multi-University-Training-Nanjing-U-Contest&quot; class=&quot;headerlink&quot; title=&quot;2018 Chinese Multi-University Training, Nanjing U Contest&quot;&gt;&lt;/a&gt;2018 Chinese Multi-University Training, Nanjing U Contest&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;L&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:25&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(7)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:17&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:35&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:56&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*7&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;308&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;270&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;811&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;329&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;18&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;39&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;容斥&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;几何&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;模拟&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;SAM&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LIS&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1239&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1586&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;p&gt;真·第一次正式训练，感觉合作得还蛮愉快的。不过最后半个小时有点没有按照正式比赛要求，三人三机了。以后还是一定要避免这种问题，协商好上机时间，严格三人单机。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;6/12&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;7/12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;7/12&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;25/824&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="容斥原理" scheme="http://yoursite.com/tags/%E5%AE%B9%E6%96%A5%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>点分治学习笔记</title>
    <link href="http://yoursite.com/2019/05/23/%E7%82%B9%E5%88%86%E6%B2%BB%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/23/点分治学习笔记/</id>
    <published>2019-05-22T16:30:08.000Z</published>
    <updated>2019-05-22T16:30:08.112Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2019年ACM-ICPC全国邀请赛（陕西）游记</title>
    <link href="http://yoursite.com/2019/05/19/2019%E5%B9%B4ACM-ICPC%E5%85%A8%E5%9B%BD%E9%82%80%E8%AF%B7%E8%B5%9B%EF%BC%88%E9%99%95%E8%A5%BF%EF%BC%89%E6%B8%B8%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/19/2019年ACM-ICPC全国邀请赛（陕西）游记/</id>
    <published>2019-05-19T13:02:33.000Z</published>
    <updated>2019-05-31T16:22:47.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2019年ACM-ICPC全国邀请赛（陕西）"><a href="#2019年ACM-ICPC全国邀请赛（陕西）" class="headerlink" title="2019年ACM-ICPC全国邀请赛（陕西）"></a>2019年ACM-ICPC全国邀请赛（陕西）</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th><th style="text-align:center">L</th><th style="text-align:center">M</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">0:03</td><td style="text-align:center"></td><td style="text-align:center">2:44</td><td style="text-align:center">3:17</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">1:46</td><td style="text-align:center">1:35</td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">363</td><td style="text-align:center">3</td><td style="text-align:center">275</td><td style="text-align:center">153</td><td style="text-align:center">12</td><td style="text-align:center">1</td><td style="text-align:center">0</td><td style="text-align:center">10</td><td style="text-align:center">2</td><td style="text-align:center">41</td><td style="text-align:center">0</td><td style="text-align:center">347</td><td style="text-align:center">220</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><p>第一次参加线下真正意义上的 ICPC，拿了个位次中等的银奖。还是太菜了啊，比赛经验不够丰富，比赛战略不是很对，后期一直在卡题造成了后两个小时的全面划水，一道真正有价值、有技术含量的题目都没有做出来。</p><ul><li>Solved during contest: <code>5/13</code> </li><li>Upsolved: <code>5/13</code></li><li>Orally upsolved: <code>5/13</code></li><li>Rank: <code>79/362</code></li></ul><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p><em>Nothing yet</em></p><h2 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h2><ul><li>开始签掉了 A 题，但是马上我就把 M 题读错了，以为是路程之和，然后写了个特别麻烦的二分，结果过不了样例，发现事实上是路程的最大值，就是个极其思博的二分，60行搞定，总算 1A 了。L 题 sl 和 whr 找到了正确结论但是没有证明，可是我觉得不太靠谱没让他们交，结果过掉 M 之后 L 胡乱交了一下也过掉了。这两出合计浪费了近60分钟的宝贵前期时间，奠定了爆炸了基础。</li><li>之后 C 题发现是思博题，然后 D 题一看也是个弱智背包，但可能会略卡常数，就先写 C 了。结果 C 题死活过不去样例，正当焦急之时才看到 Clarification 把样例改了，提交上去 1A 了。这中间又浪费了 10 分钟时间。D 题写得还蛮快，后面又发现可以 bitset 优化，大概总共只写了20分钟的样子，进行了仔细的检查，却没有发现 bitset 开小了，荣获一个 WA 。好在 5 分钟左右反应了过来，改掉了，AC了。</li><li>之后就是无比自闭的后期。我一下口胡了当时场上过得最多的 J 题，就是个点分治裸题。可是尴尬的是我们三个没有一个人会写点分治。最后打算试着写一写，把剩下的时间都押在这道题上，于是就凉了，写得一塌糊涂，最后放弃治疗。</li></ul><p>感觉问题最大的出在后期，我只看了 J 题这一道题，别的题目都没有进行深入的思考，这么做是极不明智的。其实当时还有 H 题是个蛮简单的题目，可是就是没有看到。后期的战术还是很关键的。</p><p>经验教训：</p><ul><li>前期一定要又快又稳，必须把题目读清楚，最好手算样例。</li><li>后期千万不要三个人都卡在同一道题目上面，还是要分好工。</li><li>交代码前、过不了样例时仔细看 Clarification。</li><li>继续保持交题之前检查代码的习惯，争取所有题目都一遍过。（这一次比赛我们总共就提交了 6 次代码，5 个AC）</li></ul><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><p>解题/补题顺序：</p><h2 id="Prob-A-签到"><a href="#Prob-A-签到" class="headerlink" title="Prob A. 签到"></a>Prob A. 签到</h2><p>排序之后从小到大能选就选，贪心即可。</p><h2 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h2><h2 id="Prob-C-签到"><a href="#Prob-C-签到" class="headerlink" title="Prob C. 签到"></a>Prob C. 签到</h2><p>假的几何题，总共就两种情况，分类讨论即可。</p><h2 id="Prob-D-DP"><a href="#Prob-D-DP" class="headerlink" title="Prob D.  DP"></a>Prob D.  DP</h2><p>显然的 dp 是可以通过的。因为每个 $c_i$ 都是 100 的倍数！这道题感觉就是出题人在逗你玩。并且这种 DP 是可行性 DP，可以用 bitset 加速。</p><p>复杂度 $O(T \cdot \frac{n \cdot c}{100} \frac{n}{w})$ ，甚至不到 $10^7$</p><h2 id="Prob-E"><a href="#Prob-E" class="headerlink" title="Prob E."></a>Prob E.</h2><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2><h2 id="Prob-G"><a href="#Prob-G" class="headerlink" title="Prob G."></a>Prob G.</h2><h2 id="Prob-H"><a href="#Prob-H" class="headerlink" title="Prob H."></a>Prob H.</h2><h2 id="Prob-I"><a href="#Prob-I" class="headerlink" title="Prob I."></a>Prob I.</h2><h2 id="Prob-J"><a href="#Prob-J" class="headerlink" title="Prob J."></a>Prob J.</h2><h2 id="Prob-K"><a href="#Prob-K" class="headerlink" title="Prob K."></a>Prob K.</h2><h2 id="Prob-L-分类讨论"><a href="#Prob-L-分类讨论" class="headerlink" title="Prob L. 分类讨论"></a>Prob L. 分类讨论</h2><p>按照 4 的余数分类讨论即可。</p><h2 id="Prob-M-二分"><a href="#Prob-M-二分" class="headerlink" title="Prob M. 二分"></a>Prob M. 二分</h2><p> 二分思博题。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2019年ACM-ICPC全国邀请赛（陕西）&quot;&gt;&lt;a href=&quot;#2019年ACM-ICPC全国邀请赛（陕西）&quot; class=&quot;headerlink&quot; title=&quot;2019年ACM-ICPC全国邀请赛（陕西）&quot;&gt;&lt;/a&gt;2019年ACM-ICPC全国邀请赛（陕西）&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;L&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;M&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:03&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:44&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3:17&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:46&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;363&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;275&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;153&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;12&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;41&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;347&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;220&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;p&gt;第一次参加线下真正意义上的 ICPC，拿了个位次中等的银奖。还是太菜了啊，比赛经验不够丰富，比赛战略不是很对，后期一直在卡题造成了后两个小时的全面划水，一道真正有价值、有技术含量的题目都没有做出来。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;5/13&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;5/13&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;5/13&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;79/362&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="ICPC" scheme="http://yoursite.com/tags/ICPC/"/>
    
  </entry>
  
  <entry>
    <title>Google Code Jam Round 2 游记</title>
    <link href="http://yoursite.com/2019/05/19/Google-Code-Jam-Round-2-%E6%B8%B8%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/19/Google-Code-Jam-Round-2-游记/</id>
    <published>2019-05-19T13:02:28.000Z</published>
    <updated>2019-05-31T16:22:19.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Google-Code-Jam-Round-2"><a href="#Google-Code-Jam-Round-2" class="headerlink" title="Google Code Jam Round 2"></a>Google Code Jam Round 2</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center"><font color="green"><strong>22</strong></font></td><td style="text-align:center">-</td><td style="text-align:center"><font color="green"><strong>26</strong></font></td><td style="text-align:center"><font color="red">(0)</font></td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+2</b></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">1052</td><td style="text-align:center">269</td><td style="text-align:center">171</td><td style="text-align:center">73</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">思维</td><td style="text-align:center"></td><td style="text-align:center">类欧几里得</td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><ul><li>Solved during contest: <code>2/4</code> <code>48/100 pt</code> </li><li>Upsolved: <code>2/4</code> <code>48/100 pt</code></li><li>Orally upsolved: <code>2/4</code> <code>48/100 pt</code></li><li>Rank: <code>315/3600</code></li><li>C 题撞大运了，正好就是之前写过的在有理数开区间内寻找分母最小的有理数的模板题，套模板就 AC 了。</li></ul><p>所以。。可以拿到一件 Google 衬衫了？感觉海星。</p><a id="more"></a><p>P.S. 正式比赛前不要打其他比赛！！！真的会 rp– ！！！第二天陕西邀请赛就炸飞了，从来没有碰见过前期读错题的情况有没有！</p><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p><a href="https://codingcompetitions.withgoogle.com/codejam/round/0000000000051679" target="_blank" rel="noopener">比赛及题解链接</a></p><h2 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h2><p>打省赛之前要打 GCJ ，从 22:00 到  00:30 ，也真的是有点刺激。</p><p>开场看了 A ，和 CYY 稍微讨论了一下发现是思博题，一发 AC 了。</p><p>看了眼 B，感觉是个乱搞、调参数的交互题。</p><p>CYY 提议看 C，开始没懂题目要干什么，后来发现就是给定一个有理数开区间，要在这个区间里找到一个分母最小的有理数。这不就是模板题吗？我打开博客，复制了 <a href="https://yang2002.github.io/2019/02/23/Opentrains-1513%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/" target="_blank" rel="noopener">Opentrains 1513 训练报告</a> 里的模板，仔细写了一会儿，交了之后一发 AC 了。可是 cyy wa 了。分析原因可能是 INF 开得过大了，我顿时发现我也开得有点大，有很大概率会 FST。于是改成 $10^9 +7$ 交了一发，又有点担心，于是把所有数都改成 <code>__int128</code> 试了一下，好在最后也是 AC 了。</p><p>CYY 提议 D 题写高斯消元法，可是特殊情况有点多，后期没来得及写完。于是就两道题 48 分滚粗了。可是貌似 C 题会正解的人不多？所以排名看来也还可以，可以轻易拿到 GCJ 的 T 恤了啊，感觉海星。但是这对第二天的 debuff 可不小啊 QAQ，省赛就打得一坨屎。</p><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Prob-A-去重"><a href="#Prob-A-去重" class="headerlink" title="Prob A. 去重"></a>Prob A. 去重</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>你要给两种化学元素赋上质量 $v_1,v_2$，给你了 $n$ 种分子，由二元组 $(c_1,c_2)$ 表示，代表有 $c_1$ 个 1 号原子，有 $c_2$ 个 2 号原子构成，然后分子的质量为 $c_1 \cdot v_1+c_2\cdot v_2$。问赋值之后分子按照价值从小到大排序之后按照分子名称编号组成的排列有多少种不同的方式。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>显然可以直接钦定 $v_2=kv_1,v_1=1$，然后把 $k$ 当横坐标，每一种分子质量代表纵坐标，则每一分子都可以用一条直线表示。这些直线位于 y 轴右侧交点的横坐标去重后的个数加上 1 即为答案。至于找直线交点，两两枚举然后暴力即可。</p><p>每一个测试的时间复杂度 $O(n^2 \log n)$</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">666</span>;</span><br><span class="line"><span class="keyword">int</span> n, kase;</span><br><span class="line">pii pt[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">set</span>&lt;pii&gt; se;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;pt[i].first, &amp;pt[i].second);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span>((pt[i].first-pt[j].first)*(pt[i].second-pt[j].second)&gt;=<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            ll nu = <span class="built_in">abs</span>(pt[i].first - pt[j].first);</span><br><span class="line">            ll de = <span class="built_in">abs</span>(pt[i].second - pt[j].second);</span><br><span class="line">            ll d = __gcd(nu, de);</span><br><span class="line">            nu /= d, de /= d;</span><br><span class="line">            <span class="keyword">if</span>(se.count(&#123;nu, de&#125;)) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                se.insert(&#123;nu, de&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Case #%d: %d\n"</span>, ++kase, <span class="keyword">int</span>(se.size()+ <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h2><p>留坑。</p><h2 id="Prob-C-类欧几里得"><a href="#Prob-C-类欧几里得" class="headerlink" title="Prob C. 类欧几里得"></a>Prob C. 类欧几里得</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>和 A 题相同的背景，这一次我们给出了分子的排列，要你找到任何一种合法的院子质量分配方案 $v_1,v_2$ 使得排列中的分子按照质量从小到大的顺序排列。要求尽量使 $v_1$ 最小，在多组 $v_1$ 已经最小的答案里要求 $v_2$ 最小。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>还是和 A 题类似的钦定方法，那么排列的任何两个相邻元素都满足左边小于等于右边，就可以列出来一个一次不等式，解出来会得出一个形如 $x&gt; \frac pq$ 或者 $x&lt;\frac pq$ 的条件，然后把这些条件综合起来即可将问题转化为下面的：</p><blockquote><p>在有理数开区间 $(\frac mn,\frac pq)$ 中找到一个有理数 $\frac xy$ ，使它的分母尽量地小，与此同时分子也尽量地小。</p></blockquote><p>这就是类欧几里得算法论文题！ <a href="https://yang2002.github.io/2019/02/23/Opentrains-1513%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/" target="_blank" rel="noopener">Opentrains 1513 训练报告</a> 里有这个模板，这里再不厌其烦地把这个算法的内容阐述（摘抄）一遍：</p><ul><li>首先，如果 $\frac mn$与 $\frac pq$ 之间有整数，那么问题已经解决了；</li><li>否则，一定有$r-l\leq1$。两个数同时减去 $l$ 的整数部分 $[l]$，得到的答案也是等价的。即：问题转化为$m&lt;n,p\leq q$ 的情况。</li><li>这时，要让 $y$ 最小， $x$ 一定也要最小，因此，可以两边直接取倒数，得到：$\frac qp &lt; \frac xy &lt; \frac nm$</li><li>这样递归下去即可。可以看到左右边界化为小于1的步骤相当于取模，分子分母量级会减小一半，因此复杂度为 $\log \min(n, q)$。</li></ul><p>还要注意一个细节：题目所有数据都是 $10^9$ 的，因此 <code>INF</code> 设为 $10^9+7$ 即可。如果 <code>INF</code> 设得过大，可能反而会溢出，产生意料不到的错误。</p><p>每一组测试数据的时间复杂度是 $O(n + \log 10^9)$。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> __int128 ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ABS(x) ( (x)&gt;0 ? (x) : (-(x)) )</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">frac</span> &#123;</span></span><br><span class="line">    ll nu, de;</span><br><span class="line">    frac(ll a = <span class="number">0</span>, ll b = <span class="number">1</span>): nu(a), de(b) &#123; simplify(); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">simplify</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(de &lt; <span class="number">0</span>) de = -de, nu = -nu;</span><br><span class="line">        ll g = __gcd(ABS(nu), ABS(de));</span><br><span class="line">        nu /= g, de /= g;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">flip</span><span class="params">()</span> </span>&#123; swap(nu, de); &#125;</span><br><span class="line">    frac <span class="keyword">operator</span> + (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        ll d = de * rhs.de / __gcd(ABS(de), ABS(rhs.de));</span><br><span class="line">        ll u = nu * (d / de) + rhs.nu * (d / rhs.de);</span><br><span class="line">        <span class="keyword">return</span> frac(u, d);</span><br><span class="line">    &#125;</span><br><span class="line">    frac <span class="keyword">operator</span> - (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        ll d = de * rhs.de / __gcd(ABS(de), ABS(rhs.de));</span><br><span class="line">        ll u = nu * (d / de) - rhs.nu * (d / rhs.de);</span><br><span class="line">        <span class="keyword">return</span> frac(u, d);</span><br><span class="line">    &#125;</span><br><span class="line">    frac <span class="keyword">operator</span> * (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        frac res = frac(nu * rhs.nu, de * rhs.de);</span><br><span class="line">        res.simplify();</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    frac <span class="keyword">operator</span> - () <span class="keyword">const</span> &#123;</span><br><span class="line">        frac ret = *<span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">if</span>(de &lt; <span class="number">0</span>) ret.de = -de;</span><br><span class="line">        <span class="keyword">else</span> ret.nu = -nu;</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line">    frac <span class="keyword">operator</span> / (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> *<span class="keyword">this</span> * frac(rhs.de, rhs.nu);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nu * rhs.de &lt; rhs.nu * de;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nu * rhs.de == rhs.nu * de;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;= (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nu * rhs.de &lt;= rhs.nu * de;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (<span class="keyword">const</span> frac&amp; rhs) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> nu * rhs.de &gt; rhs.nu * de;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">ll <span class="title">floor</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> nu / de; &#125;</span><br><span class="line">    <span class="function">ll <span class="title">ceil</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> nu / de + (nu % de != <span class="number">0</span>); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">frac <span class="title">SearchBetween</span><span class="params">(frac l, frac r)</span> </span>&#123;</span><br><span class="line">    l.simplify(), r.simplify();</span><br><span class="line">    ll lb = l.<span class="built_in">floor</span>();</span><br><span class="line">    <span class="keyword">if</span>(lb &gt; <span class="number">0</span>) l.nu -= lb * l.de, r.nu -= lb * r.de;</span><br><span class="line">    <span class="keyword">if</span>(r.nu &gt; r.de) <span class="keyword">return</span> frac(<span class="number">1</span> + lb, <span class="number">1</span>);</span><br><span class="line">    frac res = SearchBetween(frac(r.de, r.nu), frac(l.de, l.nu));</span><br><span class="line">    res.flip();</span><br><span class="line">    <span class="keyword">return</span> frac(lb, <span class="number">1</span>) + res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> kase = <span class="number">0</span>, n;</span><br><span class="line">pii pt[<span class="number">6666</span>];</span><br><span class="line">frac low(0, 1), high(100000000000LL, 1);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    low = frac(<span class="number">0</span>, <span class="number">1</span>), high = frac(<span class="number">100000000000L</span>L, <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, ++kase);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    rep(i, n)</span><br><span class="line">        read(pt[i].first, pt[i].second);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        ll val = (pt[i].second-pt[i+<span class="number">1</span>].second)*(pt[i].first-pt[i+<span class="number">1</span>].first);</span><br><span class="line">        <span class="keyword">if</span>(val == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pt[i+<span class="number">1</span>].first &gt; pt[i].first || pt[i+<span class="number">1</span>].second &gt; pt[i].second)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(val &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pt[i+<span class="number">1</span>].first &gt; pt[i].first) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(val &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pt[i+<span class="number">1</span>].second &gt; pt[i].second) &#123;</span><br><span class="line">                low = max(low, frac(pt[i].first - pt[i+<span class="number">1</span>].first, pt[i+<span class="number">1</span>].second - pt[i].second));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(pt[i+<span class="number">1</span>].second &lt; pt[i].second) &#123;</span><br><span class="line">                high = min(high, frac(pt[i].first - pt[i+<span class="number">1</span>].first, pt[i+<span class="number">1</span>].second - pt[i].second));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// printf("&gt; low = %lld/%lld, high = %lld/%lld\n", low.nu, low.de, high.nu, high.de);</span></span><br><span class="line">    low.simplify(), high.simplify();</span><br><span class="line">    <span class="keyword">if</span>(low &gt; high || low == high) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    frac ans = SearchBetween(low, high);</span><br><span class="line">    write(ans.de);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">    write(ans.nu);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> FREOPEN</span></span><br><span class="line">        freopen(<span class="string">"in.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="comment">// freopen("out.txt", "w", stdout);</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-D"><a href="#Prob-D" class="headerlink" title="Prob D."></a>Prob D.</h2><p>留坑。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Google-Code-Jam-Round-2&quot;&gt;&lt;a href=&quot;#Google-Code-Jam-Round-2&quot; class=&quot;headerlink&quot; title=&quot;Google Code Jam Round 2&quot;&gt;&lt;/a&gt;Google Code Jam Round 2&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;22&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;-&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;26&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(0)&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+2&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1052&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;269&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;171&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;73&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;思维&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;类欧几里得&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;2/4&lt;/code&gt; &lt;code&gt;48/100 pt&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;2/4&lt;/code&gt; &lt;code&gt;48/100 pt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;2/4&lt;/code&gt; &lt;code&gt;48/100 pt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;315/3600&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;C 题撞大运了，正好就是之前写过的在有理数开区间内寻找分母最小的有理数的模板题，套模板就 AC 了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以。。可以拿到一件 Google 衬衫了？感觉海星。&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="类欧几里得" scheme="http://yoursite.com/tags/%E7%B1%BB%E6%AC%A7%E5%87%A0%E9%87%8C%E5%BE%97/"/>
    
  </entry>
  
  <entry>
    <title>JSCPC 2018 训练实录</title>
    <link href="http://yoursite.com/2019/05/16/JSCPC-2018-%E8%AE%AD%E7%BB%83%E5%AE%9E%E5%BD%95/"/>
    <id>http://yoursite.com/2019/05/16/JSCPC-2018-训练实录/</id>
    <published>2019-05-15T16:40:01.000Z</published>
    <updated>2019-05-31T16:21:52.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018江苏大学生程序设计竞赛（JSCPC）"><a href="#2018江苏大学生程序设计竞赛（JSCPC）" class="headerlink" title="2018江苏大学生程序设计竞赛（JSCPC）"></a>2018江苏大学生程序设计竞赛（JSCPC）</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">0:13</td><td style="text-align:center">1:45</td><td style="text-align:center">2:58</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">1:01</td><td style="text-align:center">1:17</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4:10</td><td style="text-align:center">0:45</td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">122</td><td style="text-align:center">58</td><td style="text-align:center">27</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">95</td><td style="text-align:center">86</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">30</td><td style="text-align:center">120</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">模拟</td><td style="text-align:center">二分</td><td style="text-align:center">莫队</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">排序</td><td style="text-align:center">贪心</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">思维</td><td style="text-align:center">容斥</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">508</font></td><td style="text-align:center"><font color="green">518</font></td><td style="text-align:center"><font color="blue">2620</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">947</font></td><td style="text-align:center"><font color="green">1409</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">817</font></td><td style="text-align:center"><font color="green">648</font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="green">Easy</font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Template</td><td style="text-align:center"><font color="red">Red</font></td><td style="text-align:center"><font color="blue">blue</font></td><td style="text-align:center"><font color="green">green</font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">$\mathcal{O}$</td><td style="text-align:center"><font color="red">(0)</font></td><td style="text-align:center">★</td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><ul><li>Solved during contest: <code>7/11</code> </li><li>Upsolved: <code>7/11</code></li><li>Orally upsolved: <code>7/11</code></li><li>Rank: <code>8/156</code></li></ul><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p><a href="https://cn.vjudge.net/contest/300755#overview" target="_blank" rel="noopener">比赛链接</a></p><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><p>题目难度：</p><p>Very Easy:  A, F<br>Easy: B, G, K<br>Medium Easy: C, J</p><h2 id="Prob-A-签到"><a href="#Prob-A-签到" class="headerlink" title="Prob A. 签到"></a>Prob A. 签到</h2><blockquote><p><em>Solved at 00:13 (+1)</em></p></blockquote><p>模拟题意即可。不要看错题意。由于前三道题目是一个系列，这里把定义的 $h$ 值概念摘抄如下：</p><blockquote><p>The h-index of an author is the largest h where he has at least h papers with citations not less than h. </p></blockquote><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">444444</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], n;</span><br><span class="line">ll mn[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n; i ; --i) mn[i] = (a[i] + mn[i+<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = n; i &gt;= <span class="number">0</span>; --i) <span class="keyword">if</span>(i &lt;= mn[i]) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-B-奇怪的二分"><a href="#Prob-B-奇怪的二分" class="headerlink" title="Prob B. 奇怪的二分"></a>Prob B. 奇怪的二分</h2><blockquote><p><em>Solved at 01:45 (+)</em></p></blockquote><p>首先可以看到最大的 $h$ 满足二分性质：小于这个数的所有 $h$ 都可行，大于的都不可行。</p><p>考虑二分，考虑如何验证一个 $h$ 是否合法。我们先放上 $h$ 个论文，每篇论文只工作一小时，作为满足要求的 h 篇。然后如果剩下的时间只放在这 $h$ 篇上，这时至少需要的时间是：<br>$$<br>\lceil \frac{h-1-a}{a}\rceil + \lceil \frac{h-2-a}{a}\rceil + \lceil \frac{h-3-a}{a}\rceil + \cdots + \lceil \frac{1-a}{a}\rceil<br>$$<br>但是我们还可以增加一些水论文，即增加一篇工作 $1$ 的论文，然后引用上面的 h 篇。可以发现加过一篇水论文之后，至少需要的时间刚好减去了上式的第一项，即变为了：<br>$$<br>\lceil \frac{h-2-a}{a}\rceil + \lceil \frac{h-3-a}{a}\rceil + \cdots + \lceil \frac{1-a}{a}\rceil<br>$$<br>每增加一篇水论文都会使求和减少一项，而每一项求和只要不小于 0，就至少为 1，因此使用水论文永远是划算的。我们可以发现，检查 h 时，我们应当使用 $\min(0,h-a)$ 份水论文。</p><p>对于一个 h，需要的时间至少为 $h + \min(0,h-a)$ 。由此二分即可。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll n, a;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(ll h)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h + max(h - a, <span class="number">0L</span>L) &lt;= n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; a) &#123;</span><br><span class="line">        ll l = <span class="number">0</span>, r = n;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">            ll mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(l == r - <span class="number">1</span>) mid = r;</span><br><span class="line">            <span class="keyword">if</span>(judge(mid)) l = mid;</span><br><span class="line">            <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, l);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-C-莫队"><a href="#Prob-C-莫队" class="headerlink" title="Prob C. 莫队"></a>Prob C. 莫队</h2><blockquote><p><em>Solved at 02:58 by YangDavid, thinking whr (+)</em></p></blockquote><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给出数组 $a$ ，有 $q$ 个询问，求区间 $a[l,r]$ 的 $h$ 值。</p><p>数据范围：$n,q \leq 10^5$</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><p>（莫队算法，904 ms / 2000 ms）</p><p>回顾求 $h$ 的过程，我们将论文引用次数装进一个计数数组，然后在这个计数数组中从后往前扫，扫到 i 位置时，比较后缀和 $\sum_{j=i}^n a_j$，与当前下标 i ，如果后缀和大的话，我们就找到了答案。</p><p>一个比较重要的性质是一个数组加入或删除一个元素之后，其 h 值最多变化 1。由此，根据上面的求 h 过程，我们可以直接 $O(1)$ 地插入删除元素，由此采用莫队算法即可做到 $O(n\sqrt n)$ 的复杂度。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code 1"></a>Code 1</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(register int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = getchar();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = getchar();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">302000</span>, maxB = <span class="number">500</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], n, m, pos[maxn], t = <span class="number">0</span>, lenb;</span><br><span class="line"><span class="keyword">int</span> ans[maxn], cur_ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Query</span> &#123;</span> <span class="keyword">int</span> l, r, id; &#125; q[maxn];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(<span class="keyword">const</span> Query &amp;q1, <span class="keyword">const</span> Query &amp;q2)</span> </span>&#123;<span class="keyword">return</span> q1.l &lt; q2.l; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(<span class="keyword">const</span> Query &amp;q1, <span class="keyword">const</span> Query &amp;q2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pos[q1.l] &lt; pos[q2.l] || (pos[q1.l] == pos[q2.l] &amp;&amp; q1.r &lt; q2.r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vcnt[maxn], rsum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DealFirst</span><span class="params">(<span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    printf("&gt; Deal First [%d, %d]: \n", l, r);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = l; i &lt;= r; ++i)</span><br><span class="line">        vcnt[a[i]]++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> res = n; res &gt;= <span class="number">0</span>; --res) &#123;</span><br><span class="line">        rsum += vcnt[res];</span><br><span class="line">        <span class="keyword">if</span>(rsum &gt;= res) <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">    assert(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ins</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    vcnt[x]++;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= cur_ans) rsum++;</span><br><span class="line">    <span class="keyword">if</span>(rsum - vcnt[cur_ans] &gt;= cur_ans + <span class="number">1</span>) &#123;</span><br><span class="line">        rsum -= vcnt[cur_ans];</span><br><span class="line">        cur_ans++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    vcnt[x]--;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= cur_ans) rsum--;</span><br><span class="line">    <span class="keyword">if</span>(rsum &lt; cur_ans) &#123;</span><br><span class="line">        cur_ans--;</span><br><span class="line">        rsum += vcnt[cur_ans];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(vcnt, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n + <span class="number">10</span>));</span><br><span class="line">    cur_ans = rsum = <span class="number">0</span>;</span><br><span class="line">    rep(i, n) read(a[i]);</span><br><span class="line">    rep(i, m) &#123;</span><br><span class="line">        read(q[i].l, q[i].r);</span><br><span class="line">        q[i].id = i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(q + <span class="number">1</span>, q + m + <span class="number">1</span>, cmp1);</span><br><span class="line">    t = <span class="built_in">sqrt</span>(m + <span class="number">0.5</span>), lenb = m / t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i)</span><br><span class="line">        pos[i] = (i - <span class="number">1</span>) / lenb + <span class="number">1</span>;</span><br><span class="line">    sort(q + <span class="number">1</span>, q + m + <span class="number">1</span>, cmp2);</span><br><span class="line">    cur_ans = DealFirst(q[<span class="number">1</span>].l, q[<span class="number">1</span>].r);</span><br><span class="line">    ans[q[<span class="number">1</span>].id] = cur_ans;</span><br><span class="line">    <span class="keyword">int</span> cur_l = q[<span class="number">1</span>].l, cur_r = q[<span class="number">1</span>].r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> qn = <span class="number">2</span>; qn &lt;= m; ++qn) &#123;</span><br><span class="line">        <span class="keyword">int</span> nl = q[qn].l, nr = q[qn].r;</span><br><span class="line"><span class="comment">//        printf("&gt; Deal [%d, %d]: \n", nl, nr);</span></span><br><span class="line">        <span class="keyword">if</span>(cur_r &lt; nr) <span class="keyword">for</span>(<span class="keyword">int</span> i = cur_r + <span class="number">1</span>; i &lt;= nr; ++i) Ins(a[i]);</span><br><span class="line">        <span class="keyword">if</span>(cur_r &gt; nr) <span class="keyword">for</span>(<span class="keyword">int</span> i = cur_r; i &gt; nr; --i) Del(a[i]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(cur_l &gt; nl) <span class="keyword">for</span>(<span class="keyword">int</span> i = cur_l - <span class="number">1</span>; i &gt;= nl; --i) Ins(a[i]);</span><br><span class="line">        <span class="keyword">if</span>(cur_l &lt; nl) <span class="keyword">for</span>(<span class="keyword">int</span> i = cur_l; i &lt; nl; ++i) Del(a[i]);</span><br><span class="line">        ans[q[qn].id] = cur_ans;</span><br><span class="line">        cur_l = nl, cur_r = nr;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    rep(i, m) write(ans[i]), <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m))</span><br><span class="line">        solve();</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-D"><a href="#Prob-D" class="headerlink" title="Prob D."></a>Prob D.</h2><p>留坑。</p><h2 id="Prob-E"><a href="#Prob-E" class="headerlink" title="Prob E."></a>Prob E.</h2><p>留坑。</p><h2 id="Prob-F-排序"><a href="#Prob-F-排序" class="headerlink" title="Prob F. 排序"></a>Prob F. 排序</h2><blockquote><p><em>Solved at 01:01 (+1)</em></p></blockquote><p>直接排序即可，但是可能炸 <code>long long</code>，需要用 <code>__int128</code>。思博题。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> __int128 ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">33333</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line"><span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line"><span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">x *= f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">item</span> &#123;</span></span><br><span class="line">    ll a, b, c;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> item&amp; r) <span class="keyword">const</span> &#123;</span><br><span class="line">        ll lhs = (a + b) * (r.a + r.b + r.c);</span><br><span class="line">        ll rhs = (r.a + r.b) * (a + b + c);</span><br><span class="line">        <span class="keyword">if</span>(lhs != rhs) <span class="keyword">return</span> lhs &lt; rhs;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> id &lt; r.id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">qread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        read(a), read(b), read(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; a[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n)) &#123;</span><br><span class="line">        rep(i, n) a[i].qread(), a[i].id = i;</span><br><span class="line">        sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">        rep(i, n) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, a[i].id, <span class="string">" \n"</span>[i == n]);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-G-模拟"><a href="#Prob-G-模拟" class="headerlink" title="Prob G. 模拟"></a>Prob G. 模拟</h2><ul><li>首先，判断 c 的个数是否相同，然后判断 c 分割开的各个只由 a,b 组成的部分是否等价。</li><li>其次，如何判断两个只由 a,b 组成的部分是否等价？<code>ab</code> 可以交换为 <code>ba</code>，因此可以直接将两个部分排好序，变为若干个 a 加若干个 b 的形式。然后由于 <code>aa</code>, <code>bb</code> 可以直接消去，按照奇偶性， a, b 的奇偶相同则等价。</li></ul><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">11111</span>;</span><br><span class="line"><span class="built_in">string</span> s, t;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; ss, tt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; s &gt;&gt; t) &#123;</span><br><span class="line">        ss.clear(), tt.clear();</span><br><span class="line">        <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> g : s) &#123;</span><br><span class="line">            <span class="keyword">if</span>(g == <span class="string">'c'</span>) &#123;</span><br><span class="line">                ss.emplace_back(a&amp;<span class="number">1</span>, b&amp;<span class="number">1</span>);</span><br><span class="line">                a = b = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(g == <span class="string">'a'</span>) a++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(g == <span class="string">'b'</span>) b++;</span><br><span class="line">        &#125;</span><br><span class="line">        ss.emplace_back(a&amp;<span class="number">1</span>, b&amp;<span class="number">1</span>);</span><br><span class="line">        a = b = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> g : t) &#123;</span><br><span class="line">            <span class="keyword">if</span>(g == <span class="string">'c'</span>) &#123;</span><br><span class="line">                tt.emplace_back(a&amp;<span class="number">1</span>, b&amp;<span class="number">1</span>);</span><br><span class="line">                a = b = <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(g == <span class="string">'a'</span>) a++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(g == <span class="string">'b'</span>) b++;</span><br><span class="line">        &#125;</span><br><span class="line">        tt.emplace_back(a&amp;<span class="number">1</span>, b&amp;<span class="number">1</span>);</span><br><span class="line">        a = b = <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(ss.size() != tt.size()) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sz = ss.size(), ok = <span class="literal">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(ss[i].first != tt[i].first || ss[i].second != tt[i].second) &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">                <span class="keyword">goto</span> tag;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">        tag:;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-H"><a href="#Prob-H" class="headerlink" title="Prob H."></a>Prob H.</h2><p>留坑。</p><h2 id="Prob-I"><a href="#Prob-I" class="headerlink" title="Prob I."></a>Prob I.</h2><p>留坑。</p><h2 id="Prob-J-思维题"><a href="#Prob-J-思维题" class="headerlink" title="Prob J. 思维题"></a>Prob J. 思维题</h2><p>明天再写。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">122222</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L* x * y % MOD; &#125;</span><br><span class="line"><span class="keyword">int</span> p2[maxn], n;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    p2[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">102000</span>; ++i)</span><br><span class="line">        p2[i] = muln(p2[i<span class="number">-1</span>], <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span> &gt;&gt; n &gt;&gt; s) &#123;</span><br><span class="line">        reverse(s.begin(), s.end());</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">int</span>(s.length()) &lt; n) s += <span class="string">'0'</span>;</span><br><span class="line">        reverse(s.begin(), s.end());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> zero = <span class="number">0</span>, ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;  i &lt; n; ++i) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">'0'</span>) zero++;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                ans = muln(ans, muln(p2[zero]<span class="number">-1</span>, p2[n-i<span class="number">-1</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans % MOD);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-K-容斥"><a href="#Prob-K-容斥" class="headerlink" title="Prob K. 容斥"></a>Prob K. 容斥</h2><p>毒瘤分类讨论容斥题，whr 写的，我没仔细看。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll a,b,c,d;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d)</span><br><span class="line">    &#123;</span><br><span class="line">        ans=<span class="number">0</span>;</span><br><span class="line">        ll tmp1=d/<span class="number">2018</span>-(c<span class="number">-1</span>)/<span class="number">2018</span>;</span><br><span class="line">        ans+=tmp1*(b-a+<span class="number">1</span>);</span><br><span class="line">        ll tmp2=d/<span class="number">1009</span>-(c<span class="number">-1</span>)/<span class="number">1009</span>;</span><br><span class="line">        ans+=(tmp2-tmp1)*(b/<span class="number">2</span>-(a<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">        ll tmp3=b/<span class="number">2018</span>-(a<span class="number">-1</span>)/<span class="number">2018</span>;</span><br><span class="line">        ans+=tmp3*(d-c+<span class="number">1</span>);</span><br><span class="line">        ll tmp4=b/<span class="number">1009</span>-(a<span class="number">-1</span>)/<span class="number">1009</span>;</span><br><span class="line">        ans+=(tmp4-tmp3)*(d/<span class="number">2</span>-(c<span class="number">-1</span>)/<span class="number">2</span>);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;tmp1&lt;&lt;" "&lt;&lt;tmp2&lt;&lt;" "&lt;&lt;tmp3&lt;&lt;" "&lt;&lt;tmp4;</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;ans-tmp1*tmp4-tmp2*tmp3+tmp1*tmp3&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;2018江苏大学生程序设计竞赛（JSCPC）&quot;&gt;&lt;a href=&quot;#2018江苏大学生程序设计竞赛（JSCPC）&quot; class=&quot;headerlink&quot; title=&quot;2018江苏大学生程序设计竞赛（JSCPC）&quot;&gt;&lt;/a&gt;2018江苏大学生程序设计竞赛（JSCPC）&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:13&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:45&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:58&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:01&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:17&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:45&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;122&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;58&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;27&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;95&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;86&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;120&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;模拟&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;二分&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;莫队&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;排序&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;思维&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;容斥&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;508&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;518&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;2620&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;947&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1409&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;817&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;648&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Template&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;Red&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;blue&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;green&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal{O}$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(0)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;7/11&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;7/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;7/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;8/156&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="莫队" scheme="http://yoursite.com/tags/%E8%8E%AB%E9%98%9F/"/>
    
      <category term="思维题" scheme="http://yoursite.com/tags/%E6%80%9D%E7%BB%B4%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Round 559 (Div. 1) 比赛记录</title>
    <link href="http://yoursite.com/2019/05/13/Codeforces-Round-559-Div-1-%E6%AF%94%E8%B5%9B%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2019/05/13/Codeforces-Round-559-Div-1-比赛记录/</id>
    <published>2019-05-13T10:44:54.000Z</published>
    <updated>2019-05-29T16:06:03.889Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Codeforces-Round-559-Div-1"><a href="#Codeforces-Round-559-Div-1" class="headerlink" title="Codeforces Round 559 (Div. 1)"></a>Codeforces Round 559 (Div. 1)</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">00:21</td><td style="text-align:center"><font color="red">(2)</font></td><td style="text-align:center">01:38</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">415</td><td style="text-align:center">204</td><td style="text-align:center">258</td><td style="text-align:center">77</td><td style="text-align:center">2</td><td style="text-align:center">1</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">贪心</td><td style="text-align:center">构造</td><td style="text-align:center">拓扑排序</td><td style="text-align:center">结论</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">1577</font></td><td style="text-align:center"><font color="green">489</font></td><td style="text-align:center"><font color="blue">2763</font></td><td style="text-align:center"><font color="green">1307</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>又一次打 Div. 1，题目质量还不错。前期一直在写 C 题的线段树，结果 B 题构造题却没时间做了。猜了好几个结论，总算猜到正确的了，但是没来得及提交。还是有点遗憾的，微微掉了 5 分 rating ，不过也无妨，毕竟还是要在比赛中不断成长的。</p><ul><li>Solved during contest: <code>2/6</code> </li><li>Upsolved: <code>4/6</code></li><li>Orally upsolved: <code>4/6</code></li><li>Rank: <code>246/425</code></li><li>Rating: <font color="purple"><b>2052</b></font> (-5)</li></ul><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p>比赛编号：1158</p><p><a href="https://codeforces.com/contest/1158" target="_blank" rel="noopener">比赛链接</a></p><p><a href="https://codeforces.com/blog/entry/66993" target="_blank" rel="noopener">官方题解连接</a></p><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Prob-A-贪心"><a href="#Prob-A-贪心" class="headerlink" title="Prob A. 贪心"></a>Prob A. 贪心</h2><p>模拟题意贪心即可。需要特判一些情况。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">555555</span>;</span><br><span class="line">ll b[maxn], g[maxn], n, m, ming = <span class="number">0x3f3f3f3f</span>, maxb = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n, m);</span><br><span class="line">    rep(i, n) read(b[i]), maxb = max(maxb, b[i]);</span><br><span class="line">    rep(i, m) read(g[i]), ming = min(ming, g[i]);</span><br><span class="line">    <span class="keyword">if</span>(maxb &gt; ming) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">multiset</span>&lt; <span class="keyword">int</span>, greater&lt;<span class="keyword">int</span>&gt; &gt; boys;</span><br><span class="line">    ll ans = <span class="number">0</span>, rem = m - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) </span><br><span class="line">        ans += <span class="number">1L</span>L * b[i] * m, boys.insert(b[i]);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(m == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(maxb == g[<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(ming == b[<span class="number">1</span>]) <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) <span class="keyword">if</span>(g[i] &gt; maxb) &#123;</span><br><span class="line">        <span class="keyword">if</span>(boys.empty()) &#123; <span class="built_in">puts</span>(<span class="string">"-1"</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">        ans += (g[i] - *boys.begin());</span><br><span class="line">        <span class="keyword">if</span>(--rem == <span class="number">0</span>) &#123;</span><br><span class="line">            boys.erase(boys.begin()), rem = m - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-B-构造"><a href="#Prob-B-构造" class="headerlink" title="Prob B. 构造"></a>Prob B. 构造</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>定义一个字符串 $s$ 的子串 $t$ 是好的，当且仅当这个子串仅仅在 $s$ 中出现了一次。</p><p>给定 $n,k$ ，要你构造出一个长度为 $n$ 的 01 串，使得好子串中长度最短的长度为 $k$。</p><p>数据范围：$n,k\leq 100000$，$n-k$ 是偶数。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>（目前还不清楚证明）令 $d=\frac {n-k}2$ ，当长度没达到 $n$ 的时候，不断尝试放入 $d$ 个 1，之后放入 1 个 0即可。具体实现参见下面代码。</p><p>证明留坑。</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">int</span> dif = (n - k) / <span class="number">2</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t &lt; n) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; dif &amp;&amp; t &lt; n; ++i) &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'1'</span>), t++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(t &lt; n) <span class="built_in">putchar</span>(<span class="string">'0'</span>), t++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-C-线段树优化建图-拓扑排序-或-思维-DFS"><a href="#Prob-C-线段树优化建图-拓扑排序-或-思维-DFS" class="headerlink" title="Prob C. 线段树优化建图+拓扑排序 或 思维+DFS"></a>Prob C. 线段树优化建图+拓扑排序 或 思维+DFS</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>对于一个 $n$ 个数的排列 $p$，我们定义它在 $i$ 位置的 $next$ 值为 $[i+1,n]$ 范围内第一个大于 $p_i$ 的数，如果不存在，则为 $n+1$ 。如 <code>{3,1,2,4}</code> 的 next 值为 <code>{4,2,4,5}</code> 。</p><p>现在给你了一个残缺的 next 值数组，即有些位置的 next 值是不确定的。你需要根据 next 数组构造出任何一个满足条件的排列，或者报告没有可能的 next 数组。</p><p>数据范围 $n\leq 5\cdot 10^5$</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>考虑建出大小关系图，让小数向大数连边。首先，显然 $i\to nxt(i)$ 之间一定是有边的。然后，可以发现 $\forall x\in [i+1,nxt(i)-1]$ ，i 没有与 x 连边，必然说明 $x&lt;i$ 。事实上连完这些边也足够了，跑一下拓扑排序即可得到最后结果。上面连边的过程用线段树优化建图即可完成。我场上的解法稍微观察了一些其他性质，发现每个位置最多连两条边，然后是用了个支持区间覆盖的线段树实现的。这类解法时间复杂度 $O(n\log n)$ ，十分显然。</p><div><div class="fold_hider"><div class="close hider_title">线段树解法代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">555555</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[maxn], nxt[maxn], fa[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; G[maxn];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lson (o &lt;&lt; 1)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rson (o &lt;&lt; 1 | 1)</span></span><br><span class="line"><span class="keyword">int</span> node[maxn * <span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node[o] != <span class="number">0</span>) &#123;</span><br><span class="line">        node[lson] = node[o];</span><br><span class="line">        node[rson] = node[o];</span><br><span class="line">        node[o] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql &gt; qr) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= l &amp;&amp; r &lt;= qr) &#123;</span><br><span class="line">        node[o] = v;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    pushdown(o);</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= mid) modify(lson, l, mid, ql, qr, v);</span><br><span class="line">    <span class="keyword">if</span>(qr &gt; mid) modify(rson, mid + <span class="number">1</span>, r, ql, qr, v);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">recover</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> l, <span class="keyword">int</span> r, <span class="keyword">int</span> *arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r) &#123;</span><br><span class="line">        arr[l] = node[o];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    pushdown(o);</span><br><span class="line">    recover(lson, l, mid, arr);</span><br><span class="line">    recover(rson, mid + <span class="number">1</span>, r, arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    rep(i, n) read(a[i]), G[i].clear();</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; indeg(n + <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    G[n + <span class="number">1</span>].clear();</span><br><span class="line">    <span class="built_in">memset</span>(nxt, <span class="number">-1</span>, <span class="keyword">sizeof</span> (<span class="keyword">int</span>) * (n + <span class="number">15</span>));</span><br><span class="line">    modify(<span class="number">1</span>, <span class="number">1</span>, n, <span class="number">1</span>, n, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; bar;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(a[i] != <span class="number">-1</span>) &#123;</span><br><span class="line">        nxt[i] = a[i];</span><br><span class="line">        <span class="keyword">while</span>(!bar.empty() &amp;&amp; i &gt;= *bar.begin()) bar.erase(bar.begin());</span><br><span class="line">        <span class="keyword">if</span>(!bar.empty() &amp;&amp; a[i] &gt; *bar.begin()) &#123; <span class="built_in">puts</span>(<span class="string">"-1"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            modify(<span class="number">1</span>, <span class="number">1</span>, n, i + <span class="number">1</span>, a[i] - <span class="number">1</span>, i);</span><br><span class="line">            bar.insert(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    recover(<span class="number">1</span>, <span class="number">1</span>, n, fa);</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nxt[i] != <span class="number">-1</span> &amp;&amp; nxt[i] != n + <span class="number">1</span>) G[i].push_back(nxt[i]), indeg[nxt[i]]++;</span><br><span class="line">        <span class="keyword">if</span>(fa[i] != <span class="number">-1</span> &amp;&amp; fa[i] != n + <span class="number">1</span>) G[i].push_back(fa[i]), indeg[fa[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; q;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans(n + <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    rep(i, n) <span class="keyword">if</span>(indeg[i] == <span class="number">0</span>) q.push(i);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> tp = q.front(); q.pop();</span><br><span class="line">        ans[tp] = ++cur;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> g : G[tp]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(--indeg[g] == <span class="number">0</span> &amp;&amp; g != n + <span class="number">1</span>) q.push(g);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, n) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, ans[i], <span class="string">" \n"</span>[i == n]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>另一类做法留坑。</p><h2 id="Prob-D-优雅结论"><a href="#Prob-D-优雅结论" class="headerlink" title="Prob D. 优雅结论"></a>Prob D. 优雅结论</h2><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>给定 $n$ 个点的位置以及长度为 $n-2$ 的仅包含 <code>L</code> <code>R</code> 两种字母的字符串，要求构造一个 $[1,n]$ 的排列，使得将点按照 $p_1 \to p_2 \to p_3 \to \cdots \to p_n$ 的顺序连线时，满足：</p><ul><li>连的线互不相交</li><li>对于任意 $i\in \{2,3,\cdots,n-1\}$ ，如果 $s_{i-1}=L$ ，则 $p_{i-1} \to p_i \to p_{i+1}$ 这段折线是向左拐；否则是向右拐</li></ul><p>如果无法构造出来，就输出 <code>-1</code> 。</p><p>数据范围：$n\leq 2000$</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>我们断言永远可以构造得出这样的排列，构造方法如下：</p><p>取 $n$ 个点形成的凸包上的任何一点为起点（这一步可以直接取 y 坐标最小的），然后将剩下的点按照极角排序，如果这一步要求的是 <code>L</code> ，则选极角最大的点；否则选极角最小的点。显然这样做满足了左拐右拐的条件，并且容易归纳地证明这样的构造是不会相交的。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Author       : YangDavid</span></span><br><span class="line"><span class="comment"> * Created Time : 2019年05月29日 星期三 18时12分50秒</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2222</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">ll x, y;</span><br><span class="line">Point(ll xp=<span class="number">0</span>, ll yp=<span class="number">0</span>): x(xp), y(yp) &#123;&#125;</span><br><span class="line">Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y); &#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;x, &amp;y); &#125;</span><br><span class="line">&#125; p[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, vis[maxn], cur;</span><br><span class="line"><span class="keyword">char</span> s[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">cross</span><span class="params">(Point A, Point B)</span> </span>&#123; <span class="keyword">return</span> A.x*B.y - A.y*B.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Left</span><span class="params">(Point pt, Point O, Point A)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cross(A-O, pt-O) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Right</span><span class="params">(Point pt, Point O, Point A)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> cross(A-O, pt-O) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">rep(i, n) p[i].scan();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>, s + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">cur = <span class="number">1</span>;</span><br><span class="line">rep(i, n) <span class="keyword">if</span>(p[i].y &lt; p[cur].y) cur = i;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line">ans.push_back(cur);</span><br><span class="line"></span><br><span class="line">rep(i, n - <span class="number">2</span>) &#123;</span><br><span class="line">vis[cur] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">int</span> has = <span class="literal">false</span>, idx = <span class="number">-1</span>;</span><br><span class="line">rep(j, n) <span class="keyword">if</span>(!vis[j]) &#123;</span><br><span class="line"><span class="keyword">if</span>(!has) has = <span class="literal">true</span>, idx = j;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == <span class="string">'L'</span> &amp;&amp; Right(p[j], p[cur], p[idx])) idx = j;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">'R'</span> &amp;&amp; Left(p[j], p[cur], p[idx])) idx = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cur = idx;</span><br><span class="line">vis[cur] = <span class="literal">true</span>;</span><br><span class="line">ans.push_back(cur);</span><br><span class="line">&#125;</span><br><span class="line">rep(i, n) <span class="keyword">if</span>(!vis[i]) ans.push_back(i);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> g : ans)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>, g);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-E"><a href="#Prob-E" class="headerlink" title="Prob E."></a>Prob E.</h2><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Codeforces-Round-559-Div-1&quot;&gt;&lt;a href=&quot;#Codeforces-Round-559-Div-1&quot; class=&quot;headerlink&quot; title=&quot;Codeforces Round 559 (Div. 1)&quot;&gt;&lt;/a&gt;Codeforces Round 559 (Div. 1)&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(2)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;01:38&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;415&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;204&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;258&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;77&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;拓扑排序&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;结论&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1577&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;489&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;2763&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1307&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;又一次打 Div. 1，题目质量还不错。前期一直在写 C 题的线段树，结果 B 题构造题却没时间做了。猜了好几个结论，总算猜到正确的了，但是没来得及提交。还是有点遗憾的，微微掉了 5 分 rating ，不过也无妨，毕竟还是要在比赛中不断成长的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;2/6&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;246/425&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rating: &lt;font color=&quot;purple&quot;&gt;&lt;b&gt;2052&lt;/b&gt;&lt;/font&gt; (-5)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="拓扑排序" scheme="http://yoursite.com/tags/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/"/>
    
      <category term="线段树" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>Comet OJ Contest #3 比赛报告</title>
    <link href="http://yoursite.com/2019/05/10/Comet-OJ-Contest-3-%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/05/10/Comet-OJ-Contest-3-比赛报告/</id>
    <published>2019-05-10T14:14:29.000Z</published>
    <updated>2019-05-13T11:32:56.842Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Comet-OJ-Contest-3"><a href="#Comet-OJ-Contest-3" class="headerlink" title="Comet OJ Contest #3"></a>Comet OJ Contest #3</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">0:07</td><td style="text-align:center">0:30</td><td style="text-align:center">1:39</td><td style="text-align:center">2:33</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">559</td><td style="text-align:center">272</td><td style="text-align:center">49</td><td style="text-align:center">14</td><td style="text-align:center">4</td><td style="text-align:center">1</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">暴力</td><td style="text-align:center">贪心</td><td style="text-align:center">dp</td><td style="text-align:center">线性基</td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">blue</font></td><td style="text-align:center"><font color="blue">blue</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><ul><li>Solved during contest: <code>4/6</code> </li><li>Upsolved: <code>4/6</code></li><li>Orally upsolved: <code>4/6</code></li><li>Rank: <code>11/642</code></li></ul><p>差点进前 10 拿小裙子系列。。感觉这一场是后期疯狂卡常数的比赛。C 题我的 dp 是 $O(nm\log m)$ 的，卡了下常数才通过；D 题是带修改区间线性基模板题（ CF587E ），我直接魔改了一下 CF 跑得最快的 <code>whzzt</code> 的代码就通过了。</p><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><p><a href="https://www.cometoj.com/contest/38/problems" target="_blank" rel="noopener">比赛链接</a></p><h2 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h2><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Prob-A"><a href="#Prob-A" class="headerlink" title="Prob A."></a>Prob A.</h2><h2 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h2><h2 id="Prob-C"><a href="#Prob-C" class="headerlink" title="Prob C."></a>Prob C.</h2><h2 id="Prob-D"><a href="#Prob-D" class="headerlink" title="Prob D."></a>Prob D.</h2><h2 id="Prob-E"><a href="#Prob-E" class="headerlink" title="Prob E."></a>Prob E.</h2><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Comet-OJ-Contest-3&quot;&gt;&lt;a href=&quot;#Comet-OJ-Contest-3&quot; class=&quot;headerlink&quot; title=&quot;Comet OJ Contest #3&quot;&gt;&lt;/a&gt;Comet OJ Contest #3&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:07&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:39&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:33&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;559&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;272&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;49&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;暴力&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dp&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;线性基&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;blue&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;blue&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;4/6&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved: &lt;code&gt;4/6&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;11/642&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;差点进前 10 拿小裙子系列。。感觉这一场是后期疯狂卡常数的比赛。C 题我的 dp 是 $O(nm\log m)$ 的，卡了下常数才通过；D 题是带修改区间线性基模板题（ CF587E ），我直接魔改了一下 CF 跑得最快的 &lt;code&gt;whzzt&lt;/code&gt; 的代码就通过了。&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>2019 XJTU ACM 校赛游记</title>
    <link href="http://yoursite.com/2019/05/09/2019-XJTU-ACM-%E6%A0%A1%E8%B5%9B%E6%B8%B8%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/05/09/2019-XJTU-ACM-校赛游记/</id>
    <published>2019-05-09T14:15:01.000Z</published>
    <updated>2019-05-22T16:07:16.042Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Contest-Name"><a href="#Contest-Name" class="headerlink" title="Contest Name"></a>Contest Name</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th><th style="text-align:center">L</th><th style="text-align:center">M</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">模拟</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">组合</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Template</td><td style="text-align:center"><font color="red">Red</font></td><td style="text-align:center"><font color="blue">blue</font></td><td style="text-align:center"><font color="green">green</font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">$\mathcal{O}$</td><td style="text-align:center"><font color="red">(0)</font></td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>校赛打自闭了。至少 2 道很简单的题目没有看，一直试图用 NTT 去卡 E 题的常数，导致后期崩盘。</p><ul><li>Solved during contest: <code>6/13</code> </li><li>Upsolved: <code>10/13</code></li><li>Rank: <code>3/180</code></li></ul><a id="more"></a><h2 id="Contest-Materials"><a href="#Contest-Materials" class="headerlink" title="Contest Materials"></a>Contest Materials</h2><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><p>解题/补题顺序：</p><p>Very Easy: </p><h2 id="Prob-A"><a href="#Prob-A" class="headerlink" title="Prob A."></a>Prob A.</h2><h2 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h2><h2 id="Prob-C"><a href="#Prob-C" class="headerlink" title="Prob C."></a>Prob C.</h2><h2 id="Prob-D"><a href="#Prob-D" class="headerlink" title="Prob D."></a>Prob D.</h2><h2 id="Prob-E-NTT-或-组合数学"><a href="#Prob-E-NTT-或-组合数学" class="headerlink" title="Prob E. NTT 或 组合数学"></a>Prob E. NTT 或 组合数学</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>csf 热爱运动，经常下去玩跑步，不仅练就了堪比埼玉的武功，还保护了自己一头乌黑浓密的头发……</p><p>你在二维坐标中跑步，初始位置 $(0,0)$ ,然后你跑了 $n$ 步</p><ul><li>从 $(i,0)$ 可以跑到 $(i+1,0),(i+1,1),(i+1,2),(i,0),(i-1,1),(i-1,2)$</li><li>从 $(i,1)$ 可以跑到 $(i+1,0),(i+1,1),(i+1,2),(i,1),(i-1,0),(i-1,2)$</li><li>从 $(i,2)$ 可以跑到 $(i+1,0),(i+1,1),(i+1,2),(i,2),(i-1,0),(i-1,1)$</li></ul><p>每次 csf 跑步都不想跑的太远，于是csf想考考你，有多少种跑步方式使得你的 $x$ 坐标最后落在 $[-m,m]$</p><p>答案对 $998244353$ 取模输出。</p><p>数据范围：$n, m \le 10^6$</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>首先，三种 $y$ 坐标可以转移到的状态都是对称的，因此可以直接忽略 $y$  坐标的影响，只关注有 1 种方式使得坐标不变，3 种方式使之 +1，2 种方式使之 -1。写成生成函数的形式，我们得到简化版题意：求下面多项式的次数在 $[-m,m]$ 之间的所有系数之和。<br>$$<br>(3x+1+\frac{2}{x})^n<br>$$<br>这也就是求 $(3x^2+x+2)^n$ 在 $[n-m,n+m]$ 的系数之和。一种显然的做法就是将 $3x^2+x+2$ 视为 $2n$ 次多项式，直接进行快速傅里叶变换，然后对变换后的式子每个点都求快速幂。这么做时间复杂度是 $O(n\log n)$ 的，可是由于 NTT 常数稍大，毒瘤的出题人故意卡掉了这种做法。这也是我最后一小时没来得及看其它题目，被爆踩的原因。</p><p>【UPD】貌似手动加上 <code>#pragma GCC optimize(&quot;O3&quot;, &quot;Ofast&quot;)</code> 就可以 AC 了。。。自闭了。</p><div><div class="fold_hider"><div class="close hider_title">点击查看NTT解法代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span> </span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch)) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f  <span class="number">-1</span>; ch = gc(); &#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch)) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc(); &#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> ... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span> </span>&#123;</span><br><span class="line">    read(x), read(args...);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> g = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> qpow(x, MOD - <span class="number">2</span>); &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> ginv = inv(g);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">12004000</span>;</span><br><span class="line"><span class="keyword">int</span> l, r[maxn], lim, liminv;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> dft)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; r[i]) swap(a[i], a[r[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> mid = <span class="number">1</span>; mid &lt; lim; mid &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> wn = qpow(dft==<span class="number">1</span> ? g : ginv, (MOD<span class="number">-1</span>)/(mid&lt;&lt;<span class="number">1</span>));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len = mid &lt;&lt; <span class="number">1</span>, j = <span class="number">0</span>; j &lt; lim; j += len) &#123;</span><br><span class="line">            <span class="keyword">int</span> w = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; mid; ++k, w = muln(w, wn)) &#123;</span><br><span class="line">                <span class="keyword">int</span> x = a[j + k], y = muln(w, a[j+k+mid]);</span><br><span class="line">                a[j+k] = mo(x + y);</span><br><span class="line">                a[j+k+mid] = mo(x - y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(dft == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; ++i) </span><br><span class="line">            a[i] = muln(a[i], liminv);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt_init</span><span class="params">(<span class="keyword">int</span> degA, <span class="keyword">int</span> degB)</span> </span>&#123;</span><br><span class="line">    lim = <span class="number">1</span>, l = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(lim &lt;= degA + degB) lim &lt;&lt;= <span class="number">1</span>, l++;</span><br><span class="line">    liminv = inv(lim);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; ++i)</span><br><span class="line">        r[i] = ( (r[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>) | ( (i&amp;<span class="number">1</span>) &lt;&lt; (l<span class="number">-1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ntt_qpow</span><span class="params">(<span class="keyword">int</span> *A, <span class="keyword">int</span> degA, <span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    ntt(A, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lim; ++i)</span><br><span class="line">        A[i] = qpow(A[i], p);</span><br><span class="line">    ntt(A, <span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    ntt_init(<span class="number">2</span> * n, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> *a = <span class="keyword">new</span> <span class="keyword">int</span>[lim];</span><br><span class="line">    a[<span class="number">0</span>] = <span class="number">2</span>, a[<span class="number">1</span>] = <span class="number">1</span>, a[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line">    ntt_qpow(a, <span class="number">2</span>, n);</span><br><span class="line">    <span class="keyword">int</span> deg = <span class="number">2</span> * n, ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = max(<span class="number">0</span>, n-m); i &lt;= deg &amp;&amp; i &lt;= n + m; ++i)</span><br><span class="line">        ans = mo(ans + a[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">    <span class="keyword">delete</span>[] a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; T = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>正解是线性时间复杂度的。我们直接对 $(3x^2+x+2)^n$ 按照多项式定理展开，推一推式子：<br>$$<br>\begin{aligned}<br>ans &amp;= (\sum_{i+j+k=n} {\binom{n}{i,j,k}} 3^i 2^{n-i-j} x^{2i+j}) \text{‘s coefficients in [n-m,n+m]} \\<br>    &amp;= \sum_{i=0}^n \sum_{j} \binom{n}{i,j,k} 3^i 2^{n-i-j}, \text{where } \max(0,n-m-2i) \leq j \leq \min(n+m-2i,n) \\<br>    &amp;= \sum_{i=0}^n 3^i 2^{n-i} \binom{n}{i} \sum_{j} 2^{-j} \binom{n-i}{j}<br>\end{aligned}<br>$$<br>约定 $g=2^{-1} \bmod 998244353$ ，我们单独处理后面的式子。记其为：<br>$$<br>A(st,ed,c) = \sum_{i=st}^{ed} \binom ci g^i<br>$$<br>再记录一个前缀函数，为：<br>$$<br>S(n,m) = \sum_{i=0}^{m} \binom {n}{i} g^i<br>$$<br>我们可以得到前缀函数的两个重要递推公式：<br>$$<br>\begin{align}<br>S(n,m+1) &amp;= S(n,m) + \binom{n}{m+1}g^{m+1} \tag 1 \\<br>S(n+1,m) &amp;= \sum_{i=0}^{m} \binom{n+1}{i} g^{i} \\<br>         &amp;= \sum_{i=0}^{m} \binom{n}{i} g^{i} + \sum_{i=1}^{m}\binom{n}{i-1}g^i\\<br>         &amp;= S(n,m) + g\sum_{i=0}^{m-1}\binom n{i-1} g^{i-1}\\<br>         &amp;=(g+1)S(n,m) - 2\binom{n}{m}g^{m+1} \tag 2<br>\end{align}<br>$$<br>如果把 $n,m$ 视为区间的两个端点的话，有了上面的推导，我们可以 $O(1)$ 地将区间延长或缩短一个单位了。等等，这不就是莫队的基本思想吗？那么这道题我们把询问离线下来就可以莫队了！我们就有了 $O(n\sqrt{n})$ 的做法了。但事实上直接按顺序计算就可以保证复杂度，因为我们有更好的分析。这道题目左右端点都在递增，线段上每个点只会被加入区间或被删除一次，由此均摊下来就是 $O(1)$ 的。因此我们就得到了一种线性的优秀做法。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000020</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> qpow(x, MOD - <span class="number">2</span>); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">if</span>(x &gt;= MOD) x -= MOD; <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD; <span class="keyword">return</span> x; &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fac[maxn], ifac[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n &lt; m) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> muln(fac[n], muln(ifac[m], ifac[n-m]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> p2[maxn], pi2[maxn], p3[maxn];</span><br><span class="line"><span class="keyword">int</span> mm[<span class="number">2</span>] = &#123;-INF, -INF&#125;, nn[<span class="number">2</span>] = &#123;<span class="number">-1</span>, <span class="number">-1</span>&#125;, ans[<span class="number">2</span>] = &#123;<span class="number">-1</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inv2 = inv(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> G = inv2 + <span class="number">1</span>, invG = inv(G);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">brute</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; ++i)</span><br><span class="line">        res = mo(res + muln(pi2[i], C(n, i)));</span><br><span class="line">    <span class="keyword">return</span> res;    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">S</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> tp)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m &lt; <span class="number">0</span>) &#123; </span><br><span class="line">        mm[tp] = <span class="number">-1</span>, nn[tp] = n;</span><br><span class="line">        <span class="keyword">return</span> ans[tp] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m &gt; n) m = n;</span><br><span class="line">    <span class="keyword">if</span>(mm[tp] == -INF) &#123;</span><br><span class="line">        mm[tp] = m, nn[tp] = n;</span><br><span class="line">        <span class="keyword">return</span> ans[tp] = brute(n, m);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">for</span>(; mm[tp] &lt; m; ++mm[tp])</span><br><span class="line">            ans[tp] = mo(ans[tp] + muln(pi2[mm[tp]+<span class="number">1</span>], C(nn[tp],mm[tp]+<span class="number">1</span>)));</span><br><span class="line">        <span class="keyword">for</span>(; mm[tp] &gt; m; --mm[tp])</span><br><span class="line">            ans[tp] = mo(ans[tp] - muln(pi2[mm[tp]], C(nn[tp],mm[tp]))+MOD);</span><br><span class="line">        <span class="keyword">for</span>(; nn[tp] &lt; n; ++nn[tp])</span><br><span class="line">            ans[tp] = mo(muln(ans[tp],G) - muln(C(nn[tp],mm[tp]),pi2[mm[tp]+<span class="number">1</span>] + MOD));</span><br><span class="line">        <span class="keyword">for</span>(; nn[tp] &gt; n; --nn[tp])</span><br><span class="line">            ans[tp] = muln(invG, mo(ans[tp]+muln(C(nn[tp]<span class="number">-1</span>,mm[tp]),pi2[mm[tp]+<span class="number">1</span>])));</span><br><span class="line">        <span class="keyword">return</span> ans[tp];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">A</span><span class="params">(<span class="keyword">int</span> st, <span class="keyword">int</span> ed, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(st &gt; ed) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> mo(S(c, ed, <span class="number">0</span>) - S(c, st - <span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m, res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; ++i)</span><br><span class="line">        res = mo(res + muln(muln(muln(p3[i],p2[n-i]),C(n,i)), A(n-m<span class="number">-2</span>*i, n+m<span class="number">-2</span>*i, n-i)));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = ifac[<span class="number">0</span>] = p2[<span class="number">0</span>] = pi2[<span class="number">0</span>] = p3[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">1000007</span>; ++i) &#123;</span><br><span class="line">        fac[i] = muln(fac[i<span class="number">-1</span>], i);</span><br><span class="line">        pi2[i] = muln(pi2[i<span class="number">-1</span>], inv2);</span><br><span class="line">        p2[i] = muln(p2[i<span class="number">-1</span>], <span class="number">2</span>);</span><br><span class="line">        p3[i] = muln(p3[i<span class="number">-1</span>], <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ifac[<span class="number">1000007</span>] = inv(fac[<span class="number">1000007</span>]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1000006</span>; i &gt; <span class="number">0</span>; --i)</span><br><span class="line">        ifac[i] = muln(ifac[i+<span class="number">1</span>], i+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> T = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h3 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h3><p>上面的莫队操作还蛮具有启发性的，我们有这么一道类似题目：<a href="http://acm.hdu.edu.cn/showproblem.php?pid=6333" target="_blank" rel="noopener">HDU 6333</a></p><h2 id="Prob-F"><a href="#Prob-F" class="headerlink" title="Prob F."></a>Prob F.</h2><h2 id="Prob-G"><a href="#Prob-G" class="headerlink" title="Prob G."></a>Prob G.</h2><h2 id="Prob-H"><a href="#Prob-H" class="headerlink" title="Prob H."></a>Prob H.</h2><h2 id="Prob-I"><a href="#Prob-I" class="headerlink" title="Prob I."></a>Prob I.</h2><h2 id="Prob-J"><a href="#Prob-J" class="headerlink" title="Prob J."></a>Prob J.</h2><h2 id="Prob-K"><a href="#Prob-K" class="headerlink" title="Prob K."></a>Prob K.</h2><h2 id="Prob-L"><a href="#Prob-L" class="headerlink" title="Prob L."></a>Prob L.</h2><h2 id="Prob-M"><a href="#Prob-M" class="headerlink" title="Prob M."></a>Prob M.</h2>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Contest-Name&quot;&gt;&lt;a href=&quot;#Contest-Name&quot; class=&quot;headerlink&quot; title=&quot;Contest Name&quot;&gt;&lt;/a&gt;Contest Name&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;L&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;M&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;模拟&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;组合&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Template&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;Red&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;blue&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;green&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal{O}$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(0)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;校赛打自闭了。至少 2 道很简单的题目没有看，一直试图用 NTT 去卡 E 题的常数，导致后期崩盘。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest: &lt;code&gt;6/13&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;10/13&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;3/180&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
  </entry>
  
  <entry>
    <title>集合幂级数、FMT、FWT学习笔记</title>
    <link href="http://yoursite.com/2019/04/27/%E9%9B%86%E5%90%88%E5%B9%82%E7%BA%A7%E6%95%B0-FMT-FWT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/04/27/集合幂级数-FMT-FWT学习笔记/</id>
    <published>2019-04-27T06:37:00.000Z</published>
    <updated>2019-05-31T16:45:59.560Z</updated>
    
    <content type="html"><![CDATA[<p>受这几天看到的不少高维前缀和题目的影响，我决定系统地学习一下集合幂级数的一套理论了。内容主要来自2015年吕凯风（VFleaKing）国家集训队论文《集合幂级数的性质与应用及其快速算法》（pdf版本会放在附录里），包括<strong>集合并卷积、集合对称差卷积、子集卷积、快速莫比乌斯变换、快速莫比乌斯反演、快速沃尔什变换及逆变换</strong>等，以及附带进行的一些练习。</p><p>[TODO] 把练习第一题搞清楚<br>[TODO] 把第三道论文题学会</p><a id="more"></a><h1 id="引言及定义"><a href="#引言及定义" class="headerlink" title="引言及定义"></a>引言及定义</h1><p>类似数列的生成函数，对于集合，我们引入集合幂级数来解决一些有关集合的动态规划问题。</p><blockquote><p>定义：设  $F$ 是一个域，则称函数 $f:2^U\to F$ 是 F 上的一个形式幂级数，记 $f_S=f(S)$ 为集合幂级数第 $S$ 项的系数。</p></blockquote><p>我们记为：<br>$$<br>f=\sum_{S\subseteq 2^U} f_S x^S<br>$$<br>显然可以定义集合幂级数的加法：$(f+g)(S) = f(S)+g(S)$ ，减法也类似。这两种运算都是 $O(2^n)$ 的。</p><p>如何定义乘法？为了保证乘法对加法的分配律，若 $h=f\cdot g$ ，我们应该有：<br>$$<br>\sum_{S\in 2^U} h_S x^S = \big(\sum_{L\in2^U}f_Lx^L\big) \cdot (\sum_{R\in 2^U} g_R x^R) = \sum_{L\in 2^U} \sum_{R\in 2^U} (f_L x^L) \cdot (g_R x^R)<br>$$<br>因此我们只需要规定 $(f_L x^L) \cdot (g_R x^R)$ 的运算结果，我们希望它是以某种集合运算乘起来的。我们设一个 $2^U$ 中满足交换律、结合律、空集是单位元的二元运算 $\ast$ ，那么我们就可以定义 $(f_L x^L) \cdot (g_R x^R) = (f_L g_R) x^{L\ast R}$ 。至此集合幂级数形成了一个交换环，并且包含了整个 $F$ 作为子环。</p><p>常见定义 $\ast$ 为集合并运算、集合对称差运算以及子集卷积，我们一一解决。</p><h1 id="集合并卷积（FWT-or）"><a href="#集合并卷积（FWT-or）" class="headerlink" title="集合并卷积（FWT_or）"></a>集合并卷积（FWT_or）</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>即给出两个集合幂级数 $f,g$ ，求 $h = f\ast g$  满足：<br>$$<br>h_S = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\cup R = S] f_L g_R \tag{1}<br>$$<br>怎么做呢？暴力做是 $O(4^n)$ 的，一种做法是分治乘法，可是总感觉在理论价值上面会逊色一些。有没有类似 FFT 的一种变换，使得变换后将卷积直接变成点乘呢？莫比乌斯变换做到了这一点。</p><p>我们定义集合幂级数 $f$ 的莫比乌斯变换 $\hat{f} $为：<br>$$<br>\hat{f_S} = \sum_{T\subseteq S} f_T<br>$$<br>反过来，如何求莫比乌斯逆变换呢（常常称为莫比乌斯反演）？<a href="http://vfleaking.blog.uoj.ac/slide/87#/23" target="_blank" rel="noopener">有关反演看这里：《炫酷反演魔术》</a>。很容易由容斥原理，我们又有：（这一步建议在纸上推导一下，要不然可能会觉得不直观）<br>$$<br>f_S = \sum_{T\subseteq S} (-1)^{|S|-|T|} \hat{f_T}<br>$$<br>现在，我们可以解决 (1) 中的问题了。对 (1) 式的左右两边同时做莫比乌斯变换<br>$$<br>\begin{aligned}<br>\hat{h_S} &amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\cup R \subseteq S] f_L g_R\\<br>&amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\subseteq S][ R \subseteq S] f_L g_R\\<br>&amp; = (\sum_{L\subseteq S}f_L) (\sum_{R\subseteq S}g_R)\\<br>&amp; = \hat{f_S}\hat{g_S}<br>\end{aligned}<br>$$<br>因此，我们想要的性质是成立的。只需要把 $f,g$ 做莫比乌斯变换，点乘起来，然后再做莫比乌斯反演即可得到集合并卷积。</p><p>如何进行莫比乌斯变换呢？可以使用递推，设 $\hat f^{(i)}_S$ 表示只考虑 $S\oplus T\subseteq \{1,\cdots,i\}$ 的子集 $T$ 时的莫比乌斯变换第 $S$ 项，令 $\hat f_S^{(0)} = f_S$ ，那么对于每个不包含 $i$ 的 $S$ 有：<br>$$<br>\hat{f_S^{(i)}} = \hat{f_S}^{(i-1)}\\<br>\hat{f}_{S\cup\{i\}} ^{(i)} = \hat f_{S\cup\{i\}}^{(i-1)} + \hat f _S ^{(i-1)}<br>$$<br>由此递推计算即可。复杂度 $O(n2^n)$</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>代码非常简短，<code>dmt</code> 变量为 1 时表示正变换，为 -1 时表示逆变换。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fmt_or(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dmt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; m; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">            A[S|(<span class="number">1</span>&lt;&lt;i)] = mo(A[S|(<span class="number">1</span>&lt;&lt;i)] + dmt*A[S]);</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合交卷积（FWT-and）"><a href="#集合交卷积（FWT-and）" class="headerlink" title="集合交卷积（FWT_and）"></a>集合交卷积（FWT_and）</h1><p>由于 $S\cap T = C_U(\bar S \cup \bar T)$，因此将S、T翻转之后，可以直接用FWT_or导出。可是实际上还有更简洁的实现，如下面代码所示。</p><p>复杂度 $O(n2^n)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fmt_and(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dmt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; m; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">            A[S] = mo(A[S] + dmt*A[S|(<span class="number">1</span>&lt;&lt;i)]);</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="集合对称差卷积（FWT-xor）"><a href="#集合对称差卷积（FWT-xor）" class="headerlink" title="集合对称差卷积（FWT_xor）"></a>集合对称差卷积（FWT_xor）</h1><h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p>这一回把 $\ast$ 定义为集合对称差。即给出两个集合幂级数 $f,g$ 求 $h = f\ast g$  ：<br>$$<br>h_S = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\oplus R=S] f_L g_R \tag 2<br>$$<br>分治乘法在这里也是可行的，但是对应的变换方法是什么呢？这次我们使用快速沃尔什变换及其逆变换（本质上是高维 FFT）。</p><p>快速沃尔什变换：<br>$$<br>\hat{f_S} = \sum_{T\subseteq 2^U} f_T (-1) ^{|S\cap T|}<br>$$<br>其逆变换为：（我没有找到靠谱证明）<br>$$<br>f_S = \frac {1}{2^n}\sum_{T\subseteq 2^U} \hat{f_T}(-1)^{|S\cap T|}<br>$$<br>沃尔什变换是具体如何解决（2）式的问题的呢？我们基于下面的事实：<br>$$<br>\frac {1}{2^n}\sum_{T\subseteq 2^U} (-1)^{|S\cap T|} = [S=\oslash]<br>$$<br>化简过程如下：<br>$$<br>\begin{aligned}<br>h_S &amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\oplus R\oplus S = \oslash] f_L g_R\\<br>&amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} \frac{1}{2^n} \sum_{T\subseteq 2^n} (-1)^{|S\cap (L\oplus R \oplus S)|} f_l g_R\\<br>&amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} \frac{1}{2^n} \sum_{T\subseteq 2^n} (-1)^{|T\cap L|} (-1)^{|T\cap R|}(-1)^{|T\cap S|} f_l g_R\\<br>&amp; = \frac{1}{2^n} \sum_{T\subseteq 2^n} (-1)^{|T\cap S|} \Big(\sum_{L\subseteq 2^U} (-1)^{|T\cap L|} f_L\Big)<br>\Big(\sum_{R\subseteq 2^U} (-1)^{|T\cap R|} g_R\Big)\\<br>&amp; = \frac{1}{2^n} \sum_{L\subseteq 2^U} (-1)^{|L\cap S|} \hat{f_S} \hat{g_S}<br>\end{aligned}<br>$$<br>即： $\hat{h_S} = \hat{f_S} \cdot \hat{g_S}$</p><p>注：在理论上，这种变换还有一个小问题，就是特征为2的 $F$ 上上述算法会失效，因为上述算法涉及乘以 $\frac {1}{2^n}$ 。不过一般情况下不会成问题。</p><p>接下来考虑如何计算快速沃尔什变换。依然可以使用递推，设 $\hat f^{(i)}_S$ 表示只考虑 $S\oplus T\subseteq \{1,\cdots,i\}$ 的子集 $T$ 时的沃尔什变换第 $S$ 项，令 $\hat f_S^{(0)} = f_S$ ，那么对于每个不包含 $i$ 的 $S$ 有：<br>$$<br>\hat{f_S^{(i)}} = \hat{f_S}^{(i-1)}+\hat{f}_{S\cup\{i\}}^{(i-1)}\\<br>\hat{f}_{S\cup\{i\}} ^{(i)} = \hat f _S ^{(i-1)} - \hat f_{S\cup\{i\}}^{(i-1)}<br>$$<br>由此递推计算即可。复杂度 $O(n2^n)$</p><h2 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fwt_xor(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dmt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; m; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            l = A[S], r = A[S|(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">            A[S] = mo(l + r);</span><br><span class="line">            A[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(dmt==<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> inv2 = qpow(qpow(<span class="number">2</span>, MOD<span class="number">-2</span>), n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; m; ++S)</span><br><span class="line">            A[S] = muln(A[S], inv2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="子集卷积"><a href="#子集卷积" class="headerlink" title="子集卷积"></a>子集卷积</h1><p>这一部分感觉论文讲得有点自闭，推荐 <a href="https://www.cnblogs.com/Dance-Of-Faith/p/8818211.html" target="_blank" rel="noopener">Dance Of Faith 的这篇博客</a> 。</p><h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><p>考虑这种形式的卷积如何处理：<br>$$<br>h_S = \sum_{T\subseteq S} f_T g_{S-T} \tag 3<br>$$<br>实际上，这种卷积等价于定义 $\ast$ 为不相交集合的并，即<br>$$<br>L \ast R =<br>\begin{cases}<br>  \varnothing, &amp; L \cap R \neq \varnothing \\<br>  L \cup R, &amp; \text{otherwise}<br>\end{cases}<br>$$<br>我们稍微改写一下 （3） 式：<br>$$<br>\begin{aligned}<br>h_S &amp; = \sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [L\cap R = \varnothing] [L\cup R = S] f_L g_R \\<br>&amp; =\sum_{L\subseteq 2^U} \sum_{R\subseteq 2^U} [|L| + |R| = |S|][L\cup R = S] f_L g_R<br>\end{aligned}<br>$$<br>我们只需要处理掉 $|L|+|R| = |S|$ 这一项。实际上我们直接加一维表示集合的大小，暴力处理即可。</p><p>具体来讲，初始时，我们先只把 $f_{pc(S),S}$ （<code>pc(S)</code> 表示 <code>popcount</code> ，即 S 二进制表示中有多少位是 1 ）的值赋成原来的 $f_{S}$（$g$ 也使用同样的操作），然后对每一个 $f_i$ 做一遍FMT，点值相乘时这么卷积：$h_{i, S} = \sum\limits_{j = 0}^{i} f_{j,S} * g_{i - j, S}$ 。代码很简洁，如下所示：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; subset_conv(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; B) &#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; H(Len);</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; siga(Base+<span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(Len,<span class="number">0</span>)), sigb = siga, sigh = siga;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">        siga[pc[S]][S] = A[S], sigb[pc[S]][S] = B[S];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= Base; ++i) &#123;</span><br><span class="line">        fmt_or(siga[i], <span class="number">1</span>);</span><br><span class="line">        fmt_or(sigb[i], <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; ++j)</span><br><span class="line">                sigh[i][S] = mo(sigh[i][S] + muln(siga[j][S], sigb[i-j][S]));</span><br><span class="line">        fmt_or(sigh[i], <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">        H[S] = sigh[pc[S]][S];</span><br><span class="line">    <span class="keyword">return</span> H;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>FWT_OR</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if FMT : f[S|(1&lt;&lt;i)] += f[S]</span><br><span class="line">if IFMT: f[S|(1&lt;&lt;i)] -= f[S]</span><br></pre></td></tr></table></figure><p>FWT_AND</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if FMT : f[S] += f[S|(1&lt;&lt;i)]</span><br><span class="line">if IFMT: f[S] -= f[S|(1&lt;&lt;i)]</span><br></pre></td></tr></table></figure><p>FWT_XOR：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l = f[S], r = f[S|(1&lt;&lt;i)]</span><br><span class="line">f[S] = l + r</span><br><span class="line">f[S|(1&lt;&lt;i)] = l - r</span><br><span class="line">if IFMT: </span><br><span class="line">    f[S] /= qpow(2, n)</span><br></pre></td></tr></table></figure><p>子集卷积：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, n + <span class="number">1</span>):</span><br><span class="line">    F[i] = FWT_OR(f[i])</span><br><span class="line">    G[i] = FWT_OR(g[i])</span><br><span class="line">    <span class="keyword">for</span> S <span class="keyword">in</span> range(<span class="number">0</span>, Len):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">0</span>, i + <span class="number">1</span>):</span><br><span class="line">            H[i][S] += F[j][S] * G[i-j][S]</span><br><span class="line">    H[i] = IFWT_OR(H[i])</span><br><span class="line"><span class="keyword">for</span> S <span class="keyword">in</span> range(<span class="number">0</span>, Len):</span><br><span class="line">    h[S] = H[bc[S]][S]</span><br></pre></td></tr></table></figure><p>完整板子代码如下，由于没有采用类似 FFT 蝴蝶操作的优化，效率不是很高，在LOJ的子集卷积模板题上跑了 <code>4500/5000 ms</code>。<a href="https://www.luogu.org/problemnew/solution/P4717" target="_blank" rel="noopener">Luogu 4717</a></p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 0, i##_end_ = (n); i &lt; i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Template starts here</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1000000009</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Len, Base; <span class="comment">// Ensure these values are calculated!!!!</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fmt_or(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dmt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Base; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">            A[S|(<span class="number">1</span>&lt;&lt;i)] = mo(A[S|(<span class="number">1</span>&lt;&lt;i)] + dmt*A[S]);</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fmt_and(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dmt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Base; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>)</span><br><span class="line">            A[S] = mo(A[S] + dmt*A[S|(<span class="number">1</span>&lt;&lt;i)]);</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; fwt_xor(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="keyword">int</span> dwt = <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Base; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            l = A[S], r = A[S|(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">            A[S] = mo(l + r);</span><br><span class="line">            A[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(dwt==<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> inv2 = qpow(Len, MOD<span class="number">-2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">            A[S] = muln(A[S], inv2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; conv(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; A, <span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; B, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(*fn)(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;,<span class="keyword">int</span>)) &#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; aa = fn(A, <span class="number">1</span>), bb = fn(B, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Len; ++i)</span><br><span class="line">        aa[i] = muln(aa[i], bb[i]);</span><br><span class="line">    aa = fn(aa, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> aa;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; pc;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_popcount</span><span class="params">(<span class="keyword">int</span> sz)</span> </span>&#123;</span><br><span class="line">    pc.resize(sz, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sz; ++i)</span><br><span class="line">        pc[i] = pc[i &gt;&gt; <span class="number">1</span>] + (i &amp; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; subset_conv(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; A, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; B) &#123;</span><br><span class="line">    get_popcount(Len);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; H(Len);</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; siga(Base+<span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(Len,<span class="number">0</span>)), sigb = siga, sigh = siga;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">        siga[pc[S]][S] = A[S], sigb[pc[S]][S] = B[S];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= Base; ++i) &#123;</span><br><span class="line">        siga[i] = fmt_or(siga[i], <span class="number">1</span>);</span><br><span class="line">        sigb[i] = fmt_or(sigb[i], <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; ++j)</span><br><span class="line">                sigh[i][S] = mo(sigh[i][S] + muln(siga[j][S], sigb[i-j][S]));</span><br><span class="line">        sigh[i] = fmt_or(sigh[i], <span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">        H[S] = sigh[pc[S]][S];</span><br><span class="line">    <span class="keyword">return</span> H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Template ends here</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> first = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : v) &#123;</span><br><span class="line">        <span class="keyword">if</span>(first) first = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a, b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    m = Len = <span class="number">1</span> &lt;&lt; n, Base = n;</span><br><span class="line">    a.resize(m), b.resize(m);</span><br><span class="line">    rep(i, m) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    rep(i, m) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i]);</span><br><span class="line">    </span><br><span class="line">    show(conv(a, b, fmt_and));</span><br><span class="line">    show(conv(a, b, fmt_or));</span><br><span class="line">    show(conv(a, b, fwt_xor));</span><br><span class="line">    show(subset_conv(a, b));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><h2 id="HAOI2015-按位或"><a href="#HAOI2015-按位或" class="headerlink" title="[HAOI2015] 按位或"></a>[HAOI2015] 按位或</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>刚开始你有一个数字0，每一秒钟你会随机选择一个 $[0,2^n-1]$ 的数字，与你手上的数字进行按位或操作。选择数字 $i$ 的概率是 $p_i$。保证 $0\leq p_i \leq1$，$\sum p_i = 1$。问期望多少秒后，你手上的数字变成 $2^n-1$。无穷输出 <code>INF</code></p><p>数据范围：$n\leq 20$</p><p>Source: <a href="https://lydsy.com/JudgeOnline/problem.php?id=4036" target="_blank" rel="noopener">BZOJ4036</a> vfk论文第一道例题。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>留坑。</p><h2 id="Day8-I-岸边露伴的人生经验"><a href="#Day8-I-岸边露伴的人生经验" class="headerlink" title="Day8 I. 岸边露伴的人生经验"></a>Day8 I. 岸边露伴的人生经验</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>岸边露伴是一个天才漫画家，他经常用自己的替身天堂之门来查看别人的人生经历，为自己的漫画积累素材。最近他学会了将一个人的人生经历编码成一个 $10$ 维的向量，每一维取值为 $\{0,1,2\}$ 中的一个元素。定义向量$\overrightarrow{V}=(x_1,x_2,\cdots,x_{10})$ 的模长 $|\overrightarrow{V}|$ 为 $\sqrt{x_1^2+x_2^2+\cdots+x_{10}^2}$。令第 $i$ 个人的人生经历对应的向量为$\overrightarrow{V_i}$，则第i<em>i</em>个人和第 $j$ 个人的人生轨迹的差别可以用 $|\overrightarrow{V_i}-\overrightarrow{V_j}|$ 衡量。岸边露伴收集了 $n$ 个人的向量，他想要知道这些人里，人生轨迹差别相同的二元组有多少对，即有多少个四元组 $(i,j,k,l)(1 \le i,j,k,l \le n)$ 满足 $|\overrightarrow{V_i}-\overrightarrow{V_j}|=|\overrightarrow{V_k}-\overrightarrow{V_l}|$ </p><p>数据范围：$n\leq 10^5$</p><p>Source: <a href="https://www.cometoj.com/contest/28/problem/I?problem_id=412" target="_blank" rel="noopener">CCPC-Wannafly Winter Camp Day8 (Div1, onsite) Day 8 Problem I</a></p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>考虑每个向量取值只有 $\{0,1\}$ 的情况，每个人的向量为一个二进制数，装进桶里，直接进行自己卷积自己的异或 FWT ，这时集合幂级数的每一项都代表这个集合被异或出来的 可能方式。再扫一遍每一个状态，按照 <code>bitcount</code> 统计距离，加入另一个数组，平方一下即可。</p><p>考虑这道题，多了一个 $2$ ，我们只需要把每一个向量中一个数位拆成两个字符即可，将 <code>1</code> 变为 <code>01</code> ，2 变为 <code>10</code> ， <code>0</code> 变为 <code>00</code> ，然后把上一种做法求 <code>bitcount</code> 统计距离的方式稍微改一下就可以了。</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by powerful Codeforces Tool</span></span><br><span class="line"><span class="comment"> * Author: YangDavid</span></span><br><span class="line"><span class="comment"> * Time: 2019-04-28 19:15:38</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">202000</span>, maxs = <span class="number">1</span> &lt;&lt; <span class="number">20</span>, BB = <span class="number">20</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> n, dif[<span class="number">10200</span>];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(maxs, <span class="number">0</span>), val(maxs, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line"><span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD;</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line"><span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fwt</span><span class="params">(<span class="keyword">int</span> dwt)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> l, r;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; BB; ++i) &#123;</span><br><span class="line"><span class="keyword">int</span> mask = (maxs<span class="number">-1</span>) ^ (<span class="number">1</span>&lt;&lt;i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> S = mask; S &gt;= <span class="number">0</span>; S = (S<span class="number">-1</span>)&amp;mask) &#123;</span><br><span class="line">l = a[S], r = a[S | (<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">a[S] = mo(l + r);</span><br><span class="line">a[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line"><span class="keyword">if</span>(S == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dwt == <span class="number">-1</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> fac = qpow(qpow(<span class="number">2</span>, MOD - <span class="number">2</span>), BB);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxs; ++i)</span><br><span class="line">a[i] = muln(a[i], fac);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="keyword">int</span> msk = <span class="number">0</span>, x;</span><br><span class="line">    rep(j, <span class="number">10</span>) &#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x);</span><br><span class="line">    msk &lt;&lt;= <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">1</span>) msk += <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x == <span class="number">2</span>) msk += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">a[msk]++;</span><br><span class="line">    &#125;</span><br><span class="line">    fwt(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; maxs; ++i)</span><br><span class="line">    a[i] = muln(a[i], a[i]);</span><br><span class="line">    fwt(<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    val[<span class="number">0</span>] = <span class="number">0</span>, val[<span class="number">1</span>] = <span class="number">1</span>, val[<span class="number">2</span>] = <span class="number">4</span>, val[<span class="number">3</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">4</span>; S &lt; maxs; S += <span class="number">4</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> t = val[S &gt;&gt; <span class="number">2</span>];</span><br><span class="line">    val[S] = t;</span><br><span class="line">    val[S+<span class="number">1</span>] = t + <span class="number">1</span>;</span><br><span class="line">    val[S+<span class="number">2</span>] = t + <span class="number">4</span>;</span><br><span class="line">    val[S+<span class="number">3</span>] = t + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; maxs; ++S) &#123;</span><br><span class="line">    dif[val[S]] += a[S];</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">100</span>; ++i) &#123;</span><br><span class="line">    res = mo(res + <span class="number">1L</span>L * dif[i] * dif[i] % MOD);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, res);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="CF1119-H-难题，精妙的-FWT"><a href="#CF1119-H-难题，精妙的-FWT" class="headerlink" title="CF1119 H. 难题，精妙的 FWT"></a>CF1119 H. 难题，精妙的 FWT</h2><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>给定 $a,b,c$ ，以及 $n$ 个 $k$ 位 bitmask $A_i,B_i,C_i$ ，求下面 $n$ 个集合幂级数的异或 FWT，即：<br>$$<br>\prod_{1\leq i\leq n} (ax^{A_i}+bx^{B_i}+cx^{C_i})<br>$$<br>数据范围：$n\leq 10^5,k\leq 17,0\leq A_i,B_i,C_i &lt; 2^k,$</p><p>Source: <a href="https://codeforces.com/contest/1119/problem/H" target="_blank" rel="noopener">Codeforces Global Round 2 Problem H</a></p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>按照正常的 FWT 思路，就是把这 $n$ 个集合幂级数分别求出 FWT，然后再点乘起来，然后再做 IFWT。复杂度是 $O(nk2^k)$ 的，无法通过此题。</p><p>但是这道题需要注意的一点是每一个集合幂级数都只有三项，并且 $a,b,c$ 是固定的。回顾 FWT 的公式：<br>$$<br>\hat{f}(S) = \sum_{T\subseteq 2^U} f(T) (-1)^{|S\cap T|}<br>$$<br>因此每个集合幂级数 FWT 之后也仅仅会有 $\pm a \pm b \pm c$ 这么 8 种项。为了使问题更加简单，我们进行这样的变换： $B_i:=B_i \oplus A_i,C_i := C_i \oplus A_i, A_i := 0$ 。变换之后我们得出的结果的第 $S$ 项就等价于答案的第 $S\oplus xorsum$ 项，其中 $xorsum = \oplus_{i=1}^n A_i$。可以发现，这样做之后只剩下 $a\pm b \pm c$ 这四项了。</p><p>我们的一个重要观察是，将 FWT 之后的这 $n$ 个集合幂级数乘起来的结果中，对于一个固定的位置 $S$ ，这一项的系数一定是 $(a+b+c)^x (a+b-c)^y (a-b+c)^z (a-b-c)^w$ 的形式。如果我们能够把 $x,y,z,w$ 解出来，整个问题就解决了。首先，我们有一个最朴素的关系式：<br>$$<br>x+y+z+w = n<br>$$<br>之后有两种说法，一种是<a href="https://codeforces.com/blog/entry/66411" target="_blank" rel="noopener">官方题解</a>所说的考虑所有 $n$ 个 FWT 之后的幂级数的第 $S$ 项之和，然后再多考虑一个条件即可得到四个方程；另一种则非常简洁、对称、优美，可是我对这种方法还没有简洁优美的证明。这种方法是这样的：</p><ul><li>将 $A_i\oplus B_i$ 的值统计入一个数组 $f$，对 $f$ FWT之后，对于其第 $S$ 项有：$x+y-z-w=f[S]$。</li><li>将 $A_i\oplus C_i$ 的值统计入一个数组 $g$，对 $g$ FWT之后，对于其第 $S$ 项有：$x-y+z-w=g[S]$。</li><li>将 $B_i\oplus C_i$ 的值统计入一个数组 $h$，对 $h$ FWT之后，对于其第 $S$ 项有：$x-y-z+w=h[S]$。</li></ul><p>然后消元法即可。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by powerful Codeforces Tool</span></span><br><span class="line"><span class="comment"> * Author: YangDavid</span></span><br><span class="line"><span class="comment"> * Time: 2019-05-02 16:57:53</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">102000</span>, MS = (<span class="number">1</span> &lt;&lt; <span class="number">17</span>) + <span class="number">2</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> A[maxn], B[maxn], C[maxn], n, k, full;</span><br><span class="line"><span class="keyword">int</span> AB[MS], AC[MS], BC[MS], ans[MS], out[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">if</span>(x &gt;= MOD) x -= MOD; <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD; <span class="keyword">return</span> x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inv2 = qpow(<span class="number">2</span>, MOD - <span class="number">2</span>), inv4 = qpow(<span class="number">4</span>, MOD - <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fwt</span><span class="params">(<span class="keyword">int</span>* arr, <span class="keyword">int</span> dwt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            l = arr[S], r = arr[S|(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">            arr[S] = mo(l + r);</span><br><span class="line">            arr[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> iv = qpow(full, MOD - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(dwt == <span class="number">-1</span>) <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        arr[S] = muln(arr[S], iv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> gg[<span class="number">4</span>], a, b, c, xorsum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gett</span><span class="params">(ll s, ll t, ll u, ll v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = muln(mo(mo(s+t)+mo(u+v)), inv4);</span><br><span class="line">    <span class="keyword">int</span> y = mo(muln(mo(s+t), inv2) - x);</span><br><span class="line">    <span class="keyword">int</span> z = mo(muln(mo(s+u), inv2) - x);</span><br><span class="line">    <span class="keyword">int</span> w = mo(muln(mo(s+v), inv2) - x);</span><br><span class="line">    <span class="keyword">return</span> muln( muln(qpow(gg[<span class="number">0</span>],x),qpow(gg[<span class="number">1</span>],y)) , muln(qpow(gg[<span class="number">2</span>],z),qpow(gg[<span class="number">3</span>],w)) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>, &amp;n, &amp;k, &amp;a, &amp;b, &amp;c); full = (<span class="number">1</span> &lt;&lt; k);</span><br><span class="line">    gg[<span class="number">0</span>] = mo(mo(a+b)+c), gg[<span class="number">1</span>] = mo(mo(a+b)-c), gg[<span class="number">2</span>] = mo(mo(a-b)+c), gg[<span class="number">3</span>] = mo(mo(a-b)-c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;A[i], &amp;B[i], &amp;C[i]);</span><br><span class="line">        AB[A[i]^B[i]]++, AC[A[i]^C[i]]++, BC[B[i]^C[i]]++;</span><br><span class="line">        xorsum ^= A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    fwt(AB), fwt(AC), fwt(BC);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S) &#123;</span><br><span class="line">        ans[S] = gett(n, AB[S], AC[S], BC[S]);</span><br><span class="line">    &#125;</span><br><span class="line">    fwt(ans, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        out[S] = ans[S ^ xorsum];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, out[S], <span class="string">" \n"</span>[S==full<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="CF662C-超级好题"><a href="#CF662C-超级好题" class="headerlink" title="CF662C 超级好题"></a>CF662C 超级好题</h2><h3 id="Description-3"><a href="#Description-3" class="headerlink" title="Description"></a>Description</h3><p>你有一个 $n$ 行 $m$ 列的 01 矩阵，你可以进行翻转行与翻转列两种操作（翻转即 0 变 1，1 变 0）任意多次，问最后得到的矩阵的 1 的个数最少是多少。</p><p>数据范围：$n\leq 20,m\leq 100000$</p><p>Source: CROC 2016 - Final Round <a href="https://codeforces.com/contest/662/C" target="_blank" rel="noopener">Problem C. Binary Table</a></p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><p>注意 $n\leq 20$ 的条件。先考虑 $O(m2^n )$ 暴力怎么做。记第 $j$ 列的数的 bitmask 为 $A_j$ ，我们枚举行的翻转状态的 bitmask为 $S$ ，然后对于每一种状态 $S$，我们查看每一列，第 $j$ 列被变为了 $A_j \oplus S$。考虑这一列是否翻转，显见答案增加了 $\min\{pop(A_j \oplus S), n-pos(A_J\oplus S)\}$，其中 $pop(S)$ 是指 $S$ 二进制表示中 1 的个数。我们记$f(S) = \min\{pop(S),n-pop(S)\}$ ，那么对于行的枚举状态 $S$ 我们得到的答案就是这个：<br>$$<br>\sum_{i=1}^m f(S\oplus A_i)<br>$$<br>由于 $A_j$ 的值域也是 $2^n$，我们记 $A$ 中 $x$ 这个值出现的次数为 $c(x)$，那么上式可以改写为：<br>$$<br>\sum_{T \subseteq 2^n} f(T \oplus S) \cdot c(T)<br>$$<br>是不是有点 FWT 的形式了？进一步地：<br>$$<br>\begin{aligned}<br>ans(S) &amp;= \sum_{T \oplus U = S} f(T) c(U)<br>\end{aligned}<br>$$<br>这不正是 FWT 吗？于是我们求出 $f$ 与 $c$ 的异或 FWT，然后扫一边 ans 数组找最小值即可。</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxs = (<span class="number">1</span> &lt;&lt; <span class="number">20</span>) + <span class="number">2333</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> c[maxs], g[maxs], n, m, full , pop[maxs];</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">22</span>][<span class="number">101010</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">if</span>(x &gt;= MOD) <span class="keyword">return</span> x-MOD; <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="keyword">return</span> x+MOD; <span class="keyword">return</span> x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> (ll)x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> Base, Len;</span><br><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">fwt</span><span class="params">(<span class="keyword">int</span>* A, <span class="keyword">int</span> dwt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Base; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            l = A[S], r = A[S|(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">            A[S] = mo(l + r);</span><br><span class="line">            A[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span>(dwt==<span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> inv2 = qpow(Len, MOD<span class="number">-2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; Len; ++S)</span><br><span class="line">            A[S] = muln(A[S], inv2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    full = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j)</span><br><span class="line">            res = <span class="number">2</span> * res + s[j][i] - <span class="string">'0'</span>;</span><br><span class="line">        c[res]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">1</span>; S &lt;= full; ++S) &#123;</span><br><span class="line">        pop[S] = pop[S&gt;&gt;<span class="number">1</span>] + (S&amp;<span class="number">1</span>);</span><br><span class="line">        g[S] = min(pop[S], n - pop[S]);</span><br><span class="line">    &#125;</span><br><span class="line">    Len = <span class="number">1</span>&lt;&lt;n, Base = n;</span><br><span class="line">    fwt(c, <span class="number">1</span>);</span><br><span class="line">    fwt(g, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt;= full; ++S)</span><br><span class="line">        c[S] = muln(c[S], g[S]);</span><br><span class="line">    fwt(c, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt;= full; ++S)</span><br><span class="line">        ans = min(ans, c[S]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>[HDU5909]</p><p>[WC2018]州区划分</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;受这几天看到的不少高维前缀和题目的影响，我决定系统地学习一下集合幂级数的一套理论了。内容主要来自2015年吕凯风（VFleaKing）国家集训队论文《集合幂级数的性质与应用及其快速算法》（pdf版本会放在附录里），包括&lt;strong&gt;集合并卷积、集合对称差卷积、子集卷积、快速莫比乌斯变换、快速莫比乌斯反演、快速沃尔什变换及逆变换&lt;/strong&gt;等，以及附带进行的一些练习。&lt;/p&gt;
&lt;p&gt;[TODO] 把练习第一题搞清楚&lt;br&gt;[TODO] 把第三道论文题学会&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="高维前缀和（FMT）" scheme="http://yoursite.com/tags/%E9%AB%98%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%88FMT%EF%BC%89/"/>
    
      <category term="快速沃尔什变换系列（FMT，FWT等）" scheme="http://yoursite.com/tags/%E5%BF%AB%E9%80%9F%E6%B2%83%E5%B0%94%E4%BB%80%E5%8F%98%E6%8D%A2%E7%B3%BB%E5%88%97%EF%BC%88FMT%EF%BC%8CFWT%E7%AD%89%EF%BC%89/"/>
    
      <category term="集合幂级数" scheme="http://yoursite.com/tags/%E9%9B%86%E5%90%88%E5%B9%82%E7%BA%A7%E6%95%B0/"/>
    
      <category term="子集卷积" scheme="http://yoursite.com/tags/%E5%AD%90%E9%9B%86%E5%8D%B7%E7%A7%AF/"/>
    
  </entry>
  
  <entry>
    <title>Opentrains 1505 训练报告</title>
    <link href="http://yoursite.com/2019/04/24/Opentrains-1505-%E8%AE%AD%E7%BB%83%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/04/24/Opentrains-1505-训练报告/</id>
    <published>2019-04-24T11:27:30.000Z</published>
    <updated>2019-05-02T11:30:53.668Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Petrozavodsk-Summer-2017-Moscow-IPT-Contest"><a href="#Petrozavodsk-Summer-2017-Moscow-IPT-Contest" class="headerlink" title="Petrozavodsk Summer-2017. Moscow IPT Contest."></a>Petrozavodsk Summer-2017. Moscow IPT Contest.</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center"></td><td style="text-align:center">4:40</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">4:11</td><td style="text-align:center"></td><td style="text-align:center">(0)</td><td style="text-align:center">2:13</td><td style="text-align:center">1:25</td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center">$\mathcal O$</td><td style="text-align:center"></td><td style="text-align:center">AC</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center">$\mathcal {O}$</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="red">*</font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">15</td><td style="text-align:center">45</td><td style="text-align:center">2</td><td style="text-align:center">14</td><td style="text-align:center">6</td><td style="text-align:center">10</td><td style="text-align:center">63</td><td style="text-align:center">32</td><td style="text-align:center">52</td><td style="text-align:center">86</td><td style="text-align:center">71</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">dp</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">KMP</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">讨论</td><td style="text-align:center">构造</td><td style="text-align:center">思维</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">LIS</td><td style="text-align:center">组合</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">988</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">1300</font></td><td style="text-align:center"><font color="blue">1836</font></td><td style="text-align:center"><font color="blue">3408</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">cyy</td><td style="text-align:center">cyy</td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid+</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center">cyy</td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">★★</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">★</td><td style="text-align:center">★★</td><td style="text-align:center">★</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center">★</td><td style="text-align:center">★</td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><p>XHT Red Sun 队第一次（也许算正式？）训练（不过 wzk 去参加 JSOI 了，只有我和 cyy 打）。</p><ul><li>Solved during contest:  <code>4/11</code></li><li>Upsolved after contest: <code>6/11</code></li><li>Orially solved: <code>8/11</code></li><li>Rank: <code>55/94</code></li></ul><a id="more"></a><p>难度顺序：<br>$$<br>J\to K \to G \to B \to H \to D,F,I<br>$$<br>几点感受：</p><ul><li>开局还是需要稳健，签到题确认结论时应当想清楚结论的细节以及证明</li><li>感觉我赛时写 G 题的代码有点太慌张了，浪费了不少时间。</li><li>H 题不难，本应场上写出来的。</li><li>F 题直接大力分类讨论就好了。。。没有几种情况，但是榜上过的人比较少。感觉赛时没做有点失策。</li></ul><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><h2 id="Prob-B-FMT，高维前缀和，SOS-dp"><a href="#Prob-B-FMT，高维前缀和，SOS-dp" class="headerlink" title="Prob B. FMT，高维前缀和，SOS dp"></a>Prob B. FMT，高维前缀和，SOS dp</h2><blockquote><p><em>Solved By hdmmblz at 04:40 (1 try)</em></p></blockquote><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>对于一个长度为 $n$ 的非负整数序列 $b_1,b_2,…,b_n$，定义这个序列的能量为：<br>$$<br>LP(b) = \max_{i=0,1,\cdots,n} (b_1 \oplus b_2 \oplus \cdots \oplus b_i) + (b_{i+1}\oplus\cdots\oplus b_n)<br>$$<br>其中 $\oplus$ 表示按位异或 (XOR)，给定一个长度为 $n$ 的非负整数序列 $\{a\} = a_1,a_2,…,a_n$， 请计算 a 的每个前缀的能量值。</p><p>数据范围： $n\leq 10^6, a_i\leq 10^6$</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>首先，分析 LP 的性质，假设 $s_j = \oplus_{i=1}^j a_j$ ，很容易看到 $a$ 的前 $c$  个元素组成的前缀 $pref_c$ 的 LP 值为：<br>$$<br>LP(pref_c) = \max_{i=0,1,\cdots,c} s_i + (s_c \oplus s_i)<br>$$<br>由于$x\oplus y = x - y + 2\text{ } (\text{~}x  \&amp;   y)$ ，可以推断得到：<br>$$<br>LP(pref_c) = s_c + 2\cdot \max_{i=0,1,\cdots,c}s_c \&amp;\text{~} s_i<br>$$<br>因此我们将这道题转化到下面的等价形式：</p><blockquote><p>你有一个空集合 $A$，你需要进行以下两个操作：</p><ol><li>Query $x$ ，表示求 $\max\limits_{a\in A} a\&amp; x$ 。</li><li>Insert $x$，表示将 $x$ 插入集合 $A$ 中.</li></ol></blockquote><p>可是这个问题怎么解决呢？开始我的想法是将 $A$ 集合建 01-trie 树，从大到小考虑所有数位，碰到 $x$ 中 1 的数位就尽量往 trie 的 1 方向走。可是碰到 $x$ 中 0 的数位就会失效， trie 树的两个子树都要考虑，这样做可能会遍历整个 trie 树，复杂度必然会失效。</p><p>实际上，我们可以感觉到这个问题和前缀和有一定的相似之处。碰到 1 的情况就是尽量选，只有一条路；碰到 0 的情况无限制，有两条路。这里我们又注意到值域是 $\leq 10^6$ 的，因此我们可以将问题离线，之后使用黑科技——高维前缀和（不过这里是前缀 $\min$）。我们定义 $dp[mask]$ 表示 $s$ 中最小的下标 $x$，使得 $s_x$ 含有 $mask$ 的二进制表示中每一个数位 1 ，即 $s_i \&amp; mask = mask$。</p><p>我们可以先初始化 $dp[i]=\infty$ ，然后令 $dp[s_i]=i$ 作为初值条件，然后跑高维前缀 $\min$（FMT，Sum over Subset等等一系列等价说法）即可得到上面想要的 $dp[mask]$ 的性质。考虑如何回答询问，回答第 $i$ 个询问时，我们初始化 $mask=0$ ，然后依次从大到小考虑每一位进行贪心。如果这一位 $s_c$ 为 1，则尽量使mask这一位也变成 1，检查 $dp[mask]$ 是否超过 $i$。如果 $s_c$ 这一位是 0那就不考虑。这样就解决了问题。</p><p>时间复杂度 $\mathcal O (2^m \cdot m)$，$m$ 是值域的二进制最大位数，这里取 20。</p><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>感觉这是一道牛逼题啊，2017 年 8 月的 Petrozavodsk 冬令营题，2017 年 11 月就成了 BZOJ 月赛题了。题号5092: [Lydsy1711月赛]分割序列。cyy 现场 29 分钟 AC，太强了</p><p>有关高维前缀和，我找到了以下资源：</p><p><a href="https://codeforces.com/blog/entry/45223" target="_blank" rel="noopener">Codeforces 上的 SOS dp 教程</a></p><p>SPOJ Time limit exceeded</p><p>CF 449D</p><p>BZOJ4036</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUFF_SIZE = <span class="number">1</span> &lt;&lt; <span class="number">20</span>;</span><br><span class="line"><span class="keyword">char</span> BUFF[BUFF_SIZE],*BB,*BE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() (BB == BE ? (BE = (BB = BUFF) + fread(BUFF,1,BUFF_SIZE,stdin),BB == BE ? EOF : *BB++) : *BB++)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">4004000</span>, bit = <span class="number">20</span>, full = <span class="number">1048575</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], n, sum, dp[maxn];</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  Question equiv to 2 ops:</span></span><br><span class="line"><span class="comment">  1. Given a set A and number b, find b+2max(a&amp;~b))</span></span><br><span class="line"><span class="comment">  2. Insert number x in the set A.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">upd</span><span class="params">(<span class="keyword">int</span>&amp; x, <span class="keyword">int</span> y)</span> </span>&#123; x = min(x, y); &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    read(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n; ++i) &#123;</span><br><span class="line">        read(a[i]);</span><br><span class="line">        <span class="keyword">if</span>(i) a[i] ^= a[i - <span class="number">1</span>];</span><br><span class="line">        upd(dp[a[i]], i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> d = <span class="number">0</span>; d &lt; bit; ++d) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = full; S &gt;= <span class="number">0</span>; --S) <span class="keyword">if</span>(S &gt;&gt; d &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            upd(dp[S ^ (<span class="number">1</span>&lt;&lt;d)], dp[S]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> b = a[i], c = ~b &amp; full, cur = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = bit<span class="number">-1</span>; j &gt;= <span class="number">0</span>; --j) <span class="keyword">if</span>(c&gt;&gt;j&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[cur | (<span class="number">1</span> &lt;&lt; j)] &lt; i)</span><br><span class="line">                cur |= (<span class="number">1</span> &lt;&lt; j);</span><br><span class="line">        &#125;</span><br><span class="line">        write(b + <span class="number">2</span> * cur);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">" \n"</span>[i==n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-F-分类讨论"><a href="#Prob-F-分类讨论" class="headerlink" title="Prob F. 分类讨论"></a>Prob F. 分类讨论</h2><blockquote><p><em>Upsolved by YangDavid (1 try)</em></p></blockquote><p>直接分 6 种情况讨论即可。。。具体讨论过程见代码。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line">ll n, m, k, n1, n0, m1, m0;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>, &amp;n, &amp;m, &amp;k);</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(n * m % <span class="number">2</span> == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, n * m);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n &gt; m) swap(n, m);</span><br><span class="line">    n1 = n / k, n0 = n % k;</span><br><span class="line">    m1 = m / k, m0 = m % k;</span><br><span class="line">    <span class="keyword">if</span>(n1 == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(m1 == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (n-k+<span class="number">1</span>) * (m-k+<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(m1 == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (n0+<span class="number">1</span>) * max(<span class="number">0L</span>L, <span class="number">3L</span>L*k-m<span class="number">-1</span>));</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(m1 == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, n0 + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n1 == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(m1 == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(n0 == k - <span class="number">1</span> || m0 == k - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/* We must do like this: (Destroy all of 4 blocks)</span></span><br><span class="line"><span class="comment">                XX-</span></span><br><span class="line"><span class="comment">                XX-</span></span><br><span class="line"><span class="comment">                ---</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, (k*<span class="number">3</span>-m<span class="number">-1</span>)*(k*<span class="number">3</span>-n<span class="number">-1</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(m1 == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">              .X.      X..    ..X   ...   ...</span></span><br><span class="line"><span class="comment">              .X.      ...    ...   X..   ..X</span></span><br><span class="line"><span class="comment">              ---      ---    ---   X--   --X</span></span><br><span class="line"><span class="comment">            Case 1           Case 2</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">            <span class="keyword">if</span>(n0 == k - <span class="number">1</span>) &#123; <span class="built_in">puts</span>(<span class="string">"0"</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">            ll ans = k * <span class="number">3</span> - n - <span class="number">1</span>; <span class="comment">// Case 1</span></span><br><span class="line">            ans += <span class="number">4</span> * (n - <span class="number">2</span> * k + <span class="number">1</span>); <span class="comment">// Case 2</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"1"</span>); <span class="comment">// Brute force to prove this.</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-G-构造好题"><a href="#Prob-G-构造好题" class="headerlink" title="Prob G. 构造好题"></a>Prob G. 构造好题</h2><blockquote><p><em>Solved by YangDavid at 04:11 (2 tries)</em></p></blockquote><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>你需要构造这么一个 $n$ 位二进制串 $s$，（$n$ 是偶数）使得它的任何一个前缀 $pref_i$ 代表的二进制数 $\pmod n$ 两两互不同余。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>首先，显然可以把这道题转化为一个图论问题：</p><blockquote><p>给出一张 $n$ 个节点的有向图，节点编号依次为 $0,1,\cdots,n-1$ 。其中 $i$ 号节点会与 $2i\bmod n, 2i+1\bmod n$ 这两个节点连边，请找出这个图中的一条哈密尔顿回路。</p></blockquote><p>我们将两个相邻的小节点定义为一个大节点。具体说是 $\{0,1\},\{2,3\},\cdots,\{n-2,n-1\}$ 各组成一个大节点。我们规定若小节点 $i,j$ 之间有边，那么它们对应的大节点之间也会连边。于是我们发现第 $i$ 个大节点会向 $2i,2i+1$ 这两个大节点连边，每个大节点恰好连出去两条边，且连进来两条边，是一个欧拉图。找到欧拉回路之后，每个大节点出现两次，我们只需要确定两次大节点分别代表哪一个小节点就可以将欧拉回路改成要求的哈密尔顿回路。实际上根据大节点连边的特性，我们倒序考虑即可完成这件事情。细节见代码。</p><h3 id="Comment-1"><a href="#Comment-1" class="headerlink" title="Comment"></a>Comment</h3><p>碰到了喜欢的构造题，感觉海星。这道题又是一道构造哈密尔顿回路。前面提到的构造哈密尔顿回路用到的主要方法有随机化搜索、硬核构造、 Dirac 定理等等（如Google Code Jam Round 1A <a href="https://yang2002.github.io/2019/04/13/Google-Code-Jam-Round-1A-%E6%B8%B8%E8%AE%B0%EF%BC%88%E9%99%84%E9%A2%98%E8%A7%A3%EF%BC%89/" target="_blank" rel="noopener">Problem A</a>, <a href="https://yang2002.github.io/2019/03/17/Atcoder-Grand-Contest-031-%E6%AF%94%E8%B5%9B%E6%80%BB%E7%BB%93/#Prob-C-%E6%9E%84%E9%80%A0%EF%BC%8C%E6%A0%BC%E9%9B%B7%E7%A0%81%EF%BC%8C%E5%A5%BD%E9%A2%98" target="_blank" rel="noopener">AGC031 C题</a> )，不过这道题的方法则非常有趣，又给了我一种新的思路，即利用欧拉回路找到哈密尔顿回路的。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2020</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> G[maxn][maxn], vis[maxn][maxn], hf;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ans;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; lf[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">euler</span><span class="params">(<span class="keyword">int</span> u)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">0</span>; v &lt; hf; ++v) <span class="keyword">if</span>(G[u][v] &amp;&amp; !vis[u][v]) &#123;</span><br><span class="line">vis[u][v] = <span class="literal">true</span>;</span><br><span class="line">euler(v);</span><br><span class="line">&#125;</span><br><span class="line">ans.push_back(u);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">lk</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">x %= n, y %= n;</span><br><span class="line">x &gt;&gt;= <span class="number">1</span>, y &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">G[x][y] = <span class="literal">true</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i += <span class="number">2</span>) &#123;</span><br><span class="line">lk(i, i * <span class="number">2</span>);</span><br><span class="line">lk(i + <span class="number">1</span>, i * <span class="number">2</span> + <span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>) &#123; <span class="built_in">puts</span>(<span class="string">"10"</span>); <span class="keyword">return</span> <span class="number">0</span>; &#125;</span><br><span class="line">hf = n / <span class="number">2</span>;</span><br><span class="line">build();</span><br><span class="line">euler(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n; ++i) &#123;</span><br><span class="line">        lf[i].insert(i * <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">        lf[i].insert(i * <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reverse(ans.begin(), ans.end());</span><br><span class="line">    ans.pop_back();</span><br><span class="line"><span class="keyword">int</span> cur = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> it = ans.rbegin(); it != ans.rend(); ++it) &#123;</span><br><span class="line">        <span class="keyword">auto</span> g = *it;</span><br><span class="line">        <span class="keyword">if</span>(lf[g].count(cur / <span class="number">2</span>)) &#123;</span><br><span class="line">            <span class="keyword">auto</span> v = cur / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(v * <span class="number">2</span> == cur) res += <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(v * <span class="number">2</span> + <span class="number">1</span> == cur) res += <span class="string">'1'</span>;</span><br><span class="line">            cur = v;</span><br><span class="line">            lf[g].erase(v);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(lf[g].count((cur + n) / <span class="number">2</span>)) &#123;</span><br><span class="line">            <span class="keyword">auto</span> v = cur / <span class="number">2</span> + n / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(v * <span class="number">2</span> % n == cur) res += <span class="string">'0'</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>((v*<span class="number">2</span>+<span class="number">1</span>) % n == cur) res += <span class="string">'1'</span>;</span><br><span class="line">            cur = v;</span><br><span class="line">            lf[g].erase(v);</span><br><span class="line">        &#125; <span class="keyword">else</span> assert(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(res.begin(), res.end());</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-H-扫描线-模拟"><a href="#Prob-H-扫描线-模拟" class="headerlink" title="Prob H. 扫描线+模拟"></a>Prob H. 扫描线+模拟</h2><blockquote><p><em>Upsolved by YangDavid on 2019.4.28 (1 try)</em></p></blockquote><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>给你一个 $n\times  m$ 的表格，由 <code>+</code> 和 <code>-</code> 组成。一步操作可以选取一个位置，把它所在的行和列翻转，该元素本身仅被翻转一次。现在进行如下的操作：每轮把所有 <code>+</code> 的位置记录下来，然后对每个记录下来的位置进行一步操作，直到所有元素都为 <code>-</code>。问要进行多少<strong>步</strong>操作。</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>首先，线段树+扫描线统计出来初始条件下每一行、每一列+号的奇偶性，之后就可以发现行与列奇偶性相同的方格一定会变为 <code>-</code> ，不同的一定会变为 <code>+</code> 。交换行列的顺序是不影响答案的，因此经过一次变换之后，经过一番操作，矩形将被分成四个小矩形，我们只需要记录有几个横行 <code>+</code> 的个数是奇数，几个纵列 <code>+</code> 的个数是奇数，最多只有 16 种状态，直接模拟即可。如果出现重复状态，那么就说明不可以。</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">402000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, q, row[maxn], col[maxn];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">event</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> l, r, t;</span><br><span class="line">    event(<span class="keyword">int</span> L, <span class="keyword">int</span> R, <span class="keyword">int</span> T): l(L), r(R), t(T) &#123; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> event&amp; ev) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> t &lt; ev.t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;event&gt; erow, ecol;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">segtree</span> &#123;</span></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; tag, sumv;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> lson (o &lt;&lt; 1)</span></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> rson (o &lt;&lt; 1 | 1)</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pushdown</span><span class="params">(<span class="keyword">int</span> o, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tag[o]) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            tag[lson] ^= <span class="number">1</span>;</span><br><span class="line">            sumv[lson] = mid - l + <span class="number">1</span> - sumv[lson];</span><br><span class="line">            tag[rson] ^= <span class="number">1</span>;</span><br><span class="line">            sumv[rson] = r - mid - sumv[rson];</span><br><span class="line">            tag[o] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">pushup</span><span class="params">(<span class="keyword">int</span> o)</span> </span>&#123; sumv[o] = sumv[lson] + sumv[rson]; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">flip</span><span class="params">(<span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> o=<span class="number">1</span>, <span class="keyword">int</span> l=<span class="number">1</span>, <span class="keyword">int</span> r=<span class="number">100005</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(ql &lt;= l &amp;&amp; r &lt;= qr) &#123;</span><br><span class="line">            tag[o] ^= <span class="number">1</span>;</span><br><span class="line">            sumv[o] = r - l + <span class="number">1</span> - sumv[o];</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pushdown(o, l, r);</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(ql &lt;= mid) flip(ql, qr, lson, l, mid);</span><br><span class="line">        <span class="keyword">if</span>(qr &gt; mid) flip(ql, qr, rson, mid + <span class="number">1</span>, r);</span><br><span class="line">        pushup(o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> sumv[<span class="number">1</span>]; &#125;</span><br><span class="line">    segtree() &#123; </span><br><span class="line">        tag = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(maxn, <span class="number">0</span>);</span><br><span class="line">        sumv = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(maxn, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; tr;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> xf, yf, xs, ys;</span><br><span class="line">ll tot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">scan</span><span class="params">(<span class="built_in">vector</span>&lt;event&gt; e, <span class="keyword">int</span>* par, <span class="keyword">int</span> lim)</span> </span>&#123;</span><br><span class="line">    ll ret = <span class="number">0</span>;</span><br><span class="line">    sort(e.begin(), e.end());</span><br><span class="line">    tr = segtree();</span><br><span class="line">    <span class="keyword">int</span> sz = e.size(), curt = <span class="number">1</span>, cursum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ) &#123;</span><br><span class="line">        ret += <span class="number">1L</span>L * cursum * (e[i].t - curt);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t = curt; t &lt; e[i].t; ++t)</span><br><span class="line">            par[t] = cursum &amp; <span class="number">1</span>;</span><br><span class="line">        curt = e[i].t;</span><br><span class="line">        <span class="keyword">while</span>(curt == e[i].t) &#123;</span><br><span class="line">            tr.flip(e[i].l, e[i].r);</span><br><span class="line">            <span class="keyword">if</span>(++i &gt;= sz) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cursum = tr.query();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(curt &lt;= lim) ret += <span class="number">1L</span>L * (lim - curt + <span class="number">1</span>) * cursum;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n, m, q);</span><br><span class="line">    rep(i, q) &#123;</span><br><span class="line">        read(xf, yf, xs, ys);</span><br><span class="line">        erow.emplace_back(yf, ys, xf);</span><br><span class="line">        erow.emplace_back(yf, ys, xs + <span class="number">1</span>);</span><br><span class="line">        ecol.emplace_back(xf, xs, yf);</span><br><span class="line">        ecol.emplace_back(xf, xs, ys + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tot = scan(erow, row, n);</span><br><span class="line">    assert(tot == scan(ecol, col, m));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> r1 = <span class="number">0</span>, c1 = <span class="number">0</span>, r0, c0;</span><br><span class="line">    rep(i, n) r1 += row[i];</span><br><span class="line">    rep(i, m) c1 += col[i];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span>&lt; pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; &gt; st;</span><br><span class="line">    <span class="keyword">while</span>(r1 + c1 != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(st.count(&#123;r1, c1&#125;)) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        st.emplace(r1, c1);</span><br><span class="line">        r0 = n - r1, c0 = m - c1;</span><br><span class="line">        tot += <span class="number">1L</span>L * r1 * c0 + <span class="number">1L</span>L * r0 * c1;</span><br><span class="line">        <span class="keyword">int</span> nr1 = r1 * (c0&amp;<span class="number">1</span>) + r0 * (c1&amp;<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> nc1 = c1 * (r0&amp;<span class="number">1</span>) + c0 * (r1&amp;<span class="number">1</span>);</span><br><span class="line">        r1 = nr1, c1 = nc1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, tot);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-J-LIS"><a href="#Prob-J-LIS" class="headerlink" title="Prob J. LIS"></a>Prob J. LIS</h2><blockquote><p><em>Solved by hdmmblz on 02:13 (2 tries)</em></p></blockquote><p>简单题，直接将原来两个串的 LIS 的长度加起来就好了。证明：</p><ul><li>首先，长度为两个LIS长度加起来的LIS是可以构造出来的。考虑合并两个串时用归并排序的策略归并两个 LIS</li><li>其次，如果有更长的，那么在其中一个序列中将会出现比 LIS 更长的上升子序列，矛盾。</li></ul><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,m,cnt=<span class="number">0</span>,i,a[<span class="number">500005</span>],b[<span class="number">500005</span>],dp[<span class="number">500005</span>],hd1,hd2,pos,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> ll inf=<span class="number">1e18</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;b[i]);</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)dp[i]=inf;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">pos=lower_bound(dp,dp+n+<span class="number">1</span>,a[i])-dp;</span><br><span class="line">dp[pos]=a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=n;i&gt;=<span class="number">0</span>;i--)<span class="keyword">if</span>(dp[i]&lt;inf)<span class="keyword">break</span>;</span><br><span class="line">ans=i;</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)dp[i]=inf;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line">pos=lower_bound(dp,dp+m+<span class="number">1</span>,b[i])-dp;</span><br><span class="line">dp[pos]=b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=m;i&gt;=<span class="number">0</span>;i--)<span class="keyword">if</span>(dp[i]&lt;inf)<span class="keyword">break</span>;</span><br><span class="line">ans+=i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-K-数学"><a href="#Prob-K-数学" class="headerlink" title="Prob K. 数学"></a>Prob K. 数学</h2><blockquote><p><em>Solved by hdmmblz on 01:25 (2 tries)</em></p></blockquote><p>推一推式子就好了。</p><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,m,k,i,fac[<span class="number">1000005</span>],invfac[<span class="number">1000005</span>],ans;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>; </span><br><span class="line"><span class="function">ll <span class="title">pow</span><span class="params">(ll a,ll b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1L</span>L)ans=ans*a%mod;</span><br><span class="line">a=a*a%mod;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(ll x,ll y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">-1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> fac[x]*invfac[y]%mod*invfac[x-y]%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%lld"</span>,&amp;n,&amp;k,&amp;m);</span><br><span class="line">fac[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)fac[i]=fac[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">invfac[n]=<span class="built_in">pow</span>(fac[n],mod<span class="number">-2L</span>L);</span><br><span class="line"><span class="keyword">for</span>(i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)invfac[i]=invfac[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%mod;</span><br><span class="line"><span class="keyword">for</span>(i=m;i&lt;n-(k-m);i++)ans=(ans+<span class="number">2L</span>L*C(i<span class="number">-2L</span>L,m<span class="number">-2L</span>L)*(n-k+m-i))%mod;</span><br><span class="line">ans=(ans-(n-k)+mod)%mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Petrozavodsk-Summer-2017-Moscow-IPT-Contest&quot;&gt;&lt;a href=&quot;#Petrozavodsk-Summer-2017-Moscow-IPT-Contest&quot; class=&quot;headerlink&quot; title=&quot;Petrozavodsk Summer-2017. Moscow IPT Contest.&quot;&gt;&lt;/a&gt;Petrozavodsk Summer-2017. Moscow IPT Contest.&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:40&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:11&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;(0)&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2:13&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1:25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal O$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal {O}$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;*&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;15&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;45&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;63&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;52&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;86&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;71&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dp&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;KMP&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;讨论&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;思维&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;LIS&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;组合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;988&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1300&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1836&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;3408&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cyy&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cyy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cyy&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;p&gt;XHT Red Sun 队第一次（也许算正式？）训练（不过 wzk 去参加 JSOI 了，只有我和 cyy 打）。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest:  &lt;code&gt;4/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upsolved after contest: &lt;code&gt;6/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orially solved: &lt;code&gt;8/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank: &lt;code&gt;55/94&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="哈密尔顿路径" scheme="http://yoursite.com/tags/%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%B7%AF%E5%BE%84/"/>
    
      <category term="Opentrains" scheme="http://yoursite.com/tags/Opentrains/"/>
    
      <category term="高维前缀和（FMT）" scheme="http://yoursite.com/tags/%E9%AB%98%E7%BB%B4%E5%89%8D%E7%BC%80%E5%92%8C%EF%BC%88FMT%EF%BC%89/"/>
    
      <category term="LIS" scheme="http://yoursite.com/tags/LIS/"/>
    
  </entry>
  
  <entry>
    <title>最小圆（球）覆盖学习笔记</title>
    <link href="http://yoursite.com/2019/04/21/%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/04/21/最小圆覆盖学习笔记/</id>
    <published>2019-04-21T15:15:14.000Z</published>
    <updated>2019-05-06T10:07:41.806Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最小圆覆盖问题"><a href="#最小圆覆盖问题" class="headerlink" title="最小圆覆盖问题"></a>最小圆覆盖问题</h1><p>给出 $N$ 个点，让你画一个最小的包含所有点的圆。输出圆心、半径。</p><p>数据范围 $N\leq 10^5$</p><p>模板提交链接：[<a href="https://www.luogu.org/problemnew/show/P1742" target="_blank" rel="noopener">Luogu 1742</a>] [<a href="https://lydsy.com/JudgeOnline/problem.php?id=1337" target="_blank" rel="noopener">BZOJ 1337</a>]</p><p>[TODO] 随机增量法复杂度分析</p><a id="more"></a><h1 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h1><p>一般有两种做法：随机增量法与模拟退火法。随机增量法是一种确定性算法，随机意义下均摊复杂度 $O(n)$ ，而且可以达到很高的精度（可达到 $10^{-10}$ 量级）；而模拟退火法是启发式算法，需要结合调整参数从而得到一定精度，精度一般只可以可达到 $10^{-5}$ 量级。</p><h2 id="随机增量法"><a href="#随机增量法" class="headerlink" title="随机增量法"></a>随机增量法</h2><p>为了保证随机情况下的均摊性质，我们首先将给出的点随机打乱。</p><p>然后基于下面的事实进行操作：</p><blockquote><p>如果点 $p$ 不在集合 $S$ 的最小覆盖圆内，则 $p$ 一定在 $S\cup\{p\}$ 的最小覆盖圆上。</p></blockquote><p>根据这个定理，我们可以分三次确定前 $i$ 个点的最小覆盖圆。</p><ul><li>1.令前 $i-1$ 个点的最小覆盖圆为 $C$</li><li>2.如果第 $i$ 个点在 $C$ 内，则前 $i$ 个点的最小覆盖圆也是 $C$</li><li>3.如果不在，那么第 $i$ 个点一定在前 $i$个点的最小覆盖圆上，接着确定前 $i-1$ 个点中还有哪两个在最小覆盖圆上。因此，设当前圆心为 $P_i$，半径为 $0$，做固定了第 $i$ 个点的前 $i$ 个点的最小圆覆盖。</li><li>4.固定了一个点：不停地在范围内找到第一个不在当前最小圆上的点 $P_j$，设当前圆心为 $(P_i+P_j)/2$，半径为 $\frac{1}{2}|P_iP_j|$，做固定了两个点的，前 $j$ 个点外加第 $i$ 个点的最小圆覆盖。</li><li>5.固定了两个点：不停地在范围内找到第一个不在当前最小圆上的点 $P_k$，设当前圆为 $P_i,P_j,P_k $ 的外接圆。</li></ul><p>核心代码非常简洁：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">mt19937 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"><span class="function">Circle <span class="title">MinCircle</span><span class="params">(<span class="built_in">vector</span>&lt;Point&gt; pt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sz = pt.size();</span><br><span class="line">    shuffle(pt.begin(), pt.end(), rng);</span><br><span class="line">    <span class="function">Circle <span class="title">cc</span><span class="params">(pt[<span class="number">0</span>], <span class="number">0.0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) <span class="keyword">if</span>(cc.out(pt[i])) &#123;</span><br><span class="line">        cc = Circle(pt[i], <span class="number">0.0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) <span class="keyword">if</span>(cc.out(pt[j])) &#123;</span><br><span class="line">            cc = Circle((pt[i] + pt[j]) / <span class="number">2.0</span>, length(pt[i]-pt[j]) / <span class="number">2.0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; ++k) &#123;</span><br><span class="line">                <span class="keyword">if</span>(cc.out(pt[k])) &#123;</span><br><span class="line">                    cc = Circle(pt[i], pt[j], pt[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种做法乍一看是 $O(n^3)$ 的，可是实际上均摊意义下他就是 $O(n)$ 的。证法我现在还不会，留坑。</p><p><strong>Code：</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// luogu-judger-enable-o2</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">102000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    Point(<span class="keyword">double</span> xp=<span class="number">0</span>, <span class="keyword">double</span> yp=<span class="number">0</span>): x(xp), y(yp) &#123; &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x+rhs.x, y+rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x*k, y*k); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x/k, y/k); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &lt; rhs.x || (x==rhs.x &amp;&amp; y&lt;rhs.y); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123;<span class="keyword">return</span> sgn(x - rhs.x) == <span class="number">0</span> &amp;&amp; sgn(y - rhs.y) == <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn</span><span class="params">(<span class="keyword">double</span> rad)</span> </span>&#123; <span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad), x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad)); &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn90</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Point(-y, x); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(Vector x, Vector y)</span> </span>&#123; <span class="keyword">return</span> x.x*y.x + x.y*y.y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">length</span><span class="params">(Vector x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(dot(x, x)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> A.x*B.y - A.y*B.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">angle</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">acos</span>(dot(A, B) / length(A) / length(B)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">LLIntPV</span><span class="params">(Point P, Vector v, Point Q, Vector w)</span> </span>&#123;</span><br><span class="line">    Vector u = P - Q;</span><br><span class="line">    assert(cross(v, w) != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">double</span> t = cross(w, u) / cross(v, w);</span><br><span class="line">    <span class="keyword">return</span> P + v * t;</span><br><span class="line">&#125; <span class="comment">// Line: Point + Vector</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Circle</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">    Point o;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    Circle(Point O, <span class="keyword">double</span> R): o(O), r(R) &#123; &#125;</span><br><span class="line">    Circle(Point A, Point B, Point C) &#123;</span><br><span class="line">        assert(sgn(cross(B-A, C-A)) != <span class="number">0</span>);</span><br><span class="line">        Point mab = (A + B) / <span class="number">2.0</span>, ab = (B - A).turn90();</span><br><span class="line">        Point mbc = (B + C) / <span class="number">2.0</span>, bc = (C - B).turn90();</span><br><span class="line">        o = LLIntPV(mab, ab, mbc, bc);</span><br><span class="line">        r = length(A - o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Point <span class="title">at</span><span class="params">(<span class="keyword">double</span> theta)</span> </span>&#123; <span class="keyword">return</span> o + Point(<span class="built_in">cos</span>(theta)*r, <span class="built_in">sin</span>(theta)*r); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">out</span><span class="params">(Point pt)</span> </span>&#123; <span class="keyword">return</span> sgn(length(o-pt) - r) == <span class="number">1</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">mt19937 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"><span class="function">Circle <span class="title">MinCircle</span><span class="params">(<span class="built_in">vector</span>&lt;Point&gt; pt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sz = pt.size();</span><br><span class="line">    shuffle(pt.begin(), pt.end(), rng);</span><br><span class="line">    <span class="function">Circle <span class="title">cc</span><span class="params">(pt[<span class="number">0</span>], <span class="number">0.0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) <span class="keyword">if</span>(cc.out(pt[i])) &#123;</span><br><span class="line">        cc = Circle(pt[i], <span class="number">0.0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) <span class="keyword">if</span>(cc.out(pt[j])) &#123;</span><br><span class="line">            cc = Circle((pt[i] + pt[j]) / <span class="number">2.0</span>, length(pt[i]-pt[j]) / <span class="number">2.0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; ++k) &#123;</span><br><span class="line">                <span class="keyword">if</span>(cc.out(pt[k])) &#123;</span><br><span class="line">                    cc = Circle(pt[i], pt[j], pt[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; p(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) p[i].scan();</span><br><span class="line">    Circle ans = MinCircle(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n%.10f %.10f\n"</span>, ans.r, ans.o.x, ans.o.y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="模拟退火法"><a href="#模拟退火法" class="headerlink" title="模拟退火法"></a>模拟退火法</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>模拟退火算法 ( Simulated annealing ) 是一种寻找函数全局最优解的一种算法，它的出发点是物理中固体物质的退火过程与一般组合优化问题之间的相似性。</p><p>寻找全局最优解是一个很麻烦的事情。有人可能说，在一个位置看到哪个方向函数上升，就走向哪个方向不就行了吗？这种方法称为爬山法，爬山法是完完全全的贪心法，每次都鼠目寸光的选择一个当前最优解，因此可能会局限于局部的最优值。如何跳出局部最优呢？</p><p>模拟退火其实也是一种贪心算法，但是它的搜索过程引入了随机因素。模拟退火算法<strong>以一定的概率</strong>来接受一个比当前解要差的解，因此<strong>有可能</strong>会跳出这个局部的最优解，达到全局的最优解。</p><p>模拟退火算法描述：</p><ul><li><p>若 $J( Y(i+1) ) \geq J( Y(i) )$  (即移动后得到更优解)，则总是接受该移动</p></li><li><p>若 $J( Y(i+1) )&lt; J( Y(i) )$  (即移动后的解比当前解要差)，则<strong>以一定的概率</strong>接受移动，而且这个概率随着时间推移逐渐降低（逐渐降低才能趋向稳定），随着能量差的增大而降低。具体来说：</p></li></ul><p>在温度为 $T$ 时，出现能量差为 $\Delta E$ 的降温的概率为 $P(\Delta E)$，表示为：<br>$$<br>P(\Delta E) = e^{\frac {\Delta E} {kT}}<br>$$<br>这里的“一定的概率”的计算参考了金属冶炼的退火过程，这也是模拟退火算法名称的由来。</p><p>关于爬山算法与模拟退火，有一个有趣的比喻：</p><ul><li><p>爬山算法：兔子朝着比现在高的地方跳去。它找到了不远处的最高山峰。但是这座山不一定是珠穆朗玛峰。这就是爬山算法，它不能保证局部最优值就是全局最优值。</p></li><li><p>模拟退火：兔子喝醉了。它随机地跳了很长时间。这期间，它可能走向高处，也可能踏入平地。但是，它渐渐清醒了并朝最高方向跳去。这就是模拟退火。</p></li></ul><p><img src="Hill_Climbing_with_Simulated_Annealing.gif" alt="模拟退火算法图解"></p><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>注意这么几件事情：</p><ul><li>模拟退火一般需要进行调参，平衡运行时间、迭代次数、精度等因素</li><li>实现模拟退火时更是要注意各种精度损失。最小圆覆盖问题中，如果不考虑精度问题，求距离时多次调用 <code>sqrt</code> 函数将会损失非常多的精度</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-12</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    Point(<span class="keyword">double</span> xp=<span class="number">0</span>, <span class="keyword">double</span> yp=<span class="number">0</span>): x(xp), y(yp) &#123; &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x+rhs.x, y+rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x*k, y*k); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x/k, y/k); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &lt; rhs.x || (x==rhs.x &amp;&amp; y&lt;rhs.y); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123;<span class="keyword">return</span> sgn(x - rhs.x) == <span class="number">0</span> &amp;&amp; sgn(y - rhs.y) == <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn</span><span class="params">(<span class="keyword">double</span> rad)</span> </span>&#123; <span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad), x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad)); &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn90</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Point(-y, x); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(Vector x, Vector y)</span> </span>&#123; <span class="keyword">return</span> x.x*y.x + x.y*y.y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">length</span><span class="params">(Vector x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(dot(x, x)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist2</span><span class="params">(Point A, Point B)</span> </span>&#123; <span class="keyword">return</span> dot(A - B, A - B); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> A.x*B.y - A.y*B.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">angle</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">acos</span>(dot(A, B) / length(A) / length(B)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Circle</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">    Point o;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    Circle(Point O, <span class="keyword">double</span> R): o(O), r(R) &#123; &#125;</span><br><span class="line">    <span class="function">Point <span class="title">at</span><span class="params">(<span class="keyword">double</span> theta)</span> </span>&#123; <span class="keyword">return</span> o + Point(<span class="built_in">cos</span>(theta)*r, <span class="built_in">sin</span>(theta)*r); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">out</span><span class="params">(Point pt)</span> </span>&#123; <span class="keyword">return</span> sgn(length(o-pt) - r) == <span class="number">1</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">mt19937 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Eval</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt;&amp; pt, Point o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : pt) res = max(res, dist2(g, o));</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">uniform_real_distribution&lt;<span class="keyword">double</span>&gt; rgen(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Rand</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> rgen(rng); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Circle <span class="title">MinCircleAnneal</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt;&amp; pt, <span class="keyword">double</span> T, <span class="keyword">double</span> dec, <span class="keyword">double</span> ed)</span> </span>&#123;</span><br><span class="line">    Point pcur(0.0, 0.0), pbest, pnew;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sz = pt.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : pt) pcur = pcur + g;</span><br><span class="line">    pbest = pcur = pcur / sz;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> vcur = Eval(pt, pcur), vnew, vbest = vcur;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(T &gt; ed) &#123;</span><br><span class="line">        pnew = pcur + Point((Rand()*<span class="number">2.0</span><span class="number">-1</span>) * T, (Rand()*<span class="number">2.0</span><span class="number">-1.0</span>) * T);</span><br><span class="line">        vnew = Eval(pt, pnew);</span><br><span class="line">        <span class="keyword">if</span>(vnew &lt;= vbest) vbest = vcur = vnew, pbest = pcur = pnew;</span><br><span class="line">        <span class="keyword">if</span>(vnew &lt;= vcur || Rand() &lt; <span class="built_in">exp</span>(-(vnew-vcur)/T))</span><br><span class="line">            vcur = vnew, pcur = pnew;</span><br><span class="line">        T *= dec;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Circle(pbest, <span class="built_in">sqrt</span>(vbest));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; p(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) p[i].scan();</span><br><span class="line">    Circle ans = MinCircleAnneal(p, <span class="number">100000.0</span>, <span class="number">0.997</span>, <span class="number">3e-11</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n%.10f %.10f\n"</span>, ans.r, ans.o.x, ans.o.y);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="Opentrains-1519-G"><a href="#Opentrains-1519-G" class="headerlink" title="Opentrains 1519 G"></a>Opentrains 1519 G</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给你了 $n$ 个定义在区间 $[0,T]$ 上的一次函数 $f_i(x) = a_ix+b_i$ ，定义两个一次函数的距离为：<br>$$<br>dist(f,g) = \left(\max_{0\leq i\leq T} (f(i)-g(i))\right)^2 + \left(\min_{0\leq i\leq T}(f(i)-g(i))\right)^2<br>$$<br>你现在要找一个一次函数 $g(x) = cx+d$ 使得下面的值最小：<br>$$<br>\max_{1\leq i\leq n} dist(f_i, g)<br>$$<br>你只需要输出最小值就可以了。</p><p>数据范围 $1\leq n \leq 200000$</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>乍一看，貌似要想一想。那个最大值与最小值一定在定义域的两个端点或者两个函数相交的地方取到。。。等等，不对啊，看清楚之后，我们会发现，那个平方是加在外面的，因此要我们求最值的函数就是 $f(x)-g(x)$ ，两个一次函数之差还是一次函数！那么最值一个在 $x=0$ 处取得，一个在 $x=T$ 处取得。</p><p>我们用 $f(0)$ 与 $f(T)$ 两个值来表征一个一次函数，可以发现，如果把 $\big(f(0),f(T)\big)$ 作为点画在二维平面上， $dist(f,g)$ 即为这两个点的欧几里得距离。把题中 $n$ 个点都画出来，我们要找一个点使得这个点到其他点的距离的最大值最小，这不就是最小圆覆盖吗！</p><h1 id="最小球覆盖"><a href="#最小球覆盖" class="headerlink" title="最小球覆盖"></a>最小球覆盖</h1><p>那么考虑三维的情况，会是什么样子的呢？2018 ACM-ICPC 南京区域赛的 D 题正是最小球覆盖的裸题。</p><p>大致有两种方法，模拟退火法和三分套三分套三分。（我很奇怪为什么没有随机增量类似的方法了，不过很可能是三维情况下四点定球不是非常好写）。</p><p>模拟退火代码：（2018南京D）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-12</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y, z;</span><br><span class="line">    Point(<span class="keyword">double</span> xp=<span class="number">0</span>, <span class="keyword">double</span> yp=<span class="number">0</span>, <span class="keyword">double</span> zp=<span class="number">0</span>): x(xp), y(yp), z(zp) &#123; &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x+rhs.x, y+rhs.y, z+rhs.z); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y, z-rhs.z); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x*k, y*k, z*k); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x/k, y/k, z/k); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &lt; rhs.x || (x==rhs.x &amp;&amp; y&lt;rhs.y) || (x==rhs.x&amp;&amp;y==rhs.y&amp;&amp;z&lt;rhs.z); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123;<span class="keyword">return</span> sgn(x - rhs.x) == <span class="number">0</span> &amp;&amp; sgn(y - rhs.y) == <span class="number">0</span> &amp;&amp; sgn(z-rhs.z)==<span class="number">0</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;x, &amp;y, &amp;z); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(Vector x, Vector y)</span> </span>&#123; <span class="keyword">return</span> x.x*y.x + x.y*y.y + x.z*y.z; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">length</span><span class="params">(Vector x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(dot(x, x)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dist2</span><span class="params">(Point A, Point B)</span> </span>&#123; <span class="keyword">return</span> dot(A - B, A - B); &#125;</span><br><span class="line"><span class="comment">// Circle</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">    Point o;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    Circle(Point O, <span class="keyword">double</span> R): o(O), r(R) &#123; &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">mt19937 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Eval</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt;&amp; pt, Point o)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : pt) res = max(res, dist2(g, o));</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">uniform_real_distribution&lt;<span class="keyword">double</span>&gt; rgen(<span class="number">0.0</span>, <span class="number">1.0</span>);</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Rand</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> rgen(rng); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Circle <span class="title">MinCircleAnneal</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;Point&gt;&amp; pt, <span class="keyword">double</span> T, <span class="keyword">double</span> dec, <span class="keyword">double</span> ed)</span> </span>&#123;</span><br><span class="line">    Point pcur, pbest, pnew;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> sz = pt.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : pt) pcur = pcur + g;</span><br><span class="line">    pbest = pcur = pcur / sz;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> vcur = Eval(pt, pcur), vnew, vbest = vcur;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(T &gt; ed) &#123;</span><br><span class="line">        pnew = pcur + Point((Rand()*<span class="number">2.0</span><span class="number">-1</span>) * T, (Rand()*<span class="number">2.0</span><span class="number">-1.0</span>) * T, (Rand()*<span class="number">2.0</span><span class="number">-1</span>) * T);</span><br><span class="line">        vnew = Eval(pt, pnew);</span><br><span class="line">        <span class="keyword">if</span>(vnew &lt;= vbest) vbest = vcur = vnew, pbest = pcur = pnew;</span><br><span class="line">        <span class="keyword">if</span>(vnew &lt;= vcur || Rand() &lt; <span class="built_in">exp</span>(-(vnew-vcur)/T))</span><br><span class="line">            vcur = vnew, pcur = pnew;</span><br><span class="line">        T *= dec;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Circle(pbest, <span class="built_in">sqrt</span>(vbest));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; p(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) p[i].scan();</span><br><span class="line">    <span class="keyword">double</span> ans = <span class="number">1e13</span>;</span><br><span class="line">    rep(i, <span class="number">40</span>) &#123;</span><br><span class="line">        Circle cir = MinCircleAnneal(p, <span class="number">100000.0</span>, <span class="number">0.999</span>, <span class="number">3e-7</span>);</span><br><span class="line">        ans = min(ans, cir.r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>, ans);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;最小圆覆盖问题&quot;&gt;&lt;a href=&quot;#最小圆覆盖问题&quot; class=&quot;headerlink&quot; title=&quot;最小圆覆盖问题&quot;&gt;&lt;/a&gt;最小圆覆盖问题&lt;/h1&gt;&lt;p&gt;给出 $N$ 个点，让你画一个最小的包含所有点的圆。输出圆心、半径。&lt;/p&gt;
&lt;p&gt;数据范围 $N\leq 10^5$&lt;/p&gt;
&lt;p&gt;模板提交链接：[&lt;a href=&quot;https://www.luogu.org/problemnew/show/P1742&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Luogu 1742&lt;/a&gt;] [&lt;a href=&quot;https://lydsy.com/JudgeOnline/problem.php?id=1337&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;BZOJ 1337&lt;/a&gt;]&lt;/p&gt;
&lt;p&gt;[TODO] 随机增量法复杂度分析&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="最小圆覆盖" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/"/>
    
      <category term="模拟退火" scheme="http://yoursite.com/tags/%E6%A8%A1%E6%8B%9F%E9%80%80%E7%81%AB/"/>
    
  </entry>
  
  <entry>
    <title>Opentrains 1519 训练报告</title>
    <link href="http://yoursite.com/2019/04/20/Opentrains-1519-%E8%AE%AD%E7%BB%83%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/04/20/Opentrains-1519-训练报告/</id>
    <published>2019-04-20T11:32:14.000Z</published>
    <updated>2019-05-06T10:09:28.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Petrozavodsk-Winter-2018-Carnegie-Mellon-U-Contest"><a href="#Petrozavodsk-Winter-2018-Carnegie-Mellon-U-Contest" class="headerlink" title="Petrozavodsk Winter-2018. Carnegie Mellon U Contest."></a>Petrozavodsk Winter-2018. Carnegie Mellon U Contest.</h1><h2 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h2><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th><th style="text-align:center">I</th><th style="text-align:center">J</th><th style="text-align:center">K</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center"></td><td style="text-align:center">0:44</td><td style="text-align:center"></td><td style="text-align:center">4:05</td><td style="text-align:center"></td><td style="text-align:center"><font color="red">(0)</font></td><td style="text-align:center"></td><td style="text-align:center"><font color="red">(1)</font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center">AC</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">$\mathcal{O}$</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center">$\mathcal{O}$</td><td style="text-align:center">AC</td><td style="text-align:center">AC</td><td style="text-align:center">AC</td><td style="text-align:center">AC</td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="red"><b>*10</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="green"><b>+5</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="red"><b>*3</b></font></td><td style="text-align:center"><font color="red"><b>*2</b></font></td><td style="text-align:center"><font color="red">*1</font></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">44</td><td style="text-align:center">126</td><td style="text-align:center">74</td><td style="text-align:center">71</td><td style="text-align:center">14</td><td style="text-align:center">109</td><td style="text-align:center">27</td><td style="text-align:center">85</td><td style="text-align:center">39</td><td style="text-align:center">67</td><td style="text-align:center">8</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">线段树</td><td style="text-align:center">签到</td><td style="text-align:center">矩阵</td><td style="text-align:center">结论</td><td style="text-align:center">点分治</td><td style="text-align:center">DS</td><td style="text-align:center">最小圆覆盖</td><td style="text-align:center">状压</td><td style="text-align:center">背包</td><td style="text-align:center">dp</td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="red"><b>4857</b></font></td><td style="text-align:center"><font color="green">1283</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">916</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="blue">3039</font></td><td style="text-align:center"><font color="green">923</font></td><td style="text-align:center"><font color="blue">2287</font></td><td style="text-align:center"><font color="blue">1233</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center">★★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p>注：$\mathcal O$ 表示口头通过。</p><p>Dodo_kindergarten 队第一次三人正式训练，这一场打的有点自闭啊 ，过了签到题就没怎么想出题目了，但实际上还有很多签到题呢。cyy 和 wzk 一共做出来四道题。这一场说明了我还有许多算法没有做到熟练运用，看来需要努力补充一些短板的。</p><ul><li>Solved during contest:  <code>2/11</code></li><li>Upsolved: <code>7/11</code></li><li>Orally upsolved <code>9/11</code></li><li>Rank <code>114/137</code></li><li>新技能-最小圆（球）覆盖 get</li></ul><p>[UPD 2019.05.03] 补掉了大傻题 J 题，直接求 Zigzag 公共子序列就 AC 了，题意没说清楚。</p><p>[TODO1] Code Problem C, F<br>[TODO2] Solve Problem E, K</p><a id="more"></a><p>一些资源：</p><p><a href="https://hdmmblz.github.io/2019/04/28/%E8%A1%A5%E9%A2%98%E3%80%81%E6%9D%82%E9%A2%98N%E5%90%881/" target="_blank" rel="noopener">CYY写的题解，解决了剩下的历史遗留问题</a></p><p><a href="http://opentrains.snarknews.info/~ejudge/team.cgi?contest_id=001519" target="_blank" rel="noopener">比赛链接</a></p><p><a href="https://www.cnblogs.com/clrs97/p/8525989.html" target="_blank" rel="noopener">Claris题解</a></p><p><a href="http://clatisus.com/Petrozavodsk%20Winter-2018.%20Carnegie%20Mellon%20U%20Contest" target="_blank" rel="noopener">BUAA题解</a></p><p><a href="https://www.cnblogs.com/zbh2047/p/9597643.html" target="_blank" rel="noopener">zbh对于I题的思考</a></p><h2 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h2><p>开局我看的是 H 题，whr 看 B，sl 看 J 题。发现 H 题数据范围不大，商量着要不写一个爆搜试一试，结果我写完之后本地测 $n=24$ 的数据，跑了五分钟都没有跑出来，弃疗了。</p><p>我和 whr 看了下 B，发现是可做题，我于是开始写，于 00:44 通过，可是榜上已经过了一大片了。</p><p>我发现 F 就是裸的二维数点问题，可是没有整理模板，就自闭了。wzk 几分钟就写完了。这个锅我背，除了线段树之外，我基本上都在做思维题之类的，都不知道多长时间没有写硬核的数据结构题了，这次比赛让我深刻认识到我的数据结构已经弱到了什么地步。</p><p>之后陷入无限期的自闭状态。sl 说了 D 题的结论，可是我不太相信。  whr 尝试写 H 题的模拟退火，可惜 WA 了。期间 cyy 他们过了 C 题，可是我没来得及仔细看。我又想写 H 题的另一种搜索，可是也没成功。这一阶段的状态特别不好，感觉什么题都做不出来。</p><p>sl 再次要求我听他讲 D 题的结论。我听完之后大致口胡出了一种证明，感觉挺对的。于是开始写，可是有点难写。纠结了好一会实现方式，终于我会了一种比较简单的写法。开工！03：34的时候我们交了第一发，结果 WA on test 160 ，心态炸了。自闭了好一会，发现有个细节的写法略有问题，稍微修改了一下，终于在04：05的时候获得了OK。</p><p>看了一会儿新题，感觉也没有别的心思来想题了，于是就跑路了。最后就只有两题滚粗了 QAQ。</p><h2 id="Prob-B-签到，set"><a href="#Prob-B-签到，set" class="headerlink" title="Prob B. 签到，set"></a>Prob B. 签到，set</h2><h3 id="题意"><a href="#题意" class="headerlink" title="题意"></a>题意</h3><p>一条直线上放了 $n$ 个球，每个球的坐标已知，最右边位置 $W$ 处是一堵坚实的墙壁。要求支持下面两种操作：</p><ul><li>在 $p$ 位置放入新球，如果这个位置有球则忽略。</li><li>将最左边的球向右打。一个球如果碰到 $x$ 位置的另一个球，则它会在 $x-1$ 的位置停下，然后使 $x$ 位置的求开始向右运动，从而引发连锁反应。一个球撞击到墙则立即停止在 $W-1$ 处。</li></ul><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><p>不妨设最左边球的位置是 $l$ ，稍加模拟即可知道操作本质是将区间 $[l,W]$ 向左循环移位了一个单位。模拟这个过程，只需要考虑将最左边的球加到墙的右边即可。如果要支持放入新球，只需要用一个 <code>set</code> 维护就可以了。</p><p>复杂度 $O((n+q)\log n)$</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">202000</span>;</span><br><span class="line"><span class="keyword">int</span> n, q, w, op, xp, tl;</span><br><span class="line"><span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; st;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n, q, w);</span><br><span class="line">    rep(i, n) read(xp), st.insert(xp);</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        read(op);</span><br><span class="line">        <span class="keyword">if</span>(op == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> pos, d;</span><br><span class="line">            read(pos);</span><br><span class="line">            d = pos + tl;</span><br><span class="line">            <span class="keyword">if</span>(st.count(d) == <span class="number">0</span>)</span><br><span class="line">                st.insert(d);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">auto</span> ed = *st.begin();</span><br><span class="line">            st.erase(ed);</span><br><span class="line">            st.insert(w + tl);</span><br><span class="line">            tl++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> first = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : st) &#123;</span><br><span class="line">        <span class="keyword">if</span>(first) first = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, g - tl);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-D-结论，数学，模拟"><a href="#Prob-D-结论，数学，模拟" class="headerlink" title="Prob D. 结论，数学，模拟"></a>Prob D. 结论，数学，模拟</h2><h3 id="题意-1"><a href="#题意-1" class="headerlink" title="题意"></a>题意</h3><p>你有一个超八边形图，每个顶点度数都是 3 ，每条边都同时属于两个八边形环，如下图所示。</p><p>这个图中，每条边都有标号，是 $\{a,b,c\}$ 中的一种。标号满足下面的性质：</p><ul><li>每个节点连出去的三条边的标号互不相同</li><li>每个八边形环上的标号序列恰好是交错的，即是与 $abababab$ 类似的</li></ul><p>现在给出了一个标号序列，问在八边形图中能否找到一个对应的路径，使这个序列对应的边连成一个回路。</p><p><img src="Graph.png" alt="超八边形图"></p><h3 id="题解-1"><a href="#题解-1" class="headerlink" title="题解"></a>题解</h3><p><b>结论</b></p><p>我们断言，对于序列中我们尽量消除下面两种子串，那么有回路就等价于最后序列被删空了。</p><ul><li>直接删除两个相同标号的重复出现的子串，如 $aa$</li><li>将五元交错子串掐头去尾，如将 $ababa$ 变为 $bab$ </li></ul><p><b>证明：</b></p><p>最开始，根据对称性，起点的选择显然是无关紧要的。</p><p>首先直观理解一下，第一种子串相当于走一个来回，第二种子串相当于将走得远的路径变成走得近的。事实上第二个操作也可以转化六元环与七元环，直接删除八元环。</p><p>然后考虑反证法，如果这两种情况都没出现，这个序列还是一个回路，那么这就说明这个回路走过的每一个环长度都不超过 $4$ ，但是这么走是不可能走回起点的。</p><p><b>实现</b></p><p>上述的做法实现起来还是略有难度，关键点是不重不漏，还要保证复杂度不爆炸。细节见代码吧，这份代码还算是写得非常简洁的。</p><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">902000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn], t[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">    n = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(m &gt; <span class="number">0</span> &amp;&amp; t[m<span class="number">-1</span>] == s[i]) m--;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            t[m++] = s[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(m &gt;= <span class="number">5</span> &amp;&amp; t[m<span class="number">-1</span>]==t[m<span class="number">-3</span>] &amp;&amp; t[m<span class="number">-3</span>]==t[m<span class="number">-5</span>] &amp;&amp; t[m<span class="number">-2</span>]==t[m<span class="number">-4</span>] &amp;&amp; t[m<span class="number">-1</span>] != t[m<span class="number">-2</span>]) &#123;</span><br><span class="line">            <span class="keyword">char</span> t2 = t[m<span class="number">-2</span>], t3 = t[m<span class="number">-3</span>], t4 = t[m<span class="number">-4</span>];</span><br><span class="line">            m -= <span class="number">5</span>;</span><br><span class="line">            i -= <span class="number">2</span>;</span><br><span class="line">            s[i] = t4;</span><br><span class="line">            s[i+<span class="number">1</span>] = t3;</span><br><span class="line">            s[i+<span class="number">2</span>] = t2;</span><br><span class="line">            i--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(m &gt; <span class="number">1</span> &amp;&amp; t[m<span class="number">-1</span>] == t[m<span class="number">-2</span>]) m -= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(m) <span class="built_in">puts</span>(<span class="string">"open"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"closed"</span>);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="赛后补题"><a href="#赛后补题" class="headerlink" title="赛后补题"></a>赛后补题</h1><h2 id="Prob-H-状压-dp"><a href="#Prob-H-状压-dp" class="headerlink" title="Prob H. 状压 dp"></a>Prob H. 状压 dp</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>你有 $n$ 个体积分别是 $w_i$ 的物品，现在要把它们装进最多装体积为 $S$ 的背包里，问至少需要几个背包才能把所有物品都装下。数据范围 $n\leq 24,w_i\leq 10^9$</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>一种显然的想法是爆搜，或者模拟退火之类的玄学解法，可是貌似都不奏效。。。</p><p>一种比较好的方法是状压 dp 。为了避免后效性，我们给出一种比较强的定义状态的方式，我们采用将背包一个一个填满的方式，而不是几个背包同步填。</p><blockquote><p>定义 $dp[S]$ 表示按照一定顺序删除 $S$ 中元素之后，至少使用的背包数量 $c$，与最后一个背包的剩余体积 $v$ 组成的二元组 $(c,v)$。</p></blockquote><p>这样的话，dp就是可以合并的了，直接按照 $c$ 是第一关键字， $v$ 是第二关键字进行合并即可。转移是显然的。</p><p>复杂度 $O(n\cdot 2^n)$</p><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>这道题的一大启示就是，在保证等价的前提下，定义状态的时候可以附加一定条件，使得 dp 转移更加方便高效。</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 0, i##_end_ = (n); i &lt; i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">25</span>, maxs = (<span class="number">1</span> &lt;&lt; <span class="number">24</span>) + <span class="number">30</span>;</span><br><span class="line">pii dp[maxs];</span><br><span class="line"><span class="keyword">int</span> n, a[maxn], s, full;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">up</span><span class="params">(pii &amp;p, pii x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.first &lt; p.first) p = x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(x.first == p.first &amp;&amp; x.second &gt; p.second) p = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;s);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line"></span><br><span class="line">    full = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    dp[<span class="number">0</span>] = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; ++j) <span class="keyword">if</span>(~S &gt;&gt; j &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> lft = dp[S].second - a[j];</span><br><span class="line">            pii upd;</span><br><span class="line">            <span class="keyword">if</span>(lft &gt;= <span class="number">0</span>) upd = &#123;dp[S].first, lft&#125;;</span><br><span class="line">            <span class="keyword">else</span> upd = &#123;dp[S].first + <span class="number">1</span>, s - a[j]&#125;;</span><br><span class="line">            up(dp[S | (<span class="number">1</span>&lt;&lt;j)], upd);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, dp[full].first);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-G-最小圆覆盖"><a href="#Prob-G-最小圆覆盖" class="headerlink" title="Prob G. 最小圆覆盖"></a>Prob G. 最小圆覆盖</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>给你了 $n$ 个定义在区间 $[0,T]$ 上的一次函数 $f_i(x) = a_ix+b_i$ ，定义两个一次函数的距离为：<br>$$<br>dist(f,g) = \left(\max_{0\leq i\leq T} (f(i)-g(i))\right)^2 + \left(\min_{0\leq i\leq T}(f(i)-g(i))\right)^2<br>$$<br>你现在要找一个一次函数 $g(x) = cx+d$ 使得下面的值最小：<br>$$<br>\max_{1\leq i\leq n} dist(f_i, g)<br>$$<br>你只需要输出最小值就可以了。</p><p>数据范围 $1\leq n \leq 200000$</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>乍一看，貌似要想一想。那个最大值与最小值一定在定义域的两个端点或者两个函数相交的地方取到。。。等等，不对啊，看清楚之后，我们会发现，那个平方是加在外面的，因此要我们求最值的函数就是 $f(x)-g(x)$ ，两个一次函数之差还是一次函数！那么最值一个在 $x=0$ 处取得，一个在 $x=T$ 处取得。</p><p>我们用 $f(0)$ 与 $f(T)$ 两个值来表征一个一次函数，可以发现，如果把 $\big(f(0),f(T)\big)$ 作为点画在二维平面上， $dist(f,g)$ 即为这两个点的欧几里得距离。把题中 $n$ 个点都画出来，那么所要求的就是最小圆覆盖！</p><p>不过最小圆覆盖怎么求呢？随机增量法或者模拟退火法都可以实现，这里就用的是随机增量法。有关最小圆覆盖，我单独写了一篇博客，<a href="http://yang2002.github.io/2019/04/21/%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">看这里</a></p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">102000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-7</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    Point(<span class="keyword">double</span> xp=<span class="number">0</span>, <span class="keyword">double</span> yp=<span class="number">0</span>): x(xp), y(yp) &#123; &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x+rhs.x, y+rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x*k, y*k); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x/k, y/k); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &lt; rhs.x || (x==rhs.x &amp;&amp; y&lt;rhs.y); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123;<span class="keyword">return</span> sgn(x - rhs.x) == <span class="number">0</span> &amp;&amp; sgn(y - rhs.y) == <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn</span><span class="params">(<span class="keyword">double</span> rad)</span> </span>&#123; <span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad), x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad)); &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn90</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> Point(-y, x); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(Vector x, Vector y)</span> </span>&#123; <span class="keyword">return</span> x.x*y.x + x.y*y.y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">length</span><span class="params">(Vector x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(dot(x, x)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> A.x*B.y - A.y*B.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">angle</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">acos</span>(dot(A, B) / length(A) / length(B)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">LLIntPV</span><span class="params">(Point P, Vector v, Point Q, Vector w)</span> </span>&#123;</span><br><span class="line">    Vector u = P - Q;</span><br><span class="line">    assert(cross(v, w) != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">double</span> t = cross(w, u) / cross(v, w);</span><br><span class="line">    <span class="keyword">return</span> P + v * t;</span><br><span class="line">&#125; <span class="comment">// Line: Point + Vector</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Circle</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Circle</span> &#123;</span></span><br><span class="line">    Point o;</span><br><span class="line">    <span class="keyword">double</span> r;</span><br><span class="line">    Circle(Point O, <span class="keyword">double</span> R): o(O), r(R) &#123; &#125;</span><br><span class="line">    Circle(Point A, Point B, Point C) &#123;</span><br><span class="line">        assert(sgn(cross(B-A, C-A)) != <span class="number">0</span>);</span><br><span class="line">        Point mab = (A + B) / <span class="number">2.0</span>, ab = (B - A).turn90();</span><br><span class="line">        Point mbc = (B + C) / <span class="number">2.0</span>, bc = (C - B).turn90();</span><br><span class="line">        o = LLIntPV(mab, ab, mbc, bc);</span><br><span class="line">        r = length(A - o);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function">Point <span class="title">at</span><span class="params">(<span class="keyword">double</span> theta)</span> </span>&#123; <span class="keyword">return</span> o + Point(<span class="built_in">cos</span>(theta)*r, <span class="built_in">sin</span>(theta)*r); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">out</span><span class="params">(Point pt)</span> </span>&#123; <span class="keyword">return</span> sgn(length(o-pt) - r) == <span class="number">1</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">mt19937 <span class="title">rng</span><span class="params">(chrono::steady_clock::now().time_since_epoch().count())</span></span>;</span><br><span class="line"><span class="function">Circle <span class="title">MinCircle</span><span class="params">(<span class="built_in">vector</span>&lt;Point&gt; pt)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sz = pt.size();</span><br><span class="line">    shuffle(pt.begin(), pt.end(), rng);</span><br><span class="line">    <span class="function">Circle <span class="title">cc</span><span class="params">(pt[<span class="number">0</span>], <span class="number">0.0</span>)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) <span class="keyword">if</span>(cc.out(pt[i])) &#123;</span><br><span class="line">        cc = Circle(pt[i], <span class="number">0.0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) <span class="keyword">if</span>(cc.out(pt[j])) &#123;</span><br><span class="line">            cc = Circle((pt[i] + pt[j]) / <span class="number">2.0</span>, length(pt[i]-pt[j]) / <span class="number">2.0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; ++k) &#123;</span><br><span class="line">                <span class="keyword">if</span>(cc.out(pt[k])) &#123;</span><br><span class="line">                    cc = Circle(pt[i], pt[j], pt[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, T, aa, bb;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;T, &amp;n);</span><br><span class="line">    <span class="built_in">vector</span>&lt;Point&gt; p(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;aa, &amp;bb);</span><br><span class="line">        p[i] = Point(bb, T * aa + bb);</span><br><span class="line">    &#125;</span><br><span class="line">    Circle ans = MinCircle(p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f\n"</span>, ans.r * ans.r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-A-线段树优化建图-Tarjan-SCC"><a href="#Prob-A-线段树优化建图-Tarjan-SCC" class="headerlink" title="Prob A. 线段树优化建图+Tarjan SCC"></a>Prob A. 线段树优化建图+Tarjan SCC</h2><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>我们将连边 $a\to b$ 如果炸弹 $a$ 爆炸时能够引爆炸弹 $b$ 。每个炸弹影响的区域都是一个连续的区间，可以通过线段树优化建图将有向图建出来。然后缩点，把得到的 DAG 中入度为 0 的 SCC 最小权值加进答案即可。</p><p>怎么支持修改？实际上修改只修改权值，是不改变建出来的图的，只需要每一个SCC都用一个 <code>multiset</code> 维护SCC中的权值即可实现。</p><h3 id="Comment-1"><a href="#Comment-1" class="headerlink" title="Comment"></a>Comment</h3><p>对于这道题，真的不知道该说什么才好。。。基本上是一眼题，但是写起来是真心毒瘤。代码长度4857Byte，花了将近两个小时才写完，然后用了一个小时调试错误，最后才发现就是某一个数组开小了。</p><p>警示：</p><ul><li>遇到RE，永远要首先检查数组大小是否都开足够。不管自己多么自信不会数组开销也要检查！！！</li><li>Windows下本机测试手动扩栈的方法：编译选项 <code>-Wl,--stack,268435456</code></li></ul><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><div><div class="fold_hider"><div class="close hider_title">点击显示/隐藏代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by powerful Codeforces Tool</span></span><br><span class="line"><span class="comment"> * Author: YangDavid</span></span><br><span class="line"><span class="comment"> * Time: 2019-04-22 16:04:47</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">202000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> Graph = <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sccno, dfn, low;</span><br><span class="line"><span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; S;</span><br><span class="line">Graph G(maxn * 4), nG;</span><br><span class="line"></span><br><span class="line"><span class="comment">// === template part ===</span></span><br><span class="line"><span class="keyword">namespace</span> Tarjan &#123;</span><br><span class="line">    <span class="comment">// input Graph G and vertex number vc, (index starts with 1)</span></span><br><span class="line">    <span class="comment">// then call find_scc(). nG is the new graph, sc is number of vertices in nG</span></span><br><span class="line">    <span class="comment">// (index starts with 1)</span></span><br><span class="line">    <span class="keyword">int</span> vc, sc, dfs_clock;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">        S.push(v);</span><br><span class="line">        low[v] = dfn[v] = ++dfs_clock;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> u : G[v]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!dfn[u]) &#123;</span><br><span class="line">                Tarjan(u);</span><br><span class="line">                low[v] = min(low[v], low[u]);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!sccno[u]) </span><br><span class="line">                low[v] = min(low[v], dfn[u]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(low[v] == dfn[v]) &#123;</span><br><span class="line">            sc++;</span><br><span class="line">            <span class="keyword">for</span>(;;) &#123;</span><br><span class="line">                <span class="keyword">int</span> p = S.top(); S.pop();</span><br><span class="line">                sccno[p] = sc;</span><br><span class="line">                <span class="keyword">if</span>(p == v) <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">find_scc</span><span class="params">(<span class="keyword">int</span> sz = G.size() - <span class="number">1</span>)</span> </span>&#123; </span><br><span class="line">        <span class="comment">// returns &#123;new Graph, sccno&#125;</span></span><br><span class="line">        sc = dfs_clock = <span class="number">0</span>;</span><br><span class="line">        vc = sz;</span><br><span class="line"></span><br><span class="line">        sccno = dfn = low = <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;(vc + <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= vc; ++i) <span class="keyword">if</span>(!dfn[i])</span><br><span class="line">            Tarjan(i);</span><br><span class="line">        nG.resize(sc + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> u = <span class="number">1</span>; u &lt;= vc; ++u) <span class="keyword">for</span>(<span class="keyword">auto</span> v : G[u]) </span><br><span class="line">            <span class="keyword">if</span>(sccno[u] != sccno[v]) </span><br><span class="line">                nG[sccno[u]].push_back(sccno[v]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// === end of template ===</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mine</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> p, r, c, id;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> mine&amp; me) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> p &lt; me.p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; a[maxn], as[maxn];</span><br><span class="line"><span class="keyword">int</span> n, q, rk[maxn];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">multiset</span>&lt;pii&gt; asc;</span><br><span class="line"><span class="built_in">multiset</span>&lt; pii, greater&lt;pii&gt; &gt; des;</span><br><span class="line"><span class="built_in">multiset</span>&lt;<span class="keyword">int</span>&gt; w[maxn * <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> vc;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">link</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> ql, <span class="keyword">int</span> qr, <span class="keyword">int</span> o = <span class="number">1</span>, <span class="keyword">int</span> l = <span class="number">1</span>, <span class="keyword">int</span> r = vc)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= l &amp;&amp; r &lt;= qr) &#123;</span><br><span class="line">        G[p].push_back(o);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ql &lt;= mid) link(p, ql, qr, o &lt;&lt; <span class="number">1</span>, l, mid);</span><br><span class="line">    <span class="keyword">if</span>(qr &gt; mid) link(p, ql, qr, o &lt;&lt; <span class="number">1</span> | <span class="number">1</span>, mid + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> FREOPEN</span></span><br><span class="line">        freopen(<span class="string">"in1.txt"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    read(n, q);</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        read(a[i].p, a[i].r, a[i].c);</span><br><span class="line">        a[i].id = i;</span><br><span class="line">        as[i] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(as + <span class="number">1</span>, as + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        asc.emplace(as[i].p, i);</span><br><span class="line">        des.emplace(as[i].p, i);</span><br><span class="line">    &#125;</span><br><span class="line">    vc = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(vc &lt; n) vc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; vc; ++i) &#123;</span><br><span class="line">        G[i].push_back(i &lt;&lt; <span class="number">1</span>);</span><br><span class="line">        G[i].push_back(i &lt;&lt; <span class="number">1</span> | <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// as[i] &lt;-&gt; G[i+vc-1]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> lp = as[i].p - as[i].r - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> rp = as[i].p + as[i].r + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> l = asc.upper_bound(&#123;lp, INF&#125;) -&gt; second;</span><br><span class="line">        <span class="keyword">int</span> r = des.upper_bound(&#123;rp, <span class="number">0</span>&#125;) -&gt; second;</span><br><span class="line">        link(vc - <span class="number">1</span> + i, l, r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Tarjan::find_scc(vc *  <span class="number">2</span>- <span class="number">1</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> vnc = Tarjan::sc;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; indeg(vnc + <span class="number">10</span>), mark(vnc + <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">auto</span> BFS = [&amp;]() &#123;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="keyword">int</span>&gt; leftscc;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = vc; i &lt; <span class="number">2</span> * vc; ++i)</span><br><span class="line">            leftscc.insert(sccno[i]);</span><br><span class="line">        <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; qq;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> g : leftscc) qq.push(g);</span><br><span class="line">        <span class="keyword">while</span>(!qq.empty()) &#123;</span><br><span class="line">            <span class="keyword">int</span> tp = qq.front(); qq.pop();</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">auto</span> g : nG[tp]) <span class="keyword">if</span>(!indeg[g]) &#123;</span><br><span class="line">                indeg[g] = <span class="literal">true</span>;</span><br><span class="line">                qq.push(g);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= vnc; ++i) &#123;</span><br><span class="line">            mark[i] = <span class="number">1</span> - indeg[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    BFS();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="keyword">if</span>(mark[sccno[vc<span class="number">-1</span>+i]])</span><br><span class="line">        w[sccno[vc<span class="number">-1</span>+i]].insert(as[i].c);</span><br><span class="line"></span><br><span class="line">    ll ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= vnc; ++i) <span class="keyword">if</span>(mark[i])</span><br><span class="line">        ans += *w[i].begin();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">        rk[as[i].id] = i;</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        <span class="keyword">int</span> m, nc;</span><br><span class="line">        read(m, nc);</span><br><span class="line">        <span class="keyword">int</span> wno = sccno[rk[m] + vc - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(mark[wno]) &#123;</span><br><span class="line">            ans -= *w[wno].begin();</span><br><span class="line">            w[wno].erase(w[wno].find(a[m].c));</span><br><span class="line">            w[wno].insert(nc);</span><br><span class="line">            ans += *w[wno].begin();</span><br><span class="line">        &#125;</span><br><span class="line">        a[m].c = nc;</span><br><span class="line">        write(ans);</span><br><span class="line">        <span class="comment">// printf(" q = %d", q);</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><p>以下部分纯属口胡~不过基本都是靠谱的。</p><h2 id="Prob-I-背包神题"><a href="#Prob-I-背包神题" class="headerlink" title="Prob. I 背包神题"></a>Prob. I 背包神题</h2><h3 id="Description-2"><a href="#Description-2" class="headerlink" title="Description"></a>Description</h3><p>给出 $n≤5000$ 个物品，第 $i$ 个物品的体积为 $v_i$ ，求所有体积和<strong>恰</strong>为 $1\leq V\leq5000$ 且物品数量<strong>最小</strong>的集合中，最小的平均体积，最小的中位数（偶数的中位数是中间靠左的一个），最小的众数个数，最小的极差</p><h3 id="Solution-3"><a href="#Solution-3" class="headerlink" title="Solution"></a>Solution</h3><blockquote><p>Editorial by HDMMBLZ</p></blockquote><p>下面我们一个一个说：</p><p>首先我们得做一遍普通背包得知体积恰为 $V$ 最少多少个物品，设为 $m$ 个</p><ul><li><p>平均值：直接算，$O(1)$</p></li><li><p>中位数：</p></li></ul><p>算法一：做前缀背包和后缀背包并枚举中位数，检查是否合法时枚举集合种比中位数小的背包体积和，复杂度$O(nV)$,常数为 $3$</p><p>算法二：二分中位数，把每个物品价值变成 $inf+(−1)[vi&lt;mid]$，做体积固定价值最小的背包，若结果大于m⋅midm·mid则当前中位数过小，否则过大。此方法虽然多一个 $log$，但巧妙地通过 $\inf $ 把物品数量最小的限制转化掉了，感觉挺有启发</p><ul><li>众数：</li></ul><p>算法一：二分答案然后做背包，复杂度 $O(nVlogn)$</p><p>算法二：从小到达枚举众数，每次把可以增加的物品加入背包，复杂度 $O(nV)$</p><ul><li>极差：</li></ul><p>极差是这道题目的精华，两个算法都很有启发性</p><p>算法一：将物品按照vivi排序后，考虑滑动窗口，滑动窗口里是要满足<strong>存在一个大小为 $m$ 的子集使得体积和为 $V$ </strong>,我们现在这样支持添加物品和删除物品：维护两个栈，栈的每个元素都是一个长度为VV的代表背包的数组，共需要V2V2空间，当我们加入一个物品时，直接加在AA栈栈顶，用原来AA栈栈顶的背包更新构成新栈顶，如果我们要删除一个物品（这个物品是当前区间的第一位），这时如果栈BB不为空，说明要删除的东西是栈BB栈顶，那么直接将栈BB的栈顶弹出即可，如果栈BB是空的，说明要删除的物品是栈底，这时，我们将AA除了栈底以外的元素一个个弹出，并按照弹出的顺序一个个加入栈BB并做背包即可。</p><p>我们发现，栈 $A$ 从顶到底元素的 $v_i$ 减小，栈 $B$ 从底到顶元素的 $v_i$ 减小</p><p>要查询整个背包某一项，直接合并A、BA、B栈顶所代表的背包即可，合并一次复杂度 $O(V)$</p><p>势能分析可得这样做维护两个栈背包的时间是 $O(nV)$</p><p>以上方法可以处理所有滑动窗口背包、$n$次查询背包某一个值的问题</p><p>算法二：按照vivi从小到大加入背包，把物品价值设为inf−viinf−vi(更新dp[vi]dp[vi]时)，infinf（其他时候），枚举最大值直接查询即可，不得不说这个方法也很棒。</p><p>总复杂度 $O(nV)$</p><h3 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h3><p>这里的实现很多都偷懒了，用的是带 log 的做法。</p><div><div class="fold_hider"><div class="close hider_title">Code</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by powerful Codeforces Tool</span></span><br><span class="line"><span class="comment"> * Author: YangDavid</span></span><br><span class="line"><span class="comment"> * Time: 2019-04-23 09:30:51</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5500</span>, INF = <span class="number">10008</span>;</span><br><span class="line"><span class="keyword">int</span> dp[maxn], n, xp, s, gg;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">knapsack</span><span class="params">(<span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; V, <span class="keyword">const</span> <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; W, <span class="keyword">int</span> ss)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sz = V.size();</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = ss; j &gt;= V[i]; --j) </span><br><span class="line">            dp[j] = min(dp[j], dp[j - V[i]] + W[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[ss];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; ve, w, v;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMost</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cur = <span class="number">-1</span>, tim = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; W, V;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : ve) &#123;</span><br><span class="line">        <span class="keyword">if</span>(g == cur) &#123;</span><br><span class="line">            <span class="keyword">if</span>(++tim &gt; x) <span class="keyword">continue</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur = g;</span><br><span class="line">            tim = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        W.push_back(<span class="number">1</span>);</span><br><span class="line">        V.push_back(g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> knapsack(V, W, s) == gg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckMedian</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; W;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : ve) &#123;</span><br><span class="line">        <span class="keyword">if</span>(g &lt;= ve[x]) W.push_back(INF - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> W.push_back(INF + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> knapsack(ve, W, s) &lt;= gg * INF;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Dif</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = s; j &gt; v[i]; --j)</span><br><span class="line">            dp[j] = min(dp[j], dp[j - v[i]] + INF);</span><br><span class="line">        dp[v[i]] = min(INF - v[i], dp[v[i]]);</span><br><span class="line">        ans = min(ans, dp[s] + v[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % INF;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;xp);</span><br><span class="line">        ve.push_back(xp);</span><br><span class="line">        w.push_back(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(ve.begin(), ve.end());</span><br><span class="line">    v = ve;</span><br><span class="line">    gg = knapsack(ve, w, s);</span><br><span class="line">    <span class="keyword">if</span>(gg &gt; n) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.10f "</span>, (<span class="keyword">double</span>)s / (<span class="keyword">double</span>)gg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, r = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(CheckMedian(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, ve[l]);</span><br><span class="line"></span><br><span class="line">    l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(CheckMost(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d "</span>, l);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, Dif());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><h2 id="Prob-C-AC自动机-高斯消元-or-矩阵快速幂"><a href="#Prob-C-AC自动机-高斯消元-or-矩阵快速幂" class="headerlink" title="Prob. C AC自动机+高斯消元 or 矩阵快速幂"></a>Prob. C AC自动机+高斯消元 or 矩阵快速幂</h2><p>将这两个串的 AC 自动机建出来，然后问题就变为类似在这个有向图上（带 fail 链接）随机游走的问题。</p><h2 id="Prob-E-点分治"><a href="#Prob-E-点分治" class="headerlink" title="Prob E. 点分治"></a>Prob E. 点分治</h2><p>不会。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Petrozavodsk-Winter-2018-Carnegie-Mellon-U-Contest&quot;&gt;&lt;a href=&quot;#Petrozavodsk-Winter-2018-Carnegie-Mellon-U-Contest&quot; class=&quot;headerlink&quot; title=&quot;Petrozavodsk Winter-2018. Carnegie Mellon U Contest.&quot;&gt;&lt;/a&gt;Petrozavodsk Winter-2018. Carnegie Mellon U Contest.&lt;/h1&gt;&lt;h2 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;I&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;J&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;K&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0:44&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4:05&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(0)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(1)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal{O}$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;$\mathcal{O}$&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*10&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+5&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*3&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*2&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;*1&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;44&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;126&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;74&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;71&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;109&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;27&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;85&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;39&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;67&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;线段树&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;签到&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;矩阵&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;结论&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;点分治&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DS&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;最小圆覆盖&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;状压&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;背包&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;dp&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;4857&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;1283&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;916&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;3039&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;923&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;2287&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;1233&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;注：$\mathcal O$ 表示口头通过。&lt;/p&gt;
&lt;p&gt;Dodo_kindergarten 队第一次三人正式训练，这一场打的有点自闭啊 ，过了签到题就没怎么想出题目了，但实际上还有很多签到题呢。cyy 和 wzk 一共做出来四道题。这一场说明了我还有许多算法没有做到熟练运用，看来需要努力补充一些短板的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Solved during contest:  &lt;code&gt;2/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Upsolved: &lt;code&gt;7/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Orally upsolved &lt;code&gt;9/11&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Rank &lt;code&gt;114/137&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新技能-最小圆（球）覆盖 get&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[UPD 2019.05.03] 补掉了大傻题 J 题，直接求 Zigzag 公共子序列就 AC 了，题意没说清楚。&lt;/p&gt;
&lt;p&gt;[TODO1] Code Problem C, F&lt;br&gt;[TODO2] Solve Problem E, K&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="状压dp" scheme="http://yoursite.com/tags/%E7%8A%B6%E5%8E%8Bdp/"/>
    
      <category term="Opentrains" scheme="http://yoursite.com/tags/Opentrains/"/>
    
      <category term="结论" scheme="http://yoursite.com/tags/%E7%BB%93%E8%AE%BA/"/>
    
      <category term="最小圆覆盖" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E5%9C%86%E8%A6%86%E7%9B%96/"/>
    
      <category term="背包" scheme="http://yoursite.com/tags/%E8%83%8C%E5%8C%85/"/>
    
      <category term="线段树优化建图" scheme="http://yoursite.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91%E4%BC%98%E5%8C%96%E5%BB%BA%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>计算几何知识小结</title>
    <link href="http://yoursite.com/2019/04/18/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95%E7%9F%A5%E8%AF%86%E5%B0%8F%E7%BB%93/"/>
    <id>http://yoursite.com/2019/04/18/计算几何知识小结/</id>
    <published>2019-04-18T12:36:46.000Z</published>
    <updated>2019-04-20T17:45:44.301Z</updated>
    
    <content type="html"><![CDATA[<p>还没有完成，先把目前的板子贴上来吧：</p><a id="more"></a><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> eps = <span class="number">1e-10</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sgn</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fabs</span>(x) &lt; eps) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> x &lt; <span class="number">0</span> ? <span class="number">-1</span> : <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span> &#123;</span></span><br><span class="line">    <span class="keyword">double</span> x, y;</span><br><span class="line">    Point(<span class="keyword">double</span> xp=<span class="number">0</span>, <span class="keyword">double</span> yp=<span class="number">0</span>): x(xp), y(yp) &#123; &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> + (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x+rhs.x, y+rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> - (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x-rhs.x, y-rhs.y); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> * (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x*k, y*k); &#125;</span><br><span class="line">    Point <span class="keyword">operator</span> / (<span class="keyword">const</span> <span class="keyword">double</span>&amp; k) <span class="keyword">const</span> &#123; <span class="keyword">return</span> Point(x/k, y/k); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123; <span class="keyword">return</span> x &lt; rhs.x || (x==rhs.x &amp;&amp; y&lt;rhs.y); &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> Point&amp; rhs) <span class="keyword">const</span> &#123;<span class="keyword">return</span> sgn(x - rhs.x) == <span class="number">0</span> &amp;&amp; sgn(y - rhs.y) == <span class="number">0</span>; &#125;</span><br><span class="line">    <span class="function">Point <span class="title">turn</span><span class="params">(<span class="keyword">double</span> rad)</span> </span>&#123; <span class="keyword">return</span> Point(x*<span class="built_in">cos</span>(rad)-y*<span class="built_in">sin</span>(rad), x*<span class="built_in">sin</span>(rad)+y*<span class="built_in">cos</span>(rad)); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>, &amp;x, &amp;y); &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">typedef</span> Point Vector;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(Vector x, Vector y)</span> </span>&#123; <span class="keyword">return</span> x.x*y.x + x.y*y.y; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">length</span><span class="params">(Vector x)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">sqrt</span>(dot(x, x)); &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">cross</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> A.x*B.y - A.y*B.x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">angle</span><span class="params">(Vector A, Vector B)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">acos</span>(dot(A, B) / length(A) / length(B)); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">LineProjection</span><span class="params">(Point P, Point A, Point B)</span> </span>&#123;</span><br><span class="line">    Vector v = B - A;</span><br><span class="line">    <span class="keyword">return</span> A + v * (dot(P-A, v) / dot(v, v));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Point <span class="title">LineReflection</span><span class="params">(Point P, Point A, Point B)</span> </span>&#123;</span><br><span class="line">    Point proj = LineProjection(P, A, B);</span><br><span class="line">    <span class="keyword">return</span> proj + proj - P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Clockwise</span><span class="params">(Point O, Point A, Point B)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* Clockwise: -1</span></span><br><span class="line"><span class="comment">       Counterclockwise: 1</span></span><br><span class="line"><span class="comment">       Otherwise: 0</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">return</span> sgn(cross(A - O, B - O));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SegCheck</span><span class="params">(Point a, Point b, Point p)</span> </span>&#123;</span><br><span class="line">    Vector d = b - a, e = p - a;</span><br><span class="line">    <span class="keyword">if</span>(sgn(dot(d, e)) == <span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">"ONLINE_BACK"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(sgn(length(e) - length(d)) == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"ONLINE_FRONT"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">"ON_SEGMENT"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">JudgeLLParOrth</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 2: parallel</span></span><br><span class="line"><span class="comment">       1: orthogonal</span></span><br><span class="line"><span class="comment">       0: otherwise</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    Vector v = a2 - a1, w = b2 - b1;</span><br><span class="line">    <span class="keyword">if</span>(sgn(cross(v, w)) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(sgn(dot(v, w)) == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckSSProperIntersection</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> c1 = cross(a1 - b1, b2 - b1), c2 = cross(a2 - b1, b2 - b1);</span><br><span class="line">    <span class="keyword">double</span> c3 = cross(b1 - a1, a2 - a1), c4 = cross(b2 - a1, a2 - a1);</span><br><span class="line">    <span class="keyword">return</span> sgn(c1) * sgn(c2) == <span class="number">-1</span> &amp;&amp; sgn(c3) * sgn(c4) == <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">OnSeg</span><span class="params">(Point P, Point A, Point B)</span> </span>&#123; <span class="comment">// (A, B)</span></span><br><span class="line">    Vector v = B - P, w = A - P;</span><br><span class="line">    <span class="keyword">if</span>(sgn(cross(v, w)) != <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> sgn(dot(v, w)) == <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">CheckSSIntersection</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a1 == b1 || a1 == b2 || a2 == b1 || a2 == b2) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(OnSeg(a1, b1, b2) || OnSeg(a2, b1, b2) || OnSeg(b1, a1, a2) || OnSeg(b2, a1, a2))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> CheckSSProperIntersection(a1, a2, b1, b2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ensure lines intersect first!!! cross(v, w) != 0</span></span><br><span class="line"><span class="function">Point <span class="title">LLIntersection</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line">    Vector v = a2 - a1, w = b2 - b1, u = a1 - b1;</span><br><span class="line">    assert(cross(v, w) != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">double</span> t1 = cross(w, u) / cross(v, w);</span><br><span class="line">    <span class="keyword">return</span> a1 + v * t1;</span><br><span class="line">&#125; <span class="comment">// Line: 2 Points</span></span><br><span class="line"></span><br><span class="line"><span class="function">Point <span class="title">LLIntPV</span><span class="params">(Point P, Vector v, Point Q, Vector w)</span> </span>&#123;</span><br><span class="line">    Vector u = P - Q;</span><br><span class="line">    assert(cross(v, w) != <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">double</span> t = cross(w, u) / cross(v, w);</span><br><span class="line">    <span class="keyword">return</span> P + v * t;</span><br><span class="line">&#125; <span class="comment">// Line: Point + Vector</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PLDist</span><span class="params">(Point P, Point A, Point B)</span> </span>&#123; <span class="comment">// Point-Line</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(cross(B - P, A - P) / length(A - B));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PSDist</span><span class="params">(Point P, Point A, Point B)</span> </span>&#123; <span class="comment">// Point-Segment</span></span><br><span class="line">    <span class="keyword">if</span>(A == B) <span class="keyword">return</span> length(P - A);</span><br><span class="line">    <span class="keyword">if</span>(sgn(dot(A-P, B-A)) == <span class="number">1</span>) <span class="keyword">return</span> length(A - P);</span><br><span class="line">    <span class="keyword">if</span>(sgn(dot(B-P, B-A)) == <span class="number">-1</span>) <span class="keyword">return</span> length(B - P);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(cross(B-P, A-P) / length(A-B));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">SSDist</span><span class="params">(Point a1, Point a2, Point b1, Point b2)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// segment - segment</span></span><br><span class="line">    <span class="keyword">if</span>(CheckSSIntersection(a1, a2, b1, b2)) <span class="keyword">return</span> <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">return</span> min(min(PSDist(a1,b1,b2), PSDist(a2,b1,b2)), min(PSDist(b1,a1,a2), PSDist(b2,a1,a2)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// Polygon Operations</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="built_in">vector</span>&lt;Point&gt; Polygon;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PolygonArea</span><span class="params">(<span class="keyword">const</span> Polygon&amp; p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sz = p.size();</span><br><span class="line">    <span class="keyword">double</span> tot = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sz - <span class="number">1</span>; ++i)</span><br><span class="line">        tot += cross(p[i]-p[<span class="number">0</span>], p[i+<span class="number">1</span>]-p[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">fabs</span>(tot / <span class="number">2.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Point x;</span><br><span class="line">    Polygon pol;</span><br><span class="line">    <span class="keyword">int</span> q; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--) &#123;</span><br><span class="line">        x.scan();</span><br><span class="line">        pol.push_back(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1f\n"</span>, PolygonArea(pol));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;还没有完成，先把目前的板子贴上来吧：&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="计算几何" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Google Code Jam Round 1A 翻车记（附题解）</title>
    <link href="http://yoursite.com/2019/04/13/Google-Code-Jam-Round-1A-%E6%B8%B8%E8%AE%B0%EF%BC%88%E9%99%84%E9%A2%98%E8%A7%A3%EF%BC%89/"/>
    <id>http://yoursite.com/2019/04/13/Google-Code-Jam-Round-1A-游记（附题解）/</id>
    <published>2019-04-13T04:19:44.000Z</published>
    <updated>2019-05-31T16:53:07.407Z</updated>
    
    <content type="html"><![CDATA[<p>今天第一次打正式的Google Code Jam比赛，从开场思维混乱，前期血崩，时间过去一大半才写好A题的慌张，到发现B题是智障题的窃喜，再到B题奇怪地TLE、WA，以为读错题的恐惧，到没来得及写完C题的遗憾，再到最后发现过掉A题的人是最少的的信息，这次比赛的心路历程真的是一波三折啊！看来不管前期怎么样，都不要放弃希望啊！在这里就记录一下我的感受吧。</p><p>一些客观结果：</p><ul><li>Rank 942 out of 8440, Score 63 / 100</li><li>T1 <font color="green"><b>Accepted</b></font> (31 / 31, 1 try,  <font color="red">3266 byte</font>)</li><li>T2 <font color="green"><b>Accepted</b></font> (32 / 32, 3 tries, <font color="blue">1919 byte</font>)</li><li>T3 <font color="grey">Not attempted</font> (0 / 37, 0 try) (<font color="green">Upsolved</font>, 1 try,  <font color="blue">1487 byte</font>)</li></ul><a id="more"></a><h1 id="Replay"><a href="#Replay" class="headerlink" title="Replay"></a>Replay</h1><p>之前没有看过以前 GCJ 的题目，一看只有三道题，有部分分，感觉有点 OI 赛制的意味啊，那就按顺序开题吧。</p><p>开场看了A题，发现是比较擅长的构造题。模拟了下题意，有一点思路了，但是还没有仔细想。往后瞄了一眼，发现C题好多人都过掉了，读了好几遍题意，结果还是没读懂。这又是字符串题，不算特别擅长。我有点自闭了，最后还是决定开 A 题。</p><p>想了5分钟，基本想出构造的框架了；可是有不少细节。一会我发现小范围需要暴力，一会我发现构造方法需要分奇偶性讨论，常常是我想出来一种解决方案，可是一会儿就被自己 hack 了。中途看了眼榜，发现榜单有 800 页人，可是我错以为是 800 个人了，自认为竞争不激烈，可以随便打。然后就开始休闲敲代码模式，写了改，改了写，不知道弄了多久，终于过自己的样例了，可是也不是多稳。先交一下吧，交上去果然也过 pretest 了。可是一看排名：You are ranked 3890. ？？？什么鬼？这时候我才发现 800 只是页数，我顿时开始慌了。一看当时太休闲了，已经过去 90 分钟了，只剩下 60 分钟解两道题，其中还有一道我读不懂，过 pretest 的题也大概率 FST。算了，这一场就是背，我心想。</p><p>不想看 C 题啊，于是我又迷迷糊糊看了一下 B 题，发现是道交互题。神志不清地想了一下，发现题目给的条件怪多，可是这不就是个 CRT 裸题吗？迅速敲完了代码，交上去，结果 TLE 。发现是调试语句忘删除了，删掉之后信心满满交了一发，结果 WA。这次我可是有点自闭了，我是不是读错题了？慌忙又读了一下题，没问题啊！看了眼代码，发现多组数据，有个数组忘记清空了。唉，我是智障，改了一下就过了。</p><p>看了下表，还有 28 分钟。 C 题应该是不难的吧，那么多人都过了。可是刚开始读题的阴影挥之不去，比赛时间也越来越少。耐下心来仔细读，总算把题目读懂了。还剩下 20 分钟，这题怎么做啊？我想到了一个很靠谱的贪心（本质和 trie 一样），但是中间需要用后缀数组求<code>lcp</code> 。这怎么可能写完？我想到用字符串哈希实现，结果发现那样做可能会炸复杂度。我唯独没有想到直接用 trie 树。只剩 6 分钟了，我突然发现，把字符串翻转之后扔进 trie 树，之后不就是遍历一下 trie 树的智障题了吗？可是实在是来不及写了。想着总要拿到 10 分部分分吧，可是也不会。最后只得在痛苦中迎来比赛的结束。</p><p>刷新了一下，前两道题都过了，可是还是 Rank 1738 。乖乖，连前 1500 都没进，真是状态太差了啊，还要看 Round 1B、Round 1C 的发挥了。唉，真是丢人啊。结果又刷新了一下，发现榜更新 system test 的数据了，排名回到了 942，总算是没崩太惨。看榜发现 C 题是场上通过率最高的题，A 题只有 10% 的人过 system test ！问了问 cyy, wzk 他们也都没有通过 A 题的 system test。就过掉的题目的难度来看，看来也许打得不算太崩？只是时间分配方面问题比较大了。</p><p>经验教训：</p><ul><li>时间分配一定要做好，写代码也要不时看表，不要写得太休闲；</li><li>要相信自己做构造题的能力；</li><li>仔细读题，认真读题，不要读不懂题目就自闭。</li></ul><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><h2 id="Prob-A-构造"><a href="#Prob-A-构造" class="headerlink" title="Prob A. 构造"></a>Prob A. 构造</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>给你一个 $n \times m$ 的长方形棋盘，你需要在棋盘中构造出这么一条哈密尔顿路径（注意：不是回路），使得路径上任何相邻两个节点不在同一行、不在同一列，且不在同一对角线上。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>这道题大体上有两类思路。一种是硬核构造型的，另一种是大力随机化搜索型的。我场上想的是构造性的解法。</p><h4 id="构造性解法"><a href="#构造性解法" class="headerlink" title="构造性解法"></a>构造性解法</h4><p>我们主要的构造思路如下图所示：</p><p><img src="construction.png" alt="构造的主要思路"></p><p>我们先按照上图在棋盘上摆 $n$ 个珠子，按顺序依次访问这些点。然后我们我们重复 $m$ 次，每次按从上到下的顺序把某一行中的珠子向右移动一格，如果到了最右边，就把棋子挪回最左边。同时访问新珠子所在的位置。</p><p>读者可以思考一下，这样下去，如果棋盘足够大，那么我们每次相邻访问的位置总是纵坐标差1，横坐标差很多，或者横坐标差1，纵坐标差很多，或者走的是一个日字，都是可行操作。（注意此处的“很多”指的是上图中任何一段黑线的长度）</p><p>首先我们可以翻转棋盘，使得 $n\leq m$ 。事实上原原本本实现上面的想法也仅仅只遗漏了这几种情况：</p><ul><li>$n$ 是偶数，并且 $n=m$ ，这样从最底下是蓝线，访问完蓝线后，从最底下跳到最上面可能会经过斜对角线。</li><li>$n$ 和 $m$ 中存在小于 5 的数，这样上面分析中的“很多”就不多了，可能出现同对角线的情况。</li></ul><p>对于第一种情况，比较难处理，我稍微改变了一下访问珠子的次序，并且当棋子到达最右侧时采用了另一种策略，对剩下的两列棋子分开处理。我的处理方式对于任何偶数 $n$ 都是成立的，不限于 $n=m$ 的情况。细节见代码。</p><p>对于第二种情况，可以发现 $n=2,m\leq 4$ 时无解， $n=3,m=3$ 时无解。剩下的情况基本上都可以用上面的策略完成，除了 $n=4,m=4$  必须手动打表。</p><p>由此我们就讨论清楚了所有可能的情况，实现一下就好了。</p><p>总时间复杂度： $O(nm)$，已达到理论下界。（因为要输出方案）</p><h4 id="搜索策略（待填坑）"><a href="#搜索策略（待填坑）" class="headerlink" title="搜索策略（待填坑）"></a>搜索策略（待填坑）</h4><p>这个图中的哈密尔顿路径理应是非常多的，所以很多选手提交了随机化搜索的代码也得到了通过。</p><h3 id="再谈哈密尔顿问题（待填坑）"><a href="#再谈哈密尔顿问题（待填坑）" class="headerlink" title="再谈哈密尔顿问题（待填坑）"></a>再谈哈密尔顿问题（待填坑）</h3><p>这个问题可以归约到哈密顿回路这一个著名的 NPC 问题，那么这里也拓展一下我所见到的哈密顿回路相关知识吧。</p><p>CYY提到了哈密尔顿回路问题中的 Dirac 定理，内容如下：</p><blockquote><p>设一个无向图中有 $N$ 个节点，若所有节点的度数都大于等于 $N/2$ ，则哈密尔顿回路一定存在。</p></blockquote><p>这个定理在这道题中还是蛮适用的，每个节点和大于 $nm-2n-2m$  个节点连边，在 $n,m$ 都比较大的情况下是可以满足上面的条件的。而 Dirac 定理的证明是构造性的，我们也可以直接得到一条这样的哈密尔顿路径。</p><p>还有一个著名的定理是有关竞赛图的。竞赛图指的是给完全图每条边定向之后得到的有向图。</p><blockquote><ol><li>竞赛图必有哈密尔顿路径</li><li>竞赛图有哈密尔顿回路 $\Leftrightarrow$ 竞赛图强联通</li></ol></blockquote><p><strong>证明：</strong> 先证明（1）。这个证明使用反证法。假如不存在哈密尔顿路径，那么我们一定能够找到这个图的最长路径，记为 $a\to b \to c \cdots \to e$。考虑不在最长路径的 $p$ 点，根据最长的性质，一定不能有 $p\to a, e \to p$ 的边。那么图就如下所示了。可是考虑红色笔画出的边该如何定向呢？无论红边如何定向，一定会存在 $a\to e$ 路径上的一点 $c$ ，使得有这么一条路径 $a\to c\to p\to c’ \to e$ ，从而与最长路的性质相矛盾。如下图所示。</p><p><img src="CompetitionGraph.png" alt="竞赛图必有哈密尔顿路径"></p><p>有关的博文：</p><p><a href="https://blog.csdn.net/a_crazy_czy/article/details/73611366" target="_blank" rel="noopener">竞赛图的兰道定理</a></p><p><a href="https://blog.csdn.net/baidu_36797646/article/details/82883976" target="_blank" rel="noopener">BZOJ 4727: POI2017 竞赛图相关</a></p><p><a href="https://www.xuebuyuan.com/3203762.html" target="_blank" rel="noopener">哈密顿回路相关总结</a></p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, m, swp;</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; ans;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> add(x, y) ans.emplace_back(x, y)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    swp = <span class="literal">false</span>;</span><br><span class="line">    read(n, m);</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; nxt(n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(n &gt; m) swap(n, m), swp = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">2</span> &amp;&amp; m &lt;= <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n == <span class="number">3</span> &amp;&amp; m == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"IMPOSSIBLE"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(m == <span class="number">4</span>) &#123;</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">4</span>, <span class="number">3</span>);</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">            add(<span class="number">2</span>, <span class="number">4</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">            add(<span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line">            add(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">3</span>);</span><br><span class="line">            add(<span class="number">4</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">2</span>, <span class="number">2</span>);</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">4</span>);</span><br><span class="line">            add(<span class="number">4</span>, <span class="number">2</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">4</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            nxt[<span class="number">1</span>] = nxt[<span class="number">3</span>] = <span class="number">3</span>;</span><br><span class="line">            nxt[<span class="number">2</span>] = nxt[<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m - <span class="number">2</span>; ++i) &#123;</span><br><span class="line">                add(<span class="number">1</span>, nxt[<span class="number">1</span>]++);</span><br><span class="line">                add(<span class="number">4</span>, nxt[<span class="number">4</span>]++);</span><br><span class="line">                add(<span class="number">3</span>, nxt[<span class="number">3</span>]++);</span><br><span class="line">                add(<span class="number">2</span>, nxt[<span class="number">2</span>]++);</span><br><span class="line">            &#125;</span><br><span class="line">            add(<span class="number">4</span>, m - <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">2</span>, m);</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">3</span>, <span class="number">2</span>);</span><br><span class="line">            add(<span class="number">4</span>, m);</span><br><span class="line">            add(<span class="number">2</span>, m - <span class="number">1</span>);</span><br><span class="line">            add(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n &amp; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            nxt[i] = (i&amp;<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                add(j, nxt[j]);</span><br><span class="line">                <span class="keyword">if</span>(++nxt[j] == m + <span class="number">1</span>) nxt[j] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">            nxt[i] = (i &amp; <span class="number">1</span>) ? <span class="number">3</span> : <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m - <span class="number">2</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">                add(j, nxt[j]++);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        add(n - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        add(n, m - <span class="number">1</span>);</span><br><span class="line">        add(n - <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        add(n, m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> r = n - <span class="number">2</span>; r &gt; <span class="number">0</span>; r -= <span class="number">2</span>) &#123;</span><br><span class="line">            add(r, m - <span class="number">1</span>);</span><br><span class="line">            add(r - <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">            add(r, m);</span><br><span class="line">            add(r - <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"POSSIBLE"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : ans) &#123;</span><br><span class="line">        <span class="keyword">if</span>(swp) <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, g.second, g.first);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, g.first, g.second);</span><br><span class="line">    &#125;</span><br><span class="line">    ans.clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; read(T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> kase = <span class="number">1</span>; kase &lt;= T; ++kase) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, kase);</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-B-中国剩余定理"><a href="#Prob-B-中国剩余定理" class="headerlink" title="Prob B. 中国剩余定理"></a>Prob B. 中国剩余定理</h2><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>显然，1到18中两两互质的数有 $16, 9, 5, 7, 11, 13, 17$，每次询问相同的18个数 $x$ 即可得到答案关于 $x$ 的余数。我们把前面的7个数都问一遍，然后用中国剩余定理合并即可得到解，并且解是唯一的。</p><p>这题可真的是一个一眼题，而且甚至连中国剩余定理都不需要，直接暴力合并都可以的，因为答案小于 $10^6$。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pr[] = &#123;<span class="number">16</span>, <span class="number">9</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">17</span>&#125;, rem[<span class="number">7</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ll ans = <span class="number">0</span>, M = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(ll a, ll b, ll&amp; d, ll&amp; x, ll&amp; y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b == <span class="number">0</span>) d = a, x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> exgcd(b, a % b, d, y, x), y -= x * (a / b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">mo</span><span class="params">(ll x, ll mod)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x = -x, x %= mod, x = mod - x;</span><br><span class="line">    <span class="keyword">else</span> x %= mod;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">china</span><span class="params">(ll r, ll m)</span> </span>&#123;</span><br><span class="line">    ll c, t, d, k = r - ans, p;</span><br><span class="line">    exgcd(m, M, d, c, t), p = m / d;</span><br><span class="line">    <span class="keyword">if</span>(k &lt; <span class="number">0</span>) c = -c, t = -t, k = -k;</span><br><span class="line">    assert(k % d == <span class="number">0</span>); <span class="comment">// else there will be no solution</span></span><br><span class="line">    t = mo(t * (k / d), p);</span><br><span class="line">    ans += t * M;</span><br><span class="line">    M *= p;</span><br><span class="line">    ans %= M;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ans = <span class="number">0</span>, M = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; ++i) &#123;</span><br><span class="line">        rep(j, <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, pr[i], <span class="string">" \n"</span>[j == <span class="number">18</span>]);</span><br><span class="line">        fflush(<span class="built_in">stdout</span>);</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        rep(j, <span class="number">1</span>) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;x), rem[i] += x;</span><br><span class="line">        rem[i] %= pr[i];</span><br><span class="line">        china(rem[i], pr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ans);</span><br><span class="line">    fflush(<span class="built_in">stdout</span>);</span><br><span class="line">    <span class="keyword">int</span> verdict; <span class="built_in">cin</span> &gt;&gt; verdict;</span><br><span class="line">    <span class="keyword">return</span> verdict == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T, n, m; read(T, n, m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> kase = <span class="number">1</span>; kase &lt;= T; ++kase) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!solve())</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-C-trie-树dp"><a href="#Prob-C-trie-树dp" class="headerlink" title="Prob C. trie 树dp"></a>Prob C. trie 树dp</h2><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>把每个字符串翻转，加到 trie 树中，trie 树节点的 dp 值维护子树中尚未被使用的字符串个数。在末尾位置将 dp 值加 1。题中配对在 trie 上相当于选中一个节点，挑出其子树内 2 个未被使用的字符串。每个节点只能被选一次。这个操作是可以贪心的，直接 dfs 一遍 trie 树，顺便把能够选的节点都选上即可。状态转移方程：<br>$$<br>dp(v) = \sum_{s \in sons_v} dp(s)\\<br>dp(v) = dp(v) - 2 \text{ if } dp(v) \geq 2<br>$$</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100020</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> go[<span class="number">26</span>], dp;</span><br><span class="line">    node() &#123;</span><br><span class="line">        <span class="built_in">memset</span>(go, <span class="number">0</span>, <span class="keyword">sizeof</span> go);</span><br><span class="line">        dp = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; trie[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> tot, ans, n, rt = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">string</span> word[<span class="number">1020</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p = rt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : s) &#123;</span><br><span class="line">        <span class="keyword">int</span> ch = g - <span class="string">'A'</span>;</span><br><span class="line">        <span class="keyword">if</span>(!trie[p].go[ch]) &#123;</span><br><span class="line">            trie[p].go[ch] = ++tot;</span><br><span class="line">            trie[tot] = node();</span><br><span class="line">        &#125;</span><br><span class="line">        p = trie[p].go[ch];</span><br><span class="line">    &#125;</span><br><span class="line">    trie[p].dp = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; ++i) <span class="keyword">if</span>(trie[v].go[i]) &#123;</span><br><span class="line">        dfs(trie[v].go[i]);</span><br><span class="line">        trie[v].dp += trie[ trie[v].go[i] ].dp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(v != rt &amp;&amp; trie[v].dp &gt;= <span class="number">2</span>) </span><br><span class="line">        trie[v].dp -= <span class="number">2</span>, ans += <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// printf("dfs at node %d: dp = %d\n", v, trie[v].dp);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tot = <span class="number">1</span>;</span><br><span class="line">    trie[rt] = node();</span><br><span class="line">    ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; word[i];</span><br><span class="line">        reverse(word[i].begin(), word[i].end());</span><br><span class="line">        insert(word[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    dfs(rt);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; read(T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> kase = <span class="number">1</span>; kase &lt;= T; ++kase) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Case #%d: "</span>, kase);</span><br><span class="line">        solve();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天第一次打正式的Google Code Jam比赛，从开场思维混乱，前期血崩，时间过去一大半才写好A题的慌张，到发现B题是智障题的窃喜，再到B题奇怪地TLE、WA，以为读错题的恐惧，到没来得及写完C题的遗憾，再到最后发现过掉A题的人是最少的的信息，这次比赛的心路历程真的是一波三折啊！看来不管前期怎么样，都不要放弃希望啊！在这里就记录一下我的感受吧。&lt;/p&gt;
&lt;p&gt;一些客观结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rank 942 out of 8440, Score 63 / 100&lt;/li&gt;
&lt;li&gt;T1 &lt;font color=&quot;green&quot;&gt;&lt;b&gt;Accepted&lt;/b&gt;&lt;/font&gt; (31 / 31, 1 try,  &lt;font color=&quot;red&quot;&gt;3266 byte&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;T2 &lt;font color=&quot;green&quot;&gt;&lt;b&gt;Accepted&lt;/b&gt;&lt;/font&gt; (32 / 32, 3 tries, &lt;font color=&quot;blue&quot;&gt;1919 byte&lt;/font&gt;)&lt;/li&gt;
&lt;li&gt;T3 &lt;font color=&quot;grey&quot;&gt;Not attempted&lt;/font&gt; (0 / 37, 0 try) (&lt;font color=&quot;green&quot;&gt;Upsolved&lt;/font&gt;, 1 try,  &lt;font color=&quot;blue&quot;&gt;1487 byte&lt;/font&gt;)&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="哈密尔顿路径" scheme="http://yoursite.com/tags/%E5%93%88%E5%AF%86%E5%B0%94%E9%A1%BF%E8%B7%AF%E5%BE%84/"/>
    
      <category term="trie" scheme="http://yoursite.com/tags/trie/"/>
    
      <category term="Google Code Jam" scheme="http://yoursite.com/tags/Google-Code-Jam/"/>
    
      <category term="中国剩余定理" scheme="http://yoursite.com/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Codeforces Global Round 2 比赛报告</title>
    <link href="http://yoursite.com/2019/04/06/Codeforces-Global-Round-2-%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/04/06/Codeforces-Global-Round-2-比赛报告/</id>
    <published>2019-04-06T11:21:46.000Z</published>
    <updated>2019-05-06T10:08:06.633Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th><th style="text-align:center">G</th><th style="text-align:center">H</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">00:07</td><td style="text-align:center">00:17</td><td style="text-align:center">00:26</td><td style="text-align:center">00:45</td><td style="text-align:center">01:02</td><td style="text-align:center">——</td><td style="text-align:center">——</td><td style="text-align:center">——</td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"></td><td style="text-align:center">AC</td><td style="text-align:center">AC</td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="red"><b>*1</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">3866</td><td style="text-align:center">3372</td><td style="text-align:center">2631</td><td style="text-align:center">1589</td><td style="text-align:center">1054</td><td style="text-align:center">4</td><td style="text-align:center">7</td><td style="text-align:center">5</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">贪心</td><td style="text-align:center">入门</td><td style="text-align:center">思维</td><td style="text-align:center">DP</td><td style="text-align:center">贪心</td><td style="text-align:center">?</td><td style="text-align:center">构造</td><td style="text-align:center">FWT</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">Mid</font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center">Easy+</td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="red"><b>Hard</b></font></td><td style="text-align:center"><font color="red"><b>Hard</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★★★</td><td style="text-align:center">★★</td></tr></tbody></table><ul><li>Rank 260 /  3138</li><li>Rating  <font color="orange"><b>2139 Master</b></font>  (<font color="green"><b>+59</b></font>) 总算上橙了哈哈</li><li>不过论做题体验来说，这一场的体验真的不怎么好。。。五个签到题，然后三个剩下的题只有个位数人通过。。。一看到 tourist 花了一个小时才AC掉F题，我瞬间就放弃治疗了。整场比赛就是靠着手速上的橙。</li><li>G 题是一道非常好的构造题。</li><li>H 题是个挺神仙的</li><li>cyy 小号 rank 264，再随便打一场也要橙了</li></ul><p>[UPD 2019.05.02] 补掉了 H 题，是一道精妙的 FWT 题。</p><p>[TODO] Solve Problem F.</p><a id="more"></a><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Check-in"><a href="#Check-in" class="headerlink" title="Check-in"></a>Check-in</h2><p>签到题基本上都是一眼题，下面是一句话题解：</p><h3 id="Prob-A"><a href="#Prob-A" class="headerlink" title="Prob A."></a>Prob A.</h3><p>最远的那两个数中一定有一个在数组的最左侧，或者最右侧。贪心即可。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">5030000</span>;</span><br><span class="line"><span class="keyword">int</span> n, a[maxn], l[maxn], r[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> p = n;</span><br><span class="line">    <span class="keyword">while</span>(a[p] == a[<span class="number">1</span>]) p--;</span><br><span class="line">    ans = max(ans, p - <span class="number">1</span>);</span><br><span class="line">    p = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(a[p] == a[n]) p++;</span><br><span class="line">    ans = max(ans, n - p);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Prob-B"><a href="#Prob-B" class="headerlink" title="Prob B."></a>Prob B.</h3><p>二分答案即可。复杂度 $O(n\log^2 n)$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">202000</span>;</span><br><span class="line"><span class="keyword">int</span> n, h, a[maxn], b[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    rep(i, x) b[i] = a[i];</span><br><span class="line">    sort(b + <span class="number">1</span>, b + x + <span class="number">1</span>);</span><br><span class="line">    ll tot = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = x; i &gt; <span class="number">0</span>; i -= <span class="number">2</span>) tot += b[i];</span><br><span class="line">    <span class="keyword">return</span> tot &lt;= h;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;h);</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, r = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l == r - <span class="number">1</span>) mid = r;</span><br><span class="line">        <span class="comment">// printf("BS at l = %d, r = %d, mid = %d\n", l, r, mid);</span></span><br><span class="line">        <span class="keyword">if</span>(judge(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, l);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Prob-C"><a href="#Prob-C" class="headerlink" title="Prob C."></a>Prob C.</h3><p>首先将两个矩阵 $A,B$ 异或起来得到 $A\oplus B$，我们只需要判断能否从 $0$ 矩阵变换到 $A\oplus B$ 即可。那么什么样的矩阵满足条件呢？当且仅当 $A\oplus B$ 的每行、每列均只有偶数个 1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">555</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn], b[maxn][maxn], n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;m);</span><br><span class="line">    rep(i, n) rep(j, m) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i][j]);</span><br><span class="line">    rep(i, n) rep(j, m) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;b[i][j]), a[i][j] ^= b[i][j];</span><br><span class="line"></span><br><span class="line">    rep(i, n) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">        rep(j, m) x ^= a[i][j];</span><br><span class="line">        <span class="keyword">if</span>(x == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    rep(j, m) &#123;</span><br><span class="line">        <span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line">        rep(i, n) y ^= a[i][j];</span><br><span class="line">        <span class="keyword">if</span>(y == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">"No"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Yes"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Prob-D"><a href="#Prob-D" class="headerlink" title="Prob D."></a>Prob D.</h3><p>又是典型的分段线性函数问题。。。总共有两类事件：询问，以及斜率减小1 。按照时间给这些事件排序，然后按着时间线进行模拟即可。复杂度 $O((n+q)\log (n+q))$。当然了，这种做法是离线的，如果预处理斜率变化点，然后放进 <code>set</code> 里即可在线回答询问。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int ll</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200020</span>;</span><br><span class="line"><span class="keyword">int</span> n, q;</span><br><span class="line">ll a[maxn], ans[maxn];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">event</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> tp;</span><br><span class="line">    ll t;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    event(<span class="keyword">char</span> ch, ll tim, <span class="keyword">int</span> d=<span class="number">0</span>): tp(ch), t(tim), id(d) &#123; &#125;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> event &amp;e) <span class="keyword">const</span> &#123; </span><br><span class="line">        <span class="keyword">return</span> t &lt; e.t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">multiset</span>&lt;event&gt; line;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    rep(i, n) read(a[i]);</span><br><span class="line">    sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; ++i)</span><br><span class="line">        line.emplace(<span class="string">'S'</span>, a[i] - a[i - <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">    read(q);</span><br><span class="line">    rep(i, q) &#123;</span><br><span class="line">        <span class="keyword">int</span> l, r;</span><br><span class="line">        read(l, r);</span><br><span class="line">        line.emplace(<span class="string">'Q'</span>, r - l + <span class="number">1</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ll cur = <span class="number">0</span>, sp = n, tim = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : line) &#123;</span><br><span class="line">        <span class="keyword">if</span>(tim &lt; g.t) cur += sp * (g.t - tim), tim = g.t;</span><br><span class="line">        <span class="keyword">if</span>(g.tp == <span class="string">'Q'</span>) ans[g.id] = cur;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(g.tp == <span class="string">'S'</span>) sp--;</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, q) <span class="built_in">printf</span>(<span class="string">"%lld%c"</span>, ans[i], <span class="string">" \n"</span>[i==q]);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-E-贪心"><a href="#Prob-E-贪心" class="headerlink" title="Prob E. 贪心"></a>Prob E. 贪心</h2><p><b>题意</b>：给你边长为 $2^i$ 的边 $a_i$ 条（$0\leq i \leq n$），问最多可以摆出来多少个三角形。每条边最多只能用一次。</p><p><b>题解：</b> 显然，能组成三角形的无序三元组必然长这样： $(2^i,2^j,2^j) \text{ where } i \leq j$</p><p>考虑这样的贪心策略，在考虑长度为 $2^i$ 的边时（简称长边），记录有多少条边长小于 $2^i$  的边（简称短边）还没有用，然后尽量多地形成 (短, 长, 长) 这样的三角形，再之后尽量形成 (长, 长, 长) 这样的三角形，剩下没用完的长边数量加到短边数量里即可。对所有 $i$ 重复这个过程即可完成此题。其实写起来就几行，详细步骤见代码吧。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">303000</span>;</span><br><span class="line">ll a[maxn], n, tot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n);</span><br><span class="line">    rep(i, n) read(a[i]);</span><br><span class="line">    ll left = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> cons = min(left, a[i] / <span class="number">2</span>);</span><br><span class="line">        tot += cons;</span><br><span class="line">        a[i] -= cons * <span class="number">2</span>;</span><br><span class="line">        left -= cons;</span><br><span class="line">        tot += a[i] / <span class="number">3</span>;</span><br><span class="line">        a[i] %= <span class="number">3</span>;</span><br><span class="line">        left += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, tot);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-G-构造好题"><a href="#Prob-G-构造好题" class="headerlink" title="Prob G. 构造好题"></a>Prob G. 构造好题</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>你有 $n$ 个攻击力为 $1$ 的士兵，你需要把他们分成 $m$ 个兵团，来攻击 $m$ 个敌人，其中第 $i$ 个敌人的血量为 $hp_i$ 。你的攻击是分轮进行的，每一轮中，你都需要给你的每个兵团确定一个敌人作为目标，不妨设这一兵团共有 $x$ 人，那么作为目标的敌人的血量就会降低 $x$ 点。一个敌人死亡当且仅当他的血量小于等于0，那么问你至少需要多少轮，才能把所有敌人都杀死，并输出攻击方案。</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>每一轮攻击一共对敌人造成 $n$ 点伤害，一个很显然的轮数下界就是：<br>$$<br>ans \geq \left\lceil \frac{ \sum_{i=1}^m hp_i}{n} \right\rceil<br>$$<br>事实上，这个下界也能达到，下面叙述构造方法，感觉真的是脑洞大开。首先，这道题目的限制非常宽松，我们采用的策略有很大的余地，但是过于自由也给我们带来了无从下手的这种困境。我们首先来想一种易于实现的策略，使得问题的限制加强一些，然后来分析其可行性。我们想要有一种分配兵团的方案，使得下面的策略是最优的：</p><ul><li><p>我们按照顺序杀敌，即先击杀1号敌人，再击杀2号敌人…… </p></li><li><p>我们试图按照走马灯的方法对敌人进行攻击，即按照顺序考虑我们的兵团，若某个敌人没有死，则兵团攻击这个敌人；若这个敌人死了，那么兵团攻击下一个敌人。</p></li></ul><p>这两个策略可以描述为下面的代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, p = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">    <span class="keyword">while</span>(hp[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        hp[i] -= sz[p % m];</span><br><span class="line">        ans.push_back(i);</span><br><span class="line">        p++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种策略很好实现，可是它什么时候是最优的呢？当且仅当杀死 $1,2,\cdots,m-1$ 这些敌人时，刚好将他们的血量降为0 。设我们兵团的分配方案是第 $i$ 个兵团 $a_i$ 人，记<br>$$<br>pre_k = \sum_{i=1}^k a_i<br>$$<br>那么，上面的条件就等价于：（ $k \in [1,m-1],p\in [1,m]$ ）<br>$$<br>\forall k \text{ } \exists p \text{ 使得} \sum_{i=1}^k hp_i \equiv pre_p \pmod n<br>$$<br>这个东西怎么构造？这个东西其实就是随便构造呢。我们要使 $pre$ 数组出现所有 $hp$ 模 $n$ 的前缀和，一个显然的思路就是把 $\sum\limits_{i=1}^k hp_i \pmod n$ 全部求出来，然后排个序，得到 $sum$ 数组，然后就令 $pre_i = sum_i$ 即可 满足上面的条件。再差分一下就可以得到 $a$ 数组了，至此，我们就构造完毕了，模拟一下上面的走马灯即可得到方案。</p><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>其实这道题除了下界比较好想之外，剩下的步骤都不好想，但是一旦看完题解，我就觉得原来这么简单。好的构造题正是这样啊！场上A出这道题的人真是神仙。</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><p>稍微加了点IO优化，结果居然现在成了 Execution time 榜的榜首2333</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 0, i##_end_ = (n); i &lt; i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() getchar()</span></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1020000</span>;</span><br><span class="line"><span class="keyword">int</span> n, m, hp[maxn], tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; sums, sz, ans;</span><br><span class="line">    read(n, m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        read(hp[i]);</span><br><span class="line">        tot += hp[i];</span><br><span class="line">        <span class="keyword">if</span>(i != m - <span class="number">1</span>) </span><br><span class="line">            sums.push_back(tot % n);</span><br><span class="line">    &#125;</span><br><span class="line">    sums.push_back(<span class="number">0</span>);</span><br><span class="line">    sums.push_back(n);</span><br><span class="line">    sort(sums.begin(), sums.end());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i + <span class="number">1</span> &lt; <span class="keyword">int</span>(sums.size()); ++i)</span><br><span class="line">        sz.push_back(sums[i + <span class="number">1</span>] - sums[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>, p = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        <span class="keyword">while</span>(hp[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            hp[i] -= sz[p % m];</span><br><span class="line">            ans.push_back(i);</span><br><span class="line">            p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ans.size() % m != <span class="number">0</span>) ans.push_back(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="keyword">int</span>(ans.size()) / m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; ++i) &#123;</span><br><span class="line">        write(sz[i]);</span><br><span class="line">        <span class="built_in">putchar</span>(i+<span class="number">1</span>==m ? <span class="string">'\n'</span> : <span class="string">' '</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">int</span>(ans.size()); ++i) &#123;</span><br><span class="line">        write(ans[i] + <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(i%m==m<span class="number">-1</span> ? <span class="string">'\n'</span> : <span class="string">' '</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-H-精妙的-FWT"><a href="#Prob-H-精妙的-FWT" class="headerlink" title="Prob H. 精妙的 FWT"></a>Prob H. 精妙的 FWT</h2><p>想要找到更多有关 FWT 的内容，可以参考<a href="https://yang2002.github.io/2019/04/27/%E9%9B%86%E5%90%88%E5%B9%82%E7%BA%A7%E6%95%B0-FMT-FWT%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">我的这篇博客</a>。</p><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>给定 $a,b,c$ ，以及 $n$ 个 $k$ 位 bitmask $A_i,B_i,C_i$ ，求下面 $n$ 个集合幂级数的异或 FWT，即：<br>$$<br>\prod_{1\leq i\leq n} (ax^{A_i}+bx^{B_i}+cx^{C_i})<br>$$<br>数据范围：$n\leq 10^5,k\leq 17,0\leq A_i,B_i,C_i &lt; 2^k,$</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>按照正常的 FWT 思路，就是把这 $n$ 个集合幂级数分别求出 FWT，然后再点乘起来，然后再做 IFWT。复杂度是 $O(nk2^k)$ 的，无法通过此题。</p><p>但是这道题需要注意的一点是每一个集合幂级数都只有三项，并且 $a,b,c$ 是固定的。回顾 FWT 的公式：<br>$$<br>\hat{f}(S) = \sum_{T\subseteq 2^U} f(T) (-1)^{|S\cap T|}<br>$$<br>因此每个集合幂级数 FWT 之后也仅仅会有 $\pm a \pm b \pm c$ 这么 8 种项。为了使问题更加简单，我们进行这样的变换： $B_i:=B_i \oplus A_i,C_i := C_i \oplus A_i, A_i := 0$ 。变换之后我们得出的结果的第 $S$ 项就等价于答案的第 $S\oplus xorsum$ 项，其中 $xorsum = \oplus_{i=1}^n A_i$。可以发现，这样做之后只剩下 $a\pm b \pm c$ 这四项了。</p><p>我们的一个重要观察是，将 FWT 之后的这 $n$ 个集合幂级数乘起来的结果中，对于一个固定的位置 $S$ ，这一项的系数一定是 $(a+b+c)^x (a+b-c)^y (a-b+c)^z (a-b-c)^w$ 的形式。如果我们能够把 $x,y,z,w$ 解出来，整个问题就解决了。首先，我们有一个最朴素的关系式：<br>$$<br>x+y+z+w = n<br>$$<br>之后有两种说法，一种是<a href="https://codeforces.com/blog/entry/66411" target="_blank" rel="noopener">官方题解</a>所说的考虑所有 $n$ 个 FWT 之后的幂级数的第 $S$ 项之和，然后再多考虑一个条件即可得到四个方程；另一种则非常简洁、对称、优美，可是我对这种方法还没有简洁优美的证明。这种方法是这样的：</p><ul><li>将 $A_i\oplus B_i$ 的值统计入一个数组 $f$，对 $f$ FWT之后，对于其第 $S$ 项有：$x+y-z-w=f[S]$。</li><li>将 $A_i\oplus C_i$ 的值统计入一个数组 $g$，对 $g$ FWT之后，对于其第 $S$ 项有：$x-y+z-w=g[S]$。</li><li>将 $B_i\oplus C_i$ 的值统计入一个数组 $h$，对 $h$ FWT之后，对于其第 $S$ 项有：$x-y-z+w=h[S]$。</li></ul><p>然后消元法即可。</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Generated by powerful Codeforces Tool</span></span><br><span class="line"><span class="comment"> * Author: YangDavid</span></span><br><span class="line"><span class="comment"> * Time: 2019-05-02 16:57:53</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">102000</span>, MS = (<span class="number">1</span> &lt;&lt; <span class="number">17</span>) + <span class="number">2</span>, MOD = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">int</span> A[maxn], B[maxn], C[maxn], n, k, full;</span><br><span class="line"><span class="keyword">int</span> AB[MS], AC[MS], BC[MS], ans[MS], out[MS];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">if</span>(x &gt;= MOD) x -= MOD; <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD; <span class="keyword">return</span> x; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inv2 = qpow(<span class="number">2</span>, MOD - <span class="number">2</span>), inv4 = qpow(<span class="number">4</span>, MOD - <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fwt</span><span class="params">(<span class="keyword">int</span>* arr, <span class="keyword">int</span> dwt = <span class="number">1</span>)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l, r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; ++i)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S) <span class="keyword">if</span>(~S&gt;&gt;i&amp;<span class="number">1</span>) &#123;</span><br><span class="line">            l = arr[S], r = arr[S|(<span class="number">1</span>&lt;&lt;i)];</span><br><span class="line">            arr[S] = mo(l + r);</span><br><span class="line">            arr[S|(<span class="number">1</span>&lt;&lt;i)] = mo(l - r);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> iv = qpow(full, MOD - <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span>(dwt == <span class="number">-1</span>) <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        arr[S] = muln(arr[S], iv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> gg[<span class="number">4</span>], a, b, c, xorsum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gett</span><span class="params">(ll s, ll t, ll u, ll v)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = muln(mo(mo(s+t)+mo(u+v)), inv4);</span><br><span class="line">    <span class="keyword">int</span> y = mo(muln(mo(s+t), inv2) - x);</span><br><span class="line">    <span class="keyword">int</span> z = mo(muln(mo(s+u), inv2) - x);</span><br><span class="line">    <span class="keyword">int</span> w = mo(muln(mo(s+v), inv2) - x);</span><br><span class="line">    <span class="keyword">return</span> muln( muln(qpow(gg[<span class="number">0</span>],x),qpow(gg[<span class="number">1</span>],y)) , muln(qpow(gg[<span class="number">2</span>],z),qpow(gg[<span class="number">3</span>],w)) );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d%d"</span>, &amp;n, &amp;k, &amp;a, &amp;b, &amp;c); full = (<span class="number">1</span> &lt;&lt; k);</span><br><span class="line">    gg[<span class="number">0</span>] = mo(mo(a+b)+c), gg[<span class="number">1</span>] = mo(mo(a+b)-c), gg[<span class="number">2</span>] = mo(mo(a-b)+c), gg[<span class="number">3</span>] = mo(mo(a-b)-c);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>, &amp;A[i], &amp;B[i], &amp;C[i]);</span><br><span class="line">        AB[A[i]^B[i]]++, AC[A[i]^C[i]]++, BC[B[i]^C[i]]++;</span><br><span class="line">        xorsum ^= A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    fwt(AB), fwt(AC), fwt(BC);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S) &#123;</span><br><span class="line">        ans[S] = gett(n, AB[S], AC[S], BC[S]);</span><br><span class="line">    &#125;</span><br><span class="line">    fwt(ans, <span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        out[S] = ans[S ^ xorsum];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">0</span>; S &lt; full; ++S)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d%c"</span>, out[S], <span class="string">" \n"</span>[S==full<span class="number">-1</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;G&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;H&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:07&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:17&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:26&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:45&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;01:02&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3866&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3372&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2631&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1589&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1054&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;7&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;入门&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;思维&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DP&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;构造&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;FWT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Easy+&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;Hard&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;Hard&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Rank 260 /  3138&lt;/li&gt;
&lt;li&gt;Rating  &lt;font color=&quot;orange&quot;&gt;&lt;b&gt;2139 Master&lt;/b&gt;&lt;/font&gt;  (&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+59&lt;/b&gt;&lt;/font&gt;) 总算上橙了哈哈&lt;/li&gt;
&lt;li&gt;不过论做题体验来说，这一场的体验真的不怎么好。。。五个签到题，然后三个剩下的题只有个位数人通过。。。一看到 tourist 花了一个小时才AC掉F题，我瞬间就放弃治疗了。整场比赛就是靠着手速上的橙。&lt;/li&gt;
&lt;li&gt;G 题是一道非常好的构造题。&lt;/li&gt;
&lt;li&gt;H 题是个挺神仙的&lt;/li&gt;
&lt;li&gt;cyy 小号 rank 264，再随便打一场也要橙了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[UPD 2019.05.02] 补掉了 H 题，是一道精妙的 FWT 题。&lt;/p&gt;
&lt;p&gt;[TODO] Solve Problem F.&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
      <category term="Codeforces" scheme="http://yoursite.com/tags/Codeforces/"/>
    
      <category term="构造" scheme="http://yoursite.com/tags/%E6%9E%84%E9%80%A0/"/>
    
      <category term="快速沃尔什变换（FWT）" scheme="http://yoursite.com/tags/%E5%BF%AB%E9%80%9F%E6%B2%83%E5%B0%94%E4%BB%80%E5%8F%98%E6%8D%A2%EF%BC%88FWT%EF%BC%89/"/>
    
  </entry>
  
  <entry>
    <title>Comet OJ Contest #0 比赛报告</title>
    <link href="http://yoursite.com/2019/03/31/Comet-OJ-Contest-0-%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/03/31/Comet-OJ-Contest-0-比赛报告/</id>
    <published>2019-03-31T15:49:15.000Z</published>
    <updated>2019-05-06T10:08:10.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">00:27</td><td style="text-align:center">02:21</td><td style="text-align:center">——</td><td style="text-align:center">——</td><td style="text-align:center">——</td><td style="text-align:center">——</td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">AC</td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+5</b></font></td><td style="text-align:center"><font color="green"><b>+1</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center"><font color="red"><b>*</b></font></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">312</td><td style="text-align:center">60</td><td style="text-align:center">34</td><td style="text-align:center">9</td><td style="text-align:center">6</td><td style="text-align:center">6</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">贪心</td><td style="text-align:center">概率</td><td style="text-align:center">图论</td><td style="text-align:center">DP</td><td style="text-align:center">?</td><td style="text-align:center">数学</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">948</font></td><td style="text-align:center"><font color="blue">2739</font></td><td style="text-align:center"><font color="blue">2733</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="red">3040</font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="green">Easy+</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td><td style="text-align:center"><font color="red"><b>Hard</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center">★</td><td style="text-align:center">★</td><td style="text-align:center">★★</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★★★</td></tr></tbody></table><p>这是当时参加Wannafly冬令营时使用的 Comet OJ 第一次举办的比赛，出题人是tangjz，感觉题目质量还挺不错，可以看到出题人、主办方都是挺用心的呢。</p><p>采用的是3小时的ACM赛制，然而罚时还是按照20min算的，A题有点不细心了，结果罚时就上了天 QAQ</p><p>比赛时写出了前两道题，Rank 52 out of 507，感觉海星。cyy也打了，Rank 45。</p><p>B题开始一直担心常数问题，害怕会T，但是这次比赛充分体现出了DP常数之小</p><p><a href="https://www.cometoj.com/contest/34" target="_blank" rel="noopener">比赛链接</a></p><p>[UPD1: 2019-04-13] 补掉了F题，更新了F题代码。</p><p>[TODO1] Solve Problem D<br>[TODO2] Solve Problem E</p><a id="more"></a><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><h2 id="Prob-A-数学，分类讨论"><a href="#Prob-A-数学，分类讨论" class="headerlink" title="Prob A. 数学，分类讨论"></a>Prob A. 数学，分类讨论</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>题意是求下面关于 $(x,y,z)$ 的方程的解的数目，以及对于所有解，求 $\sum\limits_{(x,y,z)}xyz$，参数 $n$ 已给定，无穷则输出 <code>infty</code>：<br>$$<br>\sqrt{x-\sqrt{n}} + \sqrt{y} - \sqrt{z} = 0<br>$$</p><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><ul><li>当 $n$ 是完全平方数时，答案为 <code>infty</code></li><li>否则，稍作变换即得到： $x-\sqrt{n} = z+y-\sqrt{4yz} \text{                               }(y&lt;z)$<ul><li>如果 $4\nmid n$，则无解；</li><li>否则，枚举 $n/4$ 的每个因子 $d$（要求 $d\times d&lt;n/4$），则 $(d+\frac nd, d, \frac nd)$ 就是一组解，累加答案即可。</li></ul></li></ul><p>需要注意的一点是，这道题卡常数，不能用 <code>long long</code>，必须用 <code>unsigned int</code> 。</p><p>复杂度 $O(T\sqrt{n})$</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> n, tot, mul = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    tot = mul = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%u"</span>, &amp;n);</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) &#123; <span class="built_in">puts</span>(<span class="string">"infty"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(ll v = <span class="built_in">sqrt</span>(n - <span class="number">1</span>); v * v &lt;= n; ++v) </span><br><span class="line">        <span class="keyword">if</span>(v * v == n) &#123; <span class="built_in">puts</span>(<span class="string">"infty"</span>); <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(n % <span class="number">4</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0 0"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    n /= <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">unsigned</span> y = <span class="number">1</span>; y * y &lt;= n; ++y)  <span class="keyword">if</span>(n % y == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> z = n / y, x = y + z;</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">44722</span> &amp;&amp; x * x &lt; n) <span class="keyword">continue</span>;</span><br><span class="line">        tot++;</span><br><span class="line">        mul = mul +  (<span class="number">1L</span>L * x * n % MOD);</span><br><span class="line">        mul %= MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%u %u\n"</span>, tot, mul);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> T; <span class="built_in">scanf</span>(<span class="string">"%u"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-B-概率，DP"><a href="#Prob-B-概率，DP" class="headerlink" title="Prob B. 概率，DP"></a>Prob B. 概率，DP</h2><p>这道题的DP转移是很显然的，但是细节略多。具体细节见代码吧。</p><p>复杂度 $O(\sum n^2m + nk)$</p><p>Bonus1：据说有 $O(nm\log n+n\log k) $ 的做法？不太会。</p><p>Bonus2：据说可以不用 $\sum n \leq1000, \sum m\leq 1000$ 的条件，cyy提了一个维护关于 $p, q$ 多项式的做法</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">505</span>, MOD = <span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUFF_SIZE = <span class="number">1</span> &lt;&lt; <span class="number">20</span>;</span><br><span class="line"><span class="keyword">char</span> BUFF[BUFF_SIZE],*BB,*BE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() (BB == BE ? (BE = (BB = BUFF) + fread(BUFF,1,BUFF_SIZE,stdin),BB == BE ? EOF : *BB++) : *BB++)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> qpow(x, MOD - <span class="number">2</span>);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>)  x += MOD;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> inv100 = inv(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">2</span>][maxn][maxn], n, m, k, p, q, r;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dp, <span class="number">0</span>, <span class="keyword">sizeof</span> dp);</span><br><span class="line">    dp[<span class="number">1</span>][<span class="number">1</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    read(n, m, k, p, q);</span><br><span class="line">    p = muln(p, inv100);</span><br><span class="line">    q = muln(q, inv100);</span><br><span class="line">    r = mo(<span class="number">1</span> + MOD-q + MOD-p);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t = <span class="number">2</span>; t &lt;= m; ++t) &#123;</span><br><span class="line">        <span class="keyword">auto</span> c = dp[t &amp; <span class="number">1</span>], o = dp[(t<span class="number">-1</span>) &amp; <span class="number">1</span>];</span><br><span class="line">        c[<span class="number">1</span>][<span class="number">0</span>] = muln(o[<span class="number">1</span>][<span class="number">0</span>], r);</span><br><span class="line">        <span class="keyword">int</span> lim = min(t, n);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(t &lt;= n) &#123;</span><br><span class="line">            c[lim][<span class="number">0</span>] = muln(o[lim<span class="number">-1</span>][<span class="number">0</span>], p);</span><br><span class="line">            c[lim][lim<span class="number">-1</span>] = muln(o[lim<span class="number">-1</span>][lim<span class="number">-2</span>], q);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            c[lim][<span class="number">0</span>] = mo(o[lim][<span class="number">0</span>] + muln(o[lim<span class="number">-1</span>][<span class="number">0</span>], p));</span><br><span class="line">            c[lim][lim<span class="number">-1</span>] = mo(o[lim][lim<span class="number">-1</span>] + muln(o[lim<span class="number">-1</span>][lim<span class="number">-2</span>], q));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> l = <span class="number">2</span>; l &lt; lim; ++l) &#123;</span><br><span class="line">            c[l][<span class="number">0</span>] = mo(mo(muln(r, o[l][<span class="number">0</span>]) + muln(p, o[l<span class="number">-1</span>][<span class="number">0</span>]))) + muln(p, o[l][<span class="number">1</span>]);</span><br><span class="line">            c[l][l<span class="number">-1</span>] = mo(mo(muln(r, o[l][l<span class="number">-1</span>]) + muln(q, o[l<span class="number">-1</span>][l<span class="number">-2</span>])) + muln(q, o[l][l<span class="number">-2</span>]));</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> v = <span class="number">1</span>; v &lt; l<span class="number">-1</span>; ++v) &#123;</span><br><span class="line">                c[l][v] = mo(mo(muln(r, o[l][v]) + muln(p, o[l][v+<span class="number">1</span>])) + muln(q, o[l][v<span class="number">-1</span>]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>, (*c)[<span class="number">505</span>] = dp[m &amp; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> f = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; ++j) f = mo(f + c[i][j]);</span><br><span class="line">        ans = mo(ans + muln(qpow(i, k), f));</span><br><span class="line">    &#125;</span><br><span class="line">    ans = muln(ans, qpow(<span class="number">100</span>, m - <span class="number">1</span>));</span><br><span class="line">    write(ans), <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-C-图论，并查集，BCC"><a href="#Prob-C-图论，并查集，BCC" class="headerlink" title="Prob C. 图论，并查集，BCC"></a>Prob C. 图论，并查集，BCC</h2><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution"></a>Solution</h3><p>题意可以转化为下面的等价形式：</p><blockquote><p>在一个逐步加边的图中，问每一次加边之后，图中各个边双联通分量有多少对点两两可达。</p></blockquote><p>显然需要这么搞：</p><ul><li>用并查集维护连通性，如果加的边不在连通块里，则合并联通块，这很容易。</li><li>对于每个连通块，维护边双联通分量。这不可避免地需要解决合并两个边双联通分量的问题。</li></ul><p>到这一步就是这道题的难点了。究竟怎么合并边双呢？</p><p>一种想法，cyy提出这就是LCT进行动态缩点的裸题。可惜我不会LCT啊QAQ</p><p>实际上，标准做法十分清新自然。我们只需要把边以时间为权值求一下最小生成森林，然后再并查集暴力合并边双就好了。因为有了最小生成森林，树的形态就不会发生变化，直接暴力就可以了。</p><p>实现上需要注意这几个问题：</p><ul><li>如何用并查集暴力合并边双？可以注意到，边双在图中也是组成一棵树的。而任何一条非树边在边双树上都对应一条链，直接使用暴力求LCA的方法往上跳，边跳边缩就可以了，如边双图中的 <code>v</code> 跳到父节点 <code>pa[v]</code> 时，将 <code>v</code> 的信息合并到 <code>pa[v]</code> 上即可。</li><li>有关按秩合并。合并边双时，如果每次都是 <code>v</code> 合并到 <code>pa[v]</code> 上，复杂度可能会退化（因为数据毒瘤）。按秩合并在这道题其实不是特别自然，实现起来需要小心。（我没有按秩合并，加了个读入优化，1966ms/4000ms通过的）</li></ul><p>如果仔细实现，这道题的时间复杂度是 $O(n\alpha(n)+m)$</p><h3 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h3><p>(106 lines, 2733 byte)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1, i##_end_ = (n); i &lt;= i##_end_; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; pii;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> BUFF_SIZE = <span class="number">1</span> &lt;&lt; <span class="number">20</span>;</span><br><span class="line"><span class="keyword">char</span> BUFF[BUFF_SIZE],*BB,*BE;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> gc() (BB == BE ? (BE = (BB = BUFF) + fread(BUFF,1,BUFF_SIZE,stdin),BB == BE ? EOF : *BB++) : *BB++)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">    x = <span class="number">0</span>; <span class="keyword">int</span> f = <span class="number">1</span>; <span class="keyword">char</span> ch = gc();</span><br><span class="line">    <span class="keyword">while</span>(!<span class="built_in">isdigit</span>(ch) ) &#123; <span class="keyword">if</span>(ch == <span class="string">'-'</span>) f = <span class="number">-1</span>; ch = gc();&#125;</span><br><span class="line">    <span class="keyword">while</span>( <span class="built_in">isdigit</span>(ch) ) &#123;x = x * <span class="number">10</span> + ch - <span class="number">48</span>; ch = gc();&#125;</span><br><span class="line">    x *= f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt; <span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(T&amp; x, Args&amp;... args)</span></span></span><br><span class="line"><span class="function"></span>&#123; read(x), read(args...); &#125;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="built_in">putchar</span>(<span class="string">'-'</span>), write(-x);</span><br><span class="line">    <span class="keyword">if</span>(x &gt; <span class="number">9</span>) write(x / <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x % <span class="number">10</span> + <span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">2002000</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; mst[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;pii&gt; e;</span><br><span class="line"><span class="keyword">int</span> n, m, _x, _y, intree[maxn], fa[maxn], dep[maxn];</span><br><span class="line"></span><br><span class="line">ll ans, tot;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">dsu</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> pa[maxn], sz[maxn];</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) &#123;</span><br><span class="line">            pa[i] = i;</span><br><span class="line">            sz[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x == pa[x]) <span class="keyword">return</span> x;</span><br><span class="line">        <span class="keyword">return</span> pa[x] = find(pa[x]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> son, <span class="keyword">int</span> fat)</span> </span>&#123;</span><br><span class="line">        son = find(son), fat = find(fat);</span><br><span class="line">        <span class="keyword">if</span>(son == fat) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        ans -= <span class="number">1L</span>L * sz[son] * (sz[son] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        ans -= <span class="number">1L</span>L * sz[fat] * (sz[fat] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        sz[fat] += sz[son];</span><br><span class="line">        sz[son] = <span class="number">0</span>;</span><br><span class="line">        pa[son] = fat;</span><br><span class="line">        ans += <span class="number">1L</span>L * sz[fat] * (sz[fat] - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> depth, <span class="keyword">int</span> fath)</span> </span>&#123;</span><br><span class="line">    fa[v] = fath, dep[v] = depth;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> g : mst[v]) <span class="keyword">if</span>(g != fath)</span><br><span class="line">        dfs(g, depth + <span class="number">1</span>, v);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">jump</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    x = s.find(x), y = s.find(y);</span><br><span class="line">    <span class="keyword">while</span>(x != y) &#123;</span><br><span class="line">        <span class="keyword">if</span>(dep[x] &lt; dep[y]) swap(x, y);</span><br><span class="line">        <span class="keyword">int</span> to = s.find(fa[x]);</span><br><span class="line">        assert(s.merge(x, to));</span><br><span class="line">        x = to;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    read(n, m);</span><br><span class="line">    s.init(n);</span><br><span class="line">    e.clear(); e.emplace_back(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    rep(i, n) mst[i].clear();</span><br><span class="line">    rep(i, m) &#123;</span><br><span class="line">        read(_x, _y);</span><br><span class="line">        e.emplace_back(_x, _y);</span><br><span class="line">        <span class="keyword">if</span>(s.merge(_x, _y)) &#123;</span><br><span class="line">            intree[i] = <span class="literal">true</span>;</span><br><span class="line">            mst[_x].push_back(_y);</span><br><span class="line">            mst[_y].push_back(_x);</span><br><span class="line">        &#125; <span class="keyword">else</span> intree[i] = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(fa, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>) * (n + <span class="number">20</span>));</span><br><span class="line">    rep(i, n) <span class="keyword">if</span>(!fa[i]) dfs(i, <span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line">    s.init(n);</span><br><span class="line">    ans = tot = <span class="number">0</span>;</span><br><span class="line">    rep(i, m) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!intree[i]) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = e[i].first, y = e[i].second;</span><br><span class="line">            jump(x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        tot ^= ans * i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, tot);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; read(T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-F-数学，几何，状压dp"><a href="#Prob-F-数学，几何，状压dp" class="headerlink" title="Prob F. 数学，几何，状压dp"></a>Prob F. 数学，几何，状压dp</h2><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>小象同学有 $n$ 根木棍。他想用其中的一些木棍摆成一些多边形的形状，使得这些多边形面积的乘积尽量大，你可以帮帮他吗？</p><p>这里要求每根木棍至多在一个多边形中被使用，这也意味着有些木棍可能不被使用。此外，在每个多边形中，不能存在两根木棍位于同一条直线上，换句话说，多边形的每条边应该对应恰好一根木棍。</p><p>注意，摆出的每个多边形应该由不严格相交的边组成，且多边形面积应该严格大于 $0$。若不能摆出任何一个多边形，则视多边形面积的乘积为 $0$。</p><p>$$<br>n\leq 12<br>$$</p><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution"></a>Solution</h3><p>首先很容易看出，如果我们能够解决给出 $n$ 条边，求出这 $n$ 条边能围出多边形的最大面积，那么我们就预处理出所有边的子集，然后再枚举子集的子集状压 dp 即可完成此题。而这个问题怎么做呢？我们介绍两个结论：</p><p>首先是 $n$ 边形存在的条件，这个还算比较显然：<br>$$<br>\sum_{i=1}^n a_i &gt; 2 \times \max_{1\leq i\leq n}a_i<br>$$<br>而要使这个 $n$ 边形面积最大，我们有下面的结论：</p><blockquote><p>面积最大的多边形是凸多边形，且是圆内接多边形，且这个圆的半径是唯一确定的。</p></blockquote><p><strong>证明</strong>： </p><p>这个结论可以用调整法得到，不妨尝试画一个半径为 $\frac 12 \max\{a_1,a_2,\cdots,a_m\}$ 的圆，将多边形的边依次对应到圆周上。那么：若多边形覆盖的周长总和超过一个圆周，则意味着半径不够大，通过增大半径可以得到圆心在多边形内的圆满足条件；若周长总和没有达到一个圆周，分两种情况考虑：那么也意味着半径不够大，但通过增大半径得到的圆对应的圆心会在多边形外部。</p><p>在这种构造多边形的方法里，多边形的面积等于圆的面积减去 $m$ 个弓型区域的面积。不妨留下这些弓型<br>区域并尝试改变多边形的形状，通过这样的调整可以枚举到这个边长集合对应的所有可能的凸多边形形<br>状。与此同时，圆被改变为周长固定的闭合图形，而在二维空间里，周长固定的闭合图形中面积最大的<br>就是圆，因此多边形面积最大时一定能够画出这样的圆，使得多边形的点都在圆周上。那么剩下的工作<br>便是二分确定唯一的半径 $R$，然后算出相应的多边形面积。</p><p><strong>注意：这个证明抄自tls题解，但是部分内容是有问题的！！！正确的调整方式请见代码！明天会更新正确证明</strong></p><p>其实这个多边形的边的顺序也是可以随意调换的。根据上面的证明方法，这个圆形的半径同样也是唯一确定的，使用二分搜索模拟上面的调整过程即可实现。</p><p>时间复杂度 $O(2^n \log \epsilon \cdot n + 3^n)$</p><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><p>这道题是很妙的一道题！感觉这个结论很具有普遍意义！</p><h3 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxs = (<span class="number">1</span> &lt;&lt; <span class="number">12</span>) + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">double</span> eps = <span class="number">1e-9</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">double</span> PI = <span class="number">3.1415926535897932384626L</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n, a[<span class="number">20</span>], full, fa[maxs];</span><br><span class="line"><span class="keyword">bool</span> valid[maxs];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">double</span> dp[maxs], area[maxs];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; way[maxs];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">double</span> <span class="title">calc</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e;</span><br><span class="line">    <span class="keyword">int</span> tot = <span class="number">0</span>, sz = e.size();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="keyword">if</span>(state &gt;&gt; i &amp; <span class="number">1</span>) &#123;</span><br><span class="line">            e.push_back(a[i]);</span><br><span class="line">            tot += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    sz = e.size();</span><br><span class="line">    <span class="keyword">if</span>(tot &lt;= e.back() * <span class="number">2</span>) &#123;</span><br><span class="line">        valid[state] = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.0L</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    valid[state] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">bool</span> half = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">auto</span> TooLarge = [&amp;](<span class="keyword">long</span> <span class="keyword">double</span> R) -&gt; <span class="keyword">bool</span> &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> theta = <span class="number">0.0L</span>, f = R*R*<span class="number">2.0L</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz - <span class="number">1</span>; ++i)</span><br><span class="line">            theta += <span class="built_in">acos</span>((f - <span class="number">1.0L</span>*e[i]*e[i]) / f);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> last = <span class="built_in">acos</span>((f - <span class="number">1.0L</span>*e[sz<span class="number">-1</span>]*e[sz<span class="number">-1</span>]) / f);</span><br><span class="line">        <span class="keyword">if</span>(theta &lt;= PI) &#123; </span><br><span class="line">            half = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> theta - last &gt; <span class="number">0.0L</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            half = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">return</span> theta + last &lt; <span class="number">2.0L</span> * PI;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">double</span> l = (<span class="keyword">long</span> <span class="keyword">double</span>)e.back() / <span class="number">2.0L</span>, r = <span class="number">10000</span>;</span><br><span class="line">    rep(i, <span class="number">100</span>) &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> mid = (l + r) / <span class="number">2.0L</span>;</span><br><span class="line">        <span class="keyword">if</span>(TooLarge(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    TooLarge(r);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">double</span> sq = <span class="number">0.0L</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sz; ++i) &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> p = (r + r + e[i]) / <span class="number">2.0L</span>;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">double</span> triangle = sqrtl(p * (p-e[i])) * (p-r);</span><br><span class="line">        <span class="keyword">if</span>(i == sz - <span class="number">1</span> &amp;&amp; half) sq -= triangle;</span><br><span class="line">        <span class="keyword">else</span> sq += triangle;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sq;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a, a + n);</span><br><span class="line">    full = (<span class="number">1</span> &lt;&lt; n) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">1</span>; S &lt;= full; ++S)</span><br><span class="line">        area[S] = calc(S);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">double</span> bestdp = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">int</span> choice = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> S = <span class="number">1</span>; S &lt;= full; ++S) &#123;</span><br><span class="line">        dp[S] = area[S], fa[S] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> T = (S - <span class="number">1</span>) &amp; S; T; T = (T - <span class="number">1</span>) &amp; S) <span class="keyword">if</span>(valid[T]) &#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[S] + eps &lt; dp[T] * dp[T ^ S]) &#123;</span><br><span class="line">                dp[S] = area[T] * dp[T ^ S];</span><br><span class="line">                fa[S] = S ^ T;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(dp[S] &gt; bestdp + eps) &#123;</span><br><span class="line">            bestdp = dp[S];</span><br><span class="line">            choice = S;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.12Lf\n"</span>, bestdp);</span><br><span class="line">    <span class="keyword">int</span> S = choice, tmp = choice, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(tmp) tmp = fa[tmp], cnt++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(S) &#123;</span><br><span class="line">        <span class="keyword">int</span> cho = S ^ fa[S];</span><br><span class="line">        <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; polygon;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">            <span class="keyword">if</span>(cho &gt;&gt; i &amp; <span class="number">1</span>) polygon.push_back(a[i]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, <span class="keyword">int</span>(polygon.size()));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> g : polygon) <span class="built_in">printf</span>(<span class="string">" %d"</span>, g);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">        S = fa[S];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T; <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--) solve();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="官方题解"><a href="#官方题解" class="headerlink" title="官方题解"></a>官方题解</h2><p><a href="https://yang2002.github.io/2019/03/31/Comet-OJ-Contest-0-%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/cometoj_tutorial.pdf" target="_blank" rel="noopener">题解下载链接</a></p><div class="row">    <embed src="cometoj_tutorial.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:27&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;02:21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+5&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+1&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;312&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;60&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;34&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;9&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;贪心&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;概率&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;图论&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DP&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;数学&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;948&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;2739&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;2733&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;3040&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy+&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;Hard&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★★&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;这是当时参加Wannafly冬令营时使用的 Comet OJ 第一次举办的比赛，出题人是tangjz，感觉题目质量还挺不错，可以看到出题人、主办方都是挺用心的呢。&lt;/p&gt;
&lt;p&gt;采用的是3小时的ACM赛制，然而罚时还是按照20min算的，A题有点不细心了，结果罚时就上了天 QAQ&lt;/p&gt;
&lt;p&gt;比赛时写出了前两道题，Rank 52 out of 507，感觉海星。cyy也打了，Rank 45。&lt;/p&gt;
&lt;p&gt;B题开始一直担心常数问题，害怕会T，但是这次比赛充分体现出了DP常数之小&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cometoj.com/contest/34&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;比赛链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[UPD1: 2019-04-13] 补掉了F题，更新了F题代码。&lt;/p&gt;
&lt;p&gt;[TODO1] Solve Problem D&lt;br&gt;[TODO2] Solve Problem E&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="dp" scheme="http://yoursite.com/tags/dp/"/>
    
      <category term="概率与期望" scheme="http://yoursite.com/tags/%E6%A6%82%E7%8E%87%E4%B8%8E%E6%9C%9F%E6%9C%9B/"/>
    
      <category term="Comet OJ" scheme="http://yoursite.com/tags/Comet-OJ/"/>
    
      <category term="边双联通分量" scheme="http://yoursite.com/tags/%E8%BE%B9%E5%8F%8C%E8%81%94%E9%80%9A%E5%88%86%E9%87%8F/"/>
    
      <category term="数学结论" scheme="http://yoursite.com/tags/%E6%95%B0%E5%AD%A6%E7%BB%93%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>AtCoder ExaWizards 2019 比赛报告</title>
    <link href="http://yoursite.com/2019/03/31/AtCoder-ExaWizards-2019-%E6%AF%94%E8%B5%9B%E6%8A%A5%E5%91%8A/"/>
    <id>http://yoursite.com/2019/03/31/AtCoder-ExaWizards-2019-比赛报告/</id>
    <published>2019-03-31T15:48:51.000Z</published>
    <updated>2019-05-06T08:48:26.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Overview"><a href="#Overview" class="headerlink" title="Overview"></a>Overview</h1><table><thead><tr><th style="text-align:left">Status</th><th style="text-align:center">A</th><th style="text-align:center">B</th><th style="text-align:center">C</th><th style="text-align:center">D</th><th style="text-align:center">E</th><th style="text-align:center">F</th></tr></thead><tbody><tr><td style="text-align:left">Contest</td><td style="text-align:center">00:01</td><td style="text-align:center">00:03</td><td style="text-align:center"><font color="red">(0)</font></td><td style="text-align:center">01:15</td><td style="text-align:center">——</td><td style="text-align:center">——</td></tr><tr><td style="text-align:left">Upsolve</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center"><font color="green"><strong>OK</strong></font></td><td style="text-align:center">AC</td><td style="text-align:center"></td></tr><tr><td style="text-align:left">Attempt</td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"><font color="green"><b>+</b></font></td><td style="text-align:center"><font color="red"><b>*</b></font></td><td style="text-align:center"></td></tr><tr><td style="text-align:left">AC count</td><td style="text-align:center">3132</td><td style="text-align:center">3081</td><td style="text-align:center">469</td><td style="text-align:center">227</td><td style="text-align:center">134</td><td style="text-align:center">14</td></tr><tr><td style="text-align:left">Tag</td><td style="text-align:center">入门</td><td style="text-align:center">入门</td><td style="text-align:center">思维</td><td style="text-align:center">DP</td><td style="text-align:center">概率</td><td style="text-align:center">?</td></tr><tr><td style="text-align:left">Coding</td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Thinking</td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="green">Easy-</font></td><td style="text-align:center"><font color="blue">Mid</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="blue">Mid-</font></td><td style="text-align:center"><font color="grey"><b>?</b></font></td></tr><tr><td style="text-align:left">Stars</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:center">★★</td><td style="text-align:center">★★</td><td style="text-align:center">★★</td><td style="text-align:center"></td></tr></tbody></table><ul><li>Rank 245 /  3138</li><li>Performance 2073，感觉海星</li><li>Rating 1442 (<font color="green"><b>+254</b></font>)  <font color="cyan"><b>Specialist</b></font></li><li>再次感受到 AtCoder 的凶残，AB就是入门题，然后两题和三题之间的难度鸿沟简直无敌</li><li>看来我是打不破AtCoder比赛过不了C题的魔咒了。。。D都AC了，C题还不会做</li><li>D题我的DP复杂度不是最优秀的，但是因为常数小，也通过了。</li><li>E题是挺简单的一道概率题，场上没看，有点可惜了。</li></ul><p>[TODO: Solve Problem F]</p><a id="more"></a><h1 id="Tutorials"><a href="#Tutorials" class="headerlink" title="Tutorials"></a>Tutorials</h1><h2 id="Prob-C-思维"><a href="#Prob-C-思维" class="headerlink" title="Prob C. 思维"></a>Prob C. 思维</h2><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><p>一个核心的观察就是，无论怎么喊口令，人之间的相对顺序是不改变的。因此只需要维护最左边和最右边未出界的人的编号就可以了，换句话说，逆着时间序，并且反着处理口令，设最左边出界处有一个人，就是看这个人最远能到哪；最右边有个人，看他最左能到哪。然后减一下就好了。</p><p>时间复杂度 $O(n+q)$</p><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">202000</span>;</span><br><span class="line"><span class="keyword">int</span> n, q, lb, rb;</span><br><span class="line"><span class="keyword">char</span> s[maxn], t[maxn], d[maxn];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d\n%s\n"</span>, &amp;n, &amp;q, s + <span class="number">1</span>);</span><br><span class="line">    lb = <span class="number">0</span>, rb = n + <span class="number">1</span>; <span class="comment">// (lb, rb) available</span></span><br><span class="line">    rep(i, q) <span class="built_in">scanf</span>(<span class="string">"%c %c\n"</span>, &amp;t[i], &amp;d[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = q; i ; --i) &#123;</span><br><span class="line">        <span class="keyword">if</span>(s[lb+<span class="number">1</span>]==t[i] &amp;&amp; d[i]==<span class="string">'L'</span>) lb++;</span><br><span class="line">        <span class="keyword">if</span>(s[rb<span class="number">-1</span>]==t[i] &amp;&amp; d[i]==<span class="string">'R'</span>) rb--;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(s[lb]==t[i] &amp;&amp; d[i]==<span class="string">'R'</span>) lb--;</span><br><span class="line">        <span class="keyword">if</span>(s[rb]==t[i] &amp;&amp; d[i]==<span class="string">'L'</span>) rb++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, rb - lb - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-D-dp，好题"><a href="#Prob-D-dp，好题" class="headerlink" title="Prob D. dp，好题"></a>Prob D. dp，好题</h2><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>你有 $n$ 个大小不超过 $1\cdot 10^5$ 的模数，以及一个不超过 $1\cdot 10^5$ 的数 $x$ 。你现在考虑这 $n$ 个模数的所有 $n!$ 中排列 $p_1,p_2,\cdots,p_n$，求 $x\bmod p_1\bmod p_2\cdots\bmod p_n$ 的和。即：</p><h3 id="Observation"><a href="#Observation" class="headerlink" title="Observation"></a>Observation</h3><p>核心观察是当 $x$ 模一个小数之后，模大数会变得没有效果。因此这启发我们把模数数组从大到小排序。令 $dp[p][v]$ 为考虑过 $a[1],a[2],\cdots,a[p]$ 这些模数之后， $x$ 变为 $v$ 的方案数。</p><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><p>考虑直接暴力实现上述过程。</p><p>刷表法，直接朴素枚举每种状态下一步放在哪里。预处理阶乘之后，复杂度 $O(n^2m)$，不是特别好写。稍微加了一个优化，就是不考虑无需计算的状态，然后就过了。（458 ms）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD = <span class="number">1000000007</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">muln</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="number">1L</span>L * x * y % MOD; &#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">qpow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = muln(x, x))</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = muln(ret, x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">inv</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123; <span class="keyword">return</span> qpow(x, MOD - <span class="number">2</span>); &#125;</span><br><span class="line"><span class="keyword">int</span> n, s, a[<span class="number">202</span>], dp[<span class="number">202</span>][<span class="number">102000</span>], fac[<span class="number">222</span>] = &#123;<span class="number">1</span>&#125;, ifac[<span class="number">222</span>] = &#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; valid[<span class="number">202</span>];</span><br><span class="line"><span class="built_in">bitset</span>&lt;102000&gt; vis[<span class="number">202</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">P</span><span class="params">(<span class="keyword">int</span> N, <span class="keyword">int</span> M)</span> </span>&#123; <span class="keyword">return</span> muln(fac[N], ifac[N-M]); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;s);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">200</span>; ++i) &#123;</span><br><span class="line">        fac[i] = muln(fac[i - <span class="number">1</span>], i);</span><br><span class="line">        ifac[i] = inv(fac[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    rep(i, n) <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a[i]);</span><br><span class="line">    sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>, greater&lt;<span class="keyword">int</span>&gt;());</span><br><span class="line">    dp[<span class="number">0</span>][s] = <span class="number">1</span>;</span><br><span class="line">    valid[<span class="number">0</span>].push_back(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j : valid[i]) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k = i + <span class="number">1</span>; k &lt;= n; ++k) &#123;</span><br><span class="line">                dp[k][j % a[k]] += muln(dp[i][j], P(n-i<span class="number">-1</span>, k-i<span class="number">-1</span>));</span><br><span class="line">                dp[k][j % a[k]] %= MOD;</span><br><span class="line">                <span class="keyword">if</span>(!vis[k][j%a[k]]) &#123;</span><br><span class="line">                    vis[k][j%a[k]] = <span class="literal">true</span>;</span><br><span class="line">                    valid[k].push_back(j % a[k]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= s; ++i) res = (res + <span class="number">1L</span>L * i * dp[n][i] % MOD) % MOD;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; res &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Prob-E-概率，数学"><a href="#Prob-E-概率，数学" class="headerlink" title="Prob E. 概率，数学"></a>Prob E. 概率，数学</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(i, n) for(int i = 1; i &lt;= n; ++i)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> Type int</span></span><br><span class="line"><span class="keyword">const</span> Type MOD = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">namespace</span> ModOp &#123;</span><br><span class="line">    <span class="function"><span class="keyword">inline</span> Type <span class="title">mo</span><span class="params">(Type x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(x &gt;= MOD) x -= MOD;</span><br><span class="line">        <span class="keyword">if</span>(x &lt; <span class="number">0</span>) x += MOD;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">MF</span> &#123;</span></span><br><span class="line">        Type v;</span><br><span class="line">        MF(Type x = <span class="number">0</span>): v(mo(x)) &#123; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">operator</span> <span class="title">Type</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> v; &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> + (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> mo(v + f.v); &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> - (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> mo(v - f.v); &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> * (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> <span class="number">1L</span>L * v * f.v % MOD; &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> / (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v / f.v; &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> - () <span class="keyword">const</span> &#123; <span class="keyword">return</span> MOD - v; &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> &gt;&gt; (<span class="keyword">int</span> idx) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &gt;&gt; idx; &#125;</span><br><span class="line">        MF <span class="keyword">operator</span> &lt;&lt; (<span class="keyword">int</span> idx) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &lt;&lt; idx; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> == (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v == f.v; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> != (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v != f.v; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &gt; f.v; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &lt; f.v; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &gt;= (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &gt;= f.v; &#125;</span><br><span class="line">        <span class="keyword">bool</span> <span class="keyword">operator</span> &lt;= (<span class="keyword">const</span> MF&amp; f) <span class="keyword">const</span> &#123; <span class="keyword">return</span> v &lt;= f.v; &#125;</span><br><span class="line">        <span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span> &lt;&lt; (ostream&amp; out, MF f) &#123; <span class="keyword">return</span> out &lt;&lt; f.v; &#125;</span><br><span class="line">        <span class="keyword">friend</span> istream&amp; <span class="keyword">operator</span> &gt;&gt; (istream&amp; in, MF f) &#123; <span class="keyword">return</span> in &gt;&gt; f.v; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">bool</span> <span class="title">scan</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;v) != <span class="number">-1</span>; &#125;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123; <span class="built_in">printf</span>(<span class="string">"%d"</span>, v); &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> Type</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="function">T <span class="title">qpow</span><span class="params">(T x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    T ret = T(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(; y; y &gt;&gt;= <span class="number">1</span>, x = x * x)</span><br><span class="line">        <span class="keyword">if</span>(y &amp; <span class="number">1</span>) ret = ret * x;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> ModOp::MF;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">200200</span>, N = <span class="number">200000</span>;</span><br><span class="line">MF fac[maxn], ifac[maxn], onlyb[maxn], onlyw[maxn];</span><br><span class="line"><span class="function">MF <span class="title">C</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; y) <span class="keyword">return</span> MF(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> fac[x] * ifac[y] * ifac[x - y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b, w;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fac[<span class="number">0</span>] = ifac[<span class="number">0</span>] = MF(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= N; ++i) &#123;</span><br><span class="line">        fac[i] = fac[i - <span class="number">1</span>] * MF(i);</span><br><span class="line">        ifac[i] = qpow(fac[i], MOD - <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;b, &amp;w);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= b + w; ++i) &#123;</span><br><span class="line">        onlyb[i] = onlyb[i - <span class="number">1</span>] + C(i<span class="number">-1</span>, w<span class="number">-1</span>) * qpow(MF(<span class="number">2</span>), MOD<span class="number">-1</span>-i);</span><br><span class="line">        onlyw[i] = onlyw[i - <span class="number">1</span>] + C(i<span class="number">-1</span>, b<span class="number">-1</span>) * qpow(MF(<span class="number">2</span>), MOD<span class="number">-1</span>-i);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; b + w; ++i) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; (MF(<span class="number">1</span>) + onlyb[i] - onlyw[i]) * qpow(MF(<span class="number">2</span>), MOD - <span class="number">2</span>) &lt;&lt; <span class="string">'\n'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Overview&quot;&gt;&lt;a href=&quot;#Overview&quot; class=&quot;headerlink&quot; title=&quot;Overview&quot;&gt;&lt;/a&gt;Overview&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Status&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;A&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;B&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;C&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;D&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;E&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;F&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Contest&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:01&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;00:03&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;(0)&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;01:15&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;——&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Upsolve&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;strong&gt;OK&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;AC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Attempt&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;red&quot;&gt;&lt;b&gt;*&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;AC count&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3132&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3081&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;469&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;227&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;134&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Tag&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;入门&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;入门&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;思维&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;DP&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;概率&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;?&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Coding&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Thinking&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;green&quot;&gt;Easy-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;blue&quot;&gt;Mid-&lt;/font&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;font color=&quot;grey&quot;&gt;&lt;b&gt;?&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;Stars&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;★★&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Rank 245 /  3138&lt;/li&gt;
&lt;li&gt;Performance 2073，感觉海星&lt;/li&gt;
&lt;li&gt;Rating 1442 (&lt;font color=&quot;green&quot;&gt;&lt;b&gt;+254&lt;/b&gt;&lt;/font&gt;)  &lt;font color=&quot;cyan&quot;&gt;&lt;b&gt;Specialist&lt;/b&gt;&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;再次感受到 AtCoder 的凶残，AB就是入门题，然后两题和三题之间的难度鸿沟简直无敌&lt;/li&gt;
&lt;li&gt;看来我是打不破AtCoder比赛过不了C题的魔咒了。。。D都AC了，C题还不会做&lt;/li&gt;
&lt;li&gt;D题我的DP复杂度不是最优秀的，但是因为常数小，也通过了。&lt;/li&gt;
&lt;li&gt;E题是挺简单的一道概率题，场上没看，有点可惜了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[TODO: Solve Problem F]&lt;/p&gt;
    
    </summary>
    
      <category term="比赛" scheme="http://yoursite.com/categories/%E6%AF%94%E8%B5%9B/"/>
    
    
      <category term="AtCoder" scheme="http://yoursite.com/tags/AtCoder/"/>
    
      <category term="思维" scheme="http://yoursite.com/tags/%E6%80%9D%E7%BB%B4/"/>
    
      <category term="dp" scheme="http://yoursite.com/tags/dp/"/>
    
      <category term="概率" scheme="http://yoursite.com/tags/%E6%A6%82%E7%8E%87/"/>
    
  </entry>
  
</feed>
